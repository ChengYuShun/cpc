Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CALL
    CLASS
    DOT
    ENDFUNCTION
    ENDPROCEDURE
    ENDTYPE
    FUNCTION
    INHERITS
    LEFT_BRACE
    NEW
    POINTER
    PRIVATE
    PROCEDURE
    PUBLIC
    RETURN
    RETURNS
    RIGHT_BRACE
    TYPE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DECLARE ID COLON ID
Rule 4     statement -> CONSTANT ID EQUAL expression
Rule 5     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 6     dimensions -> dimensions COMMA dimension
Rule 7     dimensions -> dimension
Rule 8     dimension -> expression COLON expression
Rule 9     statement -> ID ASSIGN expression
Rule 10    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
Rule 11    indexes -> indexes COMMA expression
Rule 12    indexes -> expression
Rule 13    statement -> INPUT ID
Rule 14    statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 15    statement -> OUTPUT output_expression
Rule 16    output_expression -> output_expression COMMA expression
Rule 17    output_expression -> expression
Rule 18    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 19    statement -> IF expression THEN statements ENDIF
Rule 20    statement -> CASE OF ID cases ENDCASE
Rule 21    cases -> cases case
Rule 22    cases -> case
Rule 23    case -> indexes COLON statements
Rule 24    case -> OTHERWISE COLON statements
Rule 25    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 26    statement -> REPEAT statements UNTIL expression
Rule 27    statement -> WHILE expression statements ENDWHILE
Rule 28    statement -> expression
Rule 29    expression -> ID
Rule 30    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 31    expression -> expression OR expression
Rule 32    expression -> expression AND expression
Rule 33    expression -> NOT expression
Rule 34    expression -> expression EQUAL expression
Rule 35    expression -> expression NOT_EQUAL expression
Rule 36    expression -> expression LESS expression
Rule 37    expression -> expression GREATER expression
Rule 38    expression -> expression LESS_EQUAL expression
Rule 39    expression -> expression GREATER_EQUAL expression
Rule 40    expression -> expression MUL expression
Rule 41    expression -> expression DIV expression
Rule 42    expression -> expression PLUS expression
Rule 43    expression -> expression MINUS expression
Rule 44    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 45    expression -> BOOLEAN
Rule 46    expression -> CHAR
Rule 47    expression -> STRING
Rule 48    expression -> REAL
Rule 49    expression -> INTEGER

Terminals, with rules where they appear

AND                  : 32
ARRAY                : 5
ASSIGN               : 9 10 25
BOOLEAN              : 45
CALL                 : 
CASE                 : 20
CHAR                 : 46
CLASS                : 
COLON                : 3 5 8 23 24
COMMA                : 6 11 16
CONSTANT             : 4
DECLARE              : 3 5
DIV                  : 41
DOT                  : 
ELSE                 : 18
ENDCASE              : 20
ENDFUNCTION          : 
ENDIF                : 18 19
ENDPROCEDURE         : 
ENDTYPE              : 
ENDWHILE             : 27
EQUAL                : 4 34
FOR                  : 25
FUNCTION             : 
GREATER              : 37
GREATER_EQUAL        : 39
ID                   : 3 3 4 5 5 9 10 13 14 20 25 25 29 30
IF                   : 18 19
INHERITS             : 
INPUT                : 13 14
INTEGER              : 49
LEFT_BRACE           : 
LEFT_PAREN           : 44
LEFT_SQUARE          : 5 10 14 30
LESS                 : 36
LESS_EQUAL           : 38
MINUS                : 43
MUL                  : 40
NEW                  : 
NEXT                 : 25
NOT                  : 33
NOT_EQUAL            : 35
OF                   : 5 20
OR                   : 31
OTHERWISE            : 24
OUTPUT               : 15
PLUS                 : 42
POINTER              : 
PRIVATE              : 
PROCEDURE            : 
PUBLIC               : 
REAL                 : 48
REPEAT               : 26
RETURN               : 
RETURNS              : 
RIGHT_BRACE          : 
RIGHT_PAREN          : 44
RIGHT_SQUARE         : 5 10 14 30
STRING               : 47
THEN                 : 18 19
TO                   : 25
TYPE                 : 
UNTIL                : 26
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

case                 : 21 22
cases                : 20 21
dimension            : 6 7
dimensions           : 5 6
expression           : 4 8 8 9 10 11 12 16 17 18 19 25 25 26 27 28 31 31 32 32 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44
indexes              : 10 11 14 23 30
output_expression    : 15 16
statement            : 1 2
statements           : 1 18 18 19 23 24 25 26 27 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 6

state 2

    (2) statements -> statement .

    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDCASE         reduce using rule 2 (statements -> statement .)
    OTHERWISE       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DECLARE . ID COLON ID
    (5) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 22


state 4

    (9) statement -> ID . ASSIGN expression
    (10) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (29) expression -> ID .
    (30) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE

    ASSIGN          shift and go to state 23
    LEFT_SQUARE     shift and go to state 24
    OR              reduce using rule 29 (expression -> ID .)
    AND             reduce using rule 29 (expression -> ID .)
    EQUAL           reduce using rule 29 (expression -> ID .)
    NOT_EQUAL       reduce using rule 29 (expression -> ID .)
    LESS            reduce using rule 29 (expression -> ID .)
    GREATER         reduce using rule 29 (expression -> ID .)
    LESS_EQUAL      reduce using rule 29 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 29 (expression -> ID .)
    MUL             reduce using rule 29 (expression -> ID .)
    DIV             reduce using rule 29 (expression -> ID .)
    PLUS            reduce using rule 29 (expression -> ID .)
    MINUS           reduce using rule 29 (expression -> ID .)
    DECLARE         reduce using rule 29 (expression -> ID .)
    CONSTANT        reduce using rule 29 (expression -> ID .)
    ID              reduce using rule 29 (expression -> ID .)
    INPUT           reduce using rule 29 (expression -> ID .)
    OUTPUT          reduce using rule 29 (expression -> ID .)
    IF              reduce using rule 29 (expression -> ID .)
    CASE            reduce using rule 29 (expression -> ID .)
    FOR             reduce using rule 29 (expression -> ID .)
    REPEAT          reduce using rule 29 (expression -> ID .)
    WHILE           reduce using rule 29 (expression -> ID .)
    NOT             reduce using rule 29 (expression -> ID .)
    LEFT_PAREN      reduce using rule 29 (expression -> ID .)
    BOOLEAN         reduce using rule 29 (expression -> ID .)
    CHAR            reduce using rule 29 (expression -> ID .)
    STRING          reduce using rule 29 (expression -> ID .)
    REAL            reduce using rule 29 (expression -> ID .)
    INTEGER         reduce using rule 29 (expression -> ID .)
    $end            reduce using rule 29 (expression -> ID .)
    UNTIL           reduce using rule 29 (expression -> ID .)
    ENDWHILE        reduce using rule 29 (expression -> ID .)
    ELSE            reduce using rule 29 (expression -> ID .)
    ENDIF           reduce using rule 29 (expression -> ID .)
    ENDCASE         reduce using rule 29 (expression -> ID .)
    OTHERWISE       reduce using rule 29 (expression -> ID .)
    NEXT            reduce using rule 29 (expression -> ID .)


state 5

    (4) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 25


state 6

    (28) statement -> expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    DECLARE         reduce using rule 28 (statement -> expression .)
    CONSTANT        reduce using rule 28 (statement -> expression .)
    ID              reduce using rule 28 (statement -> expression .)
    INPUT           reduce using rule 28 (statement -> expression .)
    OUTPUT          reduce using rule 28 (statement -> expression .)
    IF              reduce using rule 28 (statement -> expression .)
    CASE            reduce using rule 28 (statement -> expression .)
    FOR             reduce using rule 28 (statement -> expression .)
    REPEAT          reduce using rule 28 (statement -> expression .)
    WHILE           reduce using rule 28 (statement -> expression .)
    NOT             reduce using rule 28 (statement -> expression .)
    LEFT_PAREN      reduce using rule 28 (statement -> expression .)
    BOOLEAN         reduce using rule 28 (statement -> expression .)
    CHAR            reduce using rule 28 (statement -> expression .)
    STRING          reduce using rule 28 (statement -> expression .)
    REAL            reduce using rule 28 (statement -> expression .)
    INTEGER         reduce using rule 28 (statement -> expression .)
    $end            reduce using rule 28 (statement -> expression .)
    UNTIL           reduce using rule 28 (statement -> expression .)
    ENDWHILE        reduce using rule 28 (statement -> expression .)
    ELSE            reduce using rule 28 (statement -> expression .)
    ENDIF           reduce using rule 28 (statement -> expression .)
    ENDCASE         reduce using rule 28 (statement -> expression .)
    OTHERWISE       reduce using rule 28 (statement -> expression .)
    NEXT            reduce using rule 28 (statement -> expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 7

    (13) statement -> INPUT . ID
    (14) statement -> INPUT . ID LEFT_SQUARE indexes RIGHT_SQUARE

    ID              shift and go to state 38


state 8

    (15) statement -> OUTPUT . output_expression
    (16) output_expression -> . output_expression COMMA expression
    (17) output_expression -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    output_expression              shift and go to state 39
    expression                     shift and go to state 40

state 9

    (18) statement -> IF . expression THEN statements ELSE statements ENDIF
    (19) statement -> IF . expression THEN statements ENDIF
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 42

state 10

    (20) statement -> CASE . OF ID cases ENDCASE

    OF              shift and go to state 43


state 11

    (25) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 44


state 12

    (26) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    statements                     shift and go to state 45
    expression                     shift and go to state 6
    statement                      shift and go to state 2

state 13

    (27) statement -> WHILE . expression statements ENDWHILE
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 46

state 14

    (33) expression -> NOT . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 47

state 15

    (44) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 48

state 16

    (45) expression -> BOOLEAN .

    OR              reduce using rule 45 (expression -> BOOLEAN .)
    AND             reduce using rule 45 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 45 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 45 (expression -> BOOLEAN .)
    LESS            reduce using rule 45 (expression -> BOOLEAN .)
    GREATER         reduce using rule 45 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 45 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 45 (expression -> BOOLEAN .)
    MUL             reduce using rule 45 (expression -> BOOLEAN .)
    DIV             reduce using rule 45 (expression -> BOOLEAN .)
    PLUS            reduce using rule 45 (expression -> BOOLEAN .)
    MINUS           reduce using rule 45 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 45 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 45 (expression -> BOOLEAN .)
    ID              reduce using rule 45 (expression -> BOOLEAN .)
    INPUT           reduce using rule 45 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 45 (expression -> BOOLEAN .)
    IF              reduce using rule 45 (expression -> BOOLEAN .)
    CASE            reduce using rule 45 (expression -> BOOLEAN .)
    FOR             reduce using rule 45 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 45 (expression -> BOOLEAN .)
    WHILE           reduce using rule 45 (expression -> BOOLEAN .)
    NOT             reduce using rule 45 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 45 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 45 (expression -> BOOLEAN .)
    CHAR            reduce using rule 45 (expression -> BOOLEAN .)
    STRING          reduce using rule 45 (expression -> BOOLEAN .)
    REAL            reduce using rule 45 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 45 (expression -> BOOLEAN .)
    $end            reduce using rule 45 (expression -> BOOLEAN .)
    COMMA           reduce using rule 45 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 45 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 45 (expression -> BOOLEAN .)
    ELSE            reduce using rule 45 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 45 (expression -> BOOLEAN .)
    ENDCASE         reduce using rule 45 (expression -> BOOLEAN .)
    OTHERWISE       reduce using rule 45 (expression -> BOOLEAN .)
    NEXT            reduce using rule 45 (expression -> BOOLEAN .)
    THEN            reduce using rule 45 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 45 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 45 (expression -> BOOLEAN .)
    COLON           reduce using rule 45 (expression -> BOOLEAN .)
    TO              reduce using rule 45 (expression -> BOOLEAN .)


state 17

    (46) expression -> CHAR .

    OR              reduce using rule 46 (expression -> CHAR .)
    AND             reduce using rule 46 (expression -> CHAR .)
    EQUAL           reduce using rule 46 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 46 (expression -> CHAR .)
    LESS            reduce using rule 46 (expression -> CHAR .)
    GREATER         reduce using rule 46 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 46 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 46 (expression -> CHAR .)
    MUL             reduce using rule 46 (expression -> CHAR .)
    DIV             reduce using rule 46 (expression -> CHAR .)
    PLUS            reduce using rule 46 (expression -> CHAR .)
    MINUS           reduce using rule 46 (expression -> CHAR .)
    DECLARE         reduce using rule 46 (expression -> CHAR .)
    CONSTANT        reduce using rule 46 (expression -> CHAR .)
    ID              reduce using rule 46 (expression -> CHAR .)
    INPUT           reduce using rule 46 (expression -> CHAR .)
    OUTPUT          reduce using rule 46 (expression -> CHAR .)
    IF              reduce using rule 46 (expression -> CHAR .)
    CASE            reduce using rule 46 (expression -> CHAR .)
    FOR             reduce using rule 46 (expression -> CHAR .)
    REPEAT          reduce using rule 46 (expression -> CHAR .)
    WHILE           reduce using rule 46 (expression -> CHAR .)
    NOT             reduce using rule 46 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 46 (expression -> CHAR .)
    BOOLEAN         reduce using rule 46 (expression -> CHAR .)
    CHAR            reduce using rule 46 (expression -> CHAR .)
    STRING          reduce using rule 46 (expression -> CHAR .)
    REAL            reduce using rule 46 (expression -> CHAR .)
    INTEGER         reduce using rule 46 (expression -> CHAR .)
    $end            reduce using rule 46 (expression -> CHAR .)
    COMMA           reduce using rule 46 (expression -> CHAR .)
    UNTIL           reduce using rule 46 (expression -> CHAR .)
    ENDWHILE        reduce using rule 46 (expression -> CHAR .)
    ELSE            reduce using rule 46 (expression -> CHAR .)
    ENDIF           reduce using rule 46 (expression -> CHAR .)
    ENDCASE         reduce using rule 46 (expression -> CHAR .)
    OTHERWISE       reduce using rule 46 (expression -> CHAR .)
    NEXT            reduce using rule 46 (expression -> CHAR .)
    THEN            reduce using rule 46 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 46 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 46 (expression -> CHAR .)
    COLON           reduce using rule 46 (expression -> CHAR .)
    TO              reduce using rule 46 (expression -> CHAR .)


state 18

    (47) expression -> STRING .

    OR              reduce using rule 47 (expression -> STRING .)
    AND             reduce using rule 47 (expression -> STRING .)
    EQUAL           reduce using rule 47 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 47 (expression -> STRING .)
    LESS            reduce using rule 47 (expression -> STRING .)
    GREATER         reduce using rule 47 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 47 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 47 (expression -> STRING .)
    MUL             reduce using rule 47 (expression -> STRING .)
    DIV             reduce using rule 47 (expression -> STRING .)
    PLUS            reduce using rule 47 (expression -> STRING .)
    MINUS           reduce using rule 47 (expression -> STRING .)
    DECLARE         reduce using rule 47 (expression -> STRING .)
    CONSTANT        reduce using rule 47 (expression -> STRING .)
    ID              reduce using rule 47 (expression -> STRING .)
    INPUT           reduce using rule 47 (expression -> STRING .)
    OUTPUT          reduce using rule 47 (expression -> STRING .)
    IF              reduce using rule 47 (expression -> STRING .)
    CASE            reduce using rule 47 (expression -> STRING .)
    FOR             reduce using rule 47 (expression -> STRING .)
    REPEAT          reduce using rule 47 (expression -> STRING .)
    WHILE           reduce using rule 47 (expression -> STRING .)
    NOT             reduce using rule 47 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 47 (expression -> STRING .)
    BOOLEAN         reduce using rule 47 (expression -> STRING .)
    CHAR            reduce using rule 47 (expression -> STRING .)
    STRING          reduce using rule 47 (expression -> STRING .)
    REAL            reduce using rule 47 (expression -> STRING .)
    INTEGER         reduce using rule 47 (expression -> STRING .)
    $end            reduce using rule 47 (expression -> STRING .)
    COMMA           reduce using rule 47 (expression -> STRING .)
    UNTIL           reduce using rule 47 (expression -> STRING .)
    ENDWHILE        reduce using rule 47 (expression -> STRING .)
    ELSE            reduce using rule 47 (expression -> STRING .)
    ENDIF           reduce using rule 47 (expression -> STRING .)
    ENDCASE         reduce using rule 47 (expression -> STRING .)
    OTHERWISE       reduce using rule 47 (expression -> STRING .)
    NEXT            reduce using rule 47 (expression -> STRING .)
    THEN            reduce using rule 47 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 47 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 47 (expression -> STRING .)
    COLON           reduce using rule 47 (expression -> STRING .)
    TO              reduce using rule 47 (expression -> STRING .)


state 19

    (48) expression -> REAL .

    OR              reduce using rule 48 (expression -> REAL .)
    AND             reduce using rule 48 (expression -> REAL .)
    EQUAL           reduce using rule 48 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 48 (expression -> REAL .)
    LESS            reduce using rule 48 (expression -> REAL .)
    GREATER         reduce using rule 48 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 48 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 48 (expression -> REAL .)
    MUL             reduce using rule 48 (expression -> REAL .)
    DIV             reduce using rule 48 (expression -> REAL .)
    PLUS            reduce using rule 48 (expression -> REAL .)
    MINUS           reduce using rule 48 (expression -> REAL .)
    DECLARE         reduce using rule 48 (expression -> REAL .)
    CONSTANT        reduce using rule 48 (expression -> REAL .)
    ID              reduce using rule 48 (expression -> REAL .)
    INPUT           reduce using rule 48 (expression -> REAL .)
    OUTPUT          reduce using rule 48 (expression -> REAL .)
    IF              reduce using rule 48 (expression -> REAL .)
    CASE            reduce using rule 48 (expression -> REAL .)
    FOR             reduce using rule 48 (expression -> REAL .)
    REPEAT          reduce using rule 48 (expression -> REAL .)
    WHILE           reduce using rule 48 (expression -> REAL .)
    NOT             reduce using rule 48 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 48 (expression -> REAL .)
    BOOLEAN         reduce using rule 48 (expression -> REAL .)
    CHAR            reduce using rule 48 (expression -> REAL .)
    STRING          reduce using rule 48 (expression -> REAL .)
    REAL            reduce using rule 48 (expression -> REAL .)
    INTEGER         reduce using rule 48 (expression -> REAL .)
    $end            reduce using rule 48 (expression -> REAL .)
    COMMA           reduce using rule 48 (expression -> REAL .)
    UNTIL           reduce using rule 48 (expression -> REAL .)
    ENDWHILE        reduce using rule 48 (expression -> REAL .)
    ELSE            reduce using rule 48 (expression -> REAL .)
    ENDIF           reduce using rule 48 (expression -> REAL .)
    ENDCASE         reduce using rule 48 (expression -> REAL .)
    OTHERWISE       reduce using rule 48 (expression -> REAL .)
    NEXT            reduce using rule 48 (expression -> REAL .)
    THEN            reduce using rule 48 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 48 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> REAL .)
    COLON           reduce using rule 48 (expression -> REAL .)
    TO              reduce using rule 48 (expression -> REAL .)


state 20

    (49) expression -> INTEGER .

    OR              reduce using rule 49 (expression -> INTEGER .)
    AND             reduce using rule 49 (expression -> INTEGER .)
    EQUAL           reduce using rule 49 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 49 (expression -> INTEGER .)
    LESS            reduce using rule 49 (expression -> INTEGER .)
    GREATER         reduce using rule 49 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 49 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 49 (expression -> INTEGER .)
    MUL             reduce using rule 49 (expression -> INTEGER .)
    DIV             reduce using rule 49 (expression -> INTEGER .)
    PLUS            reduce using rule 49 (expression -> INTEGER .)
    MINUS           reduce using rule 49 (expression -> INTEGER .)
    DECLARE         reduce using rule 49 (expression -> INTEGER .)
    CONSTANT        reduce using rule 49 (expression -> INTEGER .)
    ID              reduce using rule 49 (expression -> INTEGER .)
    INPUT           reduce using rule 49 (expression -> INTEGER .)
    OUTPUT          reduce using rule 49 (expression -> INTEGER .)
    IF              reduce using rule 49 (expression -> INTEGER .)
    CASE            reduce using rule 49 (expression -> INTEGER .)
    FOR             reduce using rule 49 (expression -> INTEGER .)
    REPEAT          reduce using rule 49 (expression -> INTEGER .)
    WHILE           reduce using rule 49 (expression -> INTEGER .)
    NOT             reduce using rule 49 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 49 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 49 (expression -> INTEGER .)
    CHAR            reduce using rule 49 (expression -> INTEGER .)
    STRING          reduce using rule 49 (expression -> INTEGER .)
    REAL            reduce using rule 49 (expression -> INTEGER .)
    INTEGER         reduce using rule 49 (expression -> INTEGER .)
    $end            reduce using rule 49 (expression -> INTEGER .)
    COMMA           reduce using rule 49 (expression -> INTEGER .)
    UNTIL           reduce using rule 49 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 49 (expression -> INTEGER .)
    ELSE            reduce using rule 49 (expression -> INTEGER .)
    ENDIF           reduce using rule 49 (expression -> INTEGER .)
    ENDCASE         reduce using rule 49 (expression -> INTEGER .)
    OTHERWISE       reduce using rule 49 (expression -> INTEGER .)
    NEXT            reduce using rule 49 (expression -> INTEGER .)
    THEN            reduce using rule 49 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 49 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> INTEGER .)
    COLON           reduce using rule 49 (expression -> INTEGER .)
    TO              reduce using rule 49 (expression -> INTEGER .)


state 21

    (1) statements -> statements statement .

    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDCASE         reduce using rule 1 (statements -> statements statement .)
    OTHERWISE       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 22

    (3) statement -> DECLARE ID . COLON ID
    (5) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 49


state 23

    (9) statement -> ID ASSIGN . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 50

state 24

    (10) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN expression
    (30) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    indexes                        shift and go to state 51
    expression                     shift and go to state 52

state 25

    (4) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 53


state 26

    (31) expression -> expression OR . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 54

state 27

    (32) expression -> expression AND . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 55

state 28

    (34) expression -> expression EQUAL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 56

state 29

    (35) expression -> expression NOT_EQUAL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 57

state 30

    (36) expression -> expression LESS . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 58

state 31

    (37) expression -> expression GREATER . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 59

state 32

    (38) expression -> expression LESS_EQUAL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 60

state 33

    (39) expression -> expression GREATER_EQUAL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 61

state 34

    (40) expression -> expression MUL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 62

state 35

    (41) expression -> expression DIV . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 63

state 36

    (42) expression -> expression PLUS . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 64

state 37

    (43) expression -> expression MINUS . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 65

state 38

    (13) statement -> INPUT ID .
    (14) statement -> INPUT ID . LEFT_SQUARE indexes RIGHT_SQUARE

    DECLARE         reduce using rule 13 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 13 (statement -> INPUT ID .)
    ID              reduce using rule 13 (statement -> INPUT ID .)
    INPUT           reduce using rule 13 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 13 (statement -> INPUT ID .)
    IF              reduce using rule 13 (statement -> INPUT ID .)
    CASE            reduce using rule 13 (statement -> INPUT ID .)
    FOR             reduce using rule 13 (statement -> INPUT ID .)
    REPEAT          reduce using rule 13 (statement -> INPUT ID .)
    WHILE           reduce using rule 13 (statement -> INPUT ID .)
    NOT             reduce using rule 13 (statement -> INPUT ID .)
    LEFT_PAREN      reduce using rule 13 (statement -> INPUT ID .)
    BOOLEAN         reduce using rule 13 (statement -> INPUT ID .)
    CHAR            reduce using rule 13 (statement -> INPUT ID .)
    STRING          reduce using rule 13 (statement -> INPUT ID .)
    REAL            reduce using rule 13 (statement -> INPUT ID .)
    INTEGER         reduce using rule 13 (statement -> INPUT ID .)
    $end            reduce using rule 13 (statement -> INPUT ID .)
    UNTIL           reduce using rule 13 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 13 (statement -> INPUT ID .)
    ELSE            reduce using rule 13 (statement -> INPUT ID .)
    ENDIF           reduce using rule 13 (statement -> INPUT ID .)
    ENDCASE         reduce using rule 13 (statement -> INPUT ID .)
    OTHERWISE       reduce using rule 13 (statement -> INPUT ID .)
    NEXT            reduce using rule 13 (statement -> INPUT ID .)
    LEFT_SQUARE     shift and go to state 66


state 39

    (15) statement -> OUTPUT output_expression .
    (16) output_expression -> output_expression . COMMA expression

    DECLARE         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 15 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 15 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 15 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 15 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 15 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 15 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 15 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 15 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 15 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 15 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 15 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 15 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDCASE         reduce using rule 15 (statement -> OUTPUT output_expression .)
    OTHERWISE       reduce using rule 15 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 15 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 67


state 40

    (17) output_expression -> expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    COMMA           reduce using rule 17 (output_expression -> expression .)
    DECLARE         reduce using rule 17 (output_expression -> expression .)
    CONSTANT        reduce using rule 17 (output_expression -> expression .)
    ID              reduce using rule 17 (output_expression -> expression .)
    INPUT           reduce using rule 17 (output_expression -> expression .)
    OUTPUT          reduce using rule 17 (output_expression -> expression .)
    IF              reduce using rule 17 (output_expression -> expression .)
    CASE            reduce using rule 17 (output_expression -> expression .)
    FOR             reduce using rule 17 (output_expression -> expression .)
    REPEAT          reduce using rule 17 (output_expression -> expression .)
    WHILE           reduce using rule 17 (output_expression -> expression .)
    NOT             reduce using rule 17 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 17 (output_expression -> expression .)
    BOOLEAN         reduce using rule 17 (output_expression -> expression .)
    CHAR            reduce using rule 17 (output_expression -> expression .)
    STRING          reduce using rule 17 (output_expression -> expression .)
    REAL            reduce using rule 17 (output_expression -> expression .)
    INTEGER         reduce using rule 17 (output_expression -> expression .)
    $end            reduce using rule 17 (output_expression -> expression .)
    UNTIL           reduce using rule 17 (output_expression -> expression .)
    ENDWHILE        reduce using rule 17 (output_expression -> expression .)
    ELSE            reduce using rule 17 (output_expression -> expression .)
    ENDIF           reduce using rule 17 (output_expression -> expression .)
    ENDCASE         reduce using rule 17 (output_expression -> expression .)
    OTHERWISE       reduce using rule 17 (output_expression -> expression .)
    NEXT            reduce using rule 17 (output_expression -> expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 41

    (29) expression -> ID .
    (30) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE

    OR              reduce using rule 29 (expression -> ID .)
    AND             reduce using rule 29 (expression -> ID .)
    EQUAL           reduce using rule 29 (expression -> ID .)
    NOT_EQUAL       reduce using rule 29 (expression -> ID .)
    LESS            reduce using rule 29 (expression -> ID .)
    GREATER         reduce using rule 29 (expression -> ID .)
    LESS_EQUAL      reduce using rule 29 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 29 (expression -> ID .)
    MUL             reduce using rule 29 (expression -> ID .)
    DIV             reduce using rule 29 (expression -> ID .)
    PLUS            reduce using rule 29 (expression -> ID .)
    MINUS           reduce using rule 29 (expression -> ID .)
    COMMA           reduce using rule 29 (expression -> ID .)
    DECLARE         reduce using rule 29 (expression -> ID .)
    CONSTANT        reduce using rule 29 (expression -> ID .)
    ID              reduce using rule 29 (expression -> ID .)
    INPUT           reduce using rule 29 (expression -> ID .)
    OUTPUT          reduce using rule 29 (expression -> ID .)
    IF              reduce using rule 29 (expression -> ID .)
    CASE            reduce using rule 29 (expression -> ID .)
    FOR             reduce using rule 29 (expression -> ID .)
    REPEAT          reduce using rule 29 (expression -> ID .)
    WHILE           reduce using rule 29 (expression -> ID .)
    NOT             reduce using rule 29 (expression -> ID .)
    LEFT_PAREN      reduce using rule 29 (expression -> ID .)
    BOOLEAN         reduce using rule 29 (expression -> ID .)
    CHAR            reduce using rule 29 (expression -> ID .)
    STRING          reduce using rule 29 (expression -> ID .)
    REAL            reduce using rule 29 (expression -> ID .)
    INTEGER         reduce using rule 29 (expression -> ID .)
    $end            reduce using rule 29 (expression -> ID .)
    UNTIL           reduce using rule 29 (expression -> ID .)
    ENDWHILE        reduce using rule 29 (expression -> ID .)
    ELSE            reduce using rule 29 (expression -> ID .)
    ENDIF           reduce using rule 29 (expression -> ID .)
    ENDCASE         reduce using rule 29 (expression -> ID .)
    OTHERWISE       reduce using rule 29 (expression -> ID .)
    NEXT            reduce using rule 29 (expression -> ID .)
    THEN            reduce using rule 29 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 29 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 29 (expression -> ID .)
    COLON           reduce using rule 29 (expression -> ID .)
    TO              reduce using rule 29 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 68


state 42

    (18) statement -> IF expression . THEN statements ELSE statements ENDIF
    (19) statement -> IF expression . THEN statements ENDIF
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    THEN            shift and go to state 69
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 43

    (20) statement -> CASE OF . ID cases ENDCASE

    ID              shift and go to state 70


state 44

    (25) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 71


state 45

    (26) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    UNTIL           shift and go to state 72
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statement                      shift and go to state 21

state 46

    (27) statement -> WHILE expression . statements ENDWHILE
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statements                     shift and go to state 73
    statement                      shift and go to state 2

state 47

    (33) expression -> NOT expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    OR              reduce using rule 33 (expression -> NOT expression .)
    AND             reduce using rule 33 (expression -> NOT expression .)
    EQUAL           reduce using rule 33 (expression -> NOT expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> NOT expression .)
    LESS            reduce using rule 33 (expression -> NOT expression .)
    GREATER         reduce using rule 33 (expression -> NOT expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> NOT expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> NOT expression .)
    MUL             reduce using rule 33 (expression -> NOT expression .)
    DIV             reduce using rule 33 (expression -> NOT expression .)
    PLUS            reduce using rule 33 (expression -> NOT expression .)
    MINUS           reduce using rule 33 (expression -> NOT expression .)
    DECLARE         reduce using rule 33 (expression -> NOT expression .)
    CONSTANT        reduce using rule 33 (expression -> NOT expression .)
    ID              reduce using rule 33 (expression -> NOT expression .)
    INPUT           reduce using rule 33 (expression -> NOT expression .)
    OUTPUT          reduce using rule 33 (expression -> NOT expression .)
    IF              reduce using rule 33 (expression -> NOT expression .)
    CASE            reduce using rule 33 (expression -> NOT expression .)
    FOR             reduce using rule 33 (expression -> NOT expression .)
    REPEAT          reduce using rule 33 (expression -> NOT expression .)
    WHILE           reduce using rule 33 (expression -> NOT expression .)
    NOT             reduce using rule 33 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 33 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 33 (expression -> NOT expression .)
    CHAR            reduce using rule 33 (expression -> NOT expression .)
    STRING          reduce using rule 33 (expression -> NOT expression .)
    REAL            reduce using rule 33 (expression -> NOT expression .)
    INTEGER         reduce using rule 33 (expression -> NOT expression .)
    $end            reduce using rule 33 (expression -> NOT expression .)
    COMMA           reduce using rule 33 (expression -> NOT expression .)
    UNTIL           reduce using rule 33 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 33 (expression -> NOT expression .)
    ELSE            reduce using rule 33 (expression -> NOT expression .)
    ENDIF           reduce using rule 33 (expression -> NOT expression .)
    ENDCASE         reduce using rule 33 (expression -> NOT expression .)
    OTHERWISE       reduce using rule 33 (expression -> NOT expression .)
    NEXT            reduce using rule 33 (expression -> NOT expression .)
    THEN            reduce using rule 33 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 33 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 33 (expression -> NOT expression .)
    COLON           reduce using rule 33 (expression -> NOT expression .)
    TO              reduce using rule 33 (expression -> NOT expression .)

  ! OR              [ shift and go to state 26 ]
  ! AND             [ shift and go to state 27 ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 48

    (44) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    RIGHT_PAREN     shift and go to state 74
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 49

    (3) statement -> DECLARE ID COLON . ID
    (5) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 75
    ARRAY           shift and go to state 76


state 50

    (9) statement -> ID ASSIGN expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    DECLARE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CONSTANT        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 9 (statement -> ID ASSIGN expression .)
    INPUT           reduce using rule 9 (statement -> ID ASSIGN expression .)
    OUTPUT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 9 (statement -> ID ASSIGN expression .)
    CASE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 9 (statement -> ID ASSIGN expression .)
    REPEAT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 9 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 9 (statement -> ID ASSIGN expression .)
    LEFT_PAREN      reduce using rule 9 (statement -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 9 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 9 (statement -> ID ASSIGN expression .)
    REAL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    INTEGER         reduce using rule 9 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 9 (statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDWHILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDIF           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDCASE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    OTHERWISE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    NEXT            reduce using rule 9 (statement -> ID ASSIGN expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 51

    (10) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN expression
    (30) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 77
    COMMA           shift and go to state 78


state 52

    (12) indexes -> expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 12 (indexes -> expression .)
    COMMA           reduce using rule 12 (indexes -> expression .)
    COLON           reduce using rule 12 (indexes -> expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 53

    (4) statement -> CONSTANT ID EQUAL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 79

state 54

    (31) expression -> expression OR expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    OR              reduce using rule 31 (expression -> expression OR expression .)
    AND             reduce using rule 31 (expression -> expression OR expression .)
    EQUAL           reduce using rule 31 (expression -> expression OR expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression OR expression .)
    LESS            reduce using rule 31 (expression -> expression OR expression .)
    GREATER         reduce using rule 31 (expression -> expression OR expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression OR expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression OR expression .)
    MUL             reduce using rule 31 (expression -> expression OR expression .)
    DIV             reduce using rule 31 (expression -> expression OR expression .)
    PLUS            reduce using rule 31 (expression -> expression OR expression .)
    MINUS           reduce using rule 31 (expression -> expression OR expression .)
    DECLARE         reduce using rule 31 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 31 (expression -> expression OR expression .)
    ID              reduce using rule 31 (expression -> expression OR expression .)
    INPUT           reduce using rule 31 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 31 (expression -> expression OR expression .)
    IF              reduce using rule 31 (expression -> expression OR expression .)
    CASE            reduce using rule 31 (expression -> expression OR expression .)
    FOR             reduce using rule 31 (expression -> expression OR expression .)
    REPEAT          reduce using rule 31 (expression -> expression OR expression .)
    WHILE           reduce using rule 31 (expression -> expression OR expression .)
    NOT             reduce using rule 31 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 31 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 31 (expression -> expression OR expression .)
    CHAR            reduce using rule 31 (expression -> expression OR expression .)
    STRING          reduce using rule 31 (expression -> expression OR expression .)
    REAL            reduce using rule 31 (expression -> expression OR expression .)
    INTEGER         reduce using rule 31 (expression -> expression OR expression .)
    $end            reduce using rule 31 (expression -> expression OR expression .)
    COMMA           reduce using rule 31 (expression -> expression OR expression .)
    UNTIL           reduce using rule 31 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 31 (expression -> expression OR expression .)
    ELSE            reduce using rule 31 (expression -> expression OR expression .)
    ENDIF           reduce using rule 31 (expression -> expression OR expression .)
    ENDCASE         reduce using rule 31 (expression -> expression OR expression .)
    OTHERWISE       reduce using rule 31 (expression -> expression OR expression .)
    NEXT            reduce using rule 31 (expression -> expression OR expression .)
    THEN            reduce using rule 31 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 31 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 31 (expression -> expression OR expression .)
    COLON           reduce using rule 31 (expression -> expression OR expression .)
    TO              reduce using rule 31 (expression -> expression OR expression .)

  ! OR              [ shift and go to state 26 ]
  ! AND             [ shift and go to state 27 ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 55

    (32) expression -> expression AND expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    AND             reduce using rule 32 (expression -> expression AND expression .)
    EQUAL           reduce using rule 32 (expression -> expression AND expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression AND expression .)
    LESS            reduce using rule 32 (expression -> expression AND expression .)
    GREATER         reduce using rule 32 (expression -> expression AND expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression AND expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression AND expression .)
    MUL             reduce using rule 32 (expression -> expression AND expression .)
    DIV             reduce using rule 32 (expression -> expression AND expression .)
    PLUS            reduce using rule 32 (expression -> expression AND expression .)
    MINUS           reduce using rule 32 (expression -> expression AND expression .)
    DECLARE         reduce using rule 32 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 32 (expression -> expression AND expression .)
    ID              reduce using rule 32 (expression -> expression AND expression .)
    INPUT           reduce using rule 32 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 32 (expression -> expression AND expression .)
    IF              reduce using rule 32 (expression -> expression AND expression .)
    CASE            reduce using rule 32 (expression -> expression AND expression .)
    FOR             reduce using rule 32 (expression -> expression AND expression .)
    REPEAT          reduce using rule 32 (expression -> expression AND expression .)
    WHILE           reduce using rule 32 (expression -> expression AND expression .)
    NOT             reduce using rule 32 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 32 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 32 (expression -> expression AND expression .)
    CHAR            reduce using rule 32 (expression -> expression AND expression .)
    STRING          reduce using rule 32 (expression -> expression AND expression .)
    REAL            reduce using rule 32 (expression -> expression AND expression .)
    INTEGER         reduce using rule 32 (expression -> expression AND expression .)
    $end            reduce using rule 32 (expression -> expression AND expression .)
    COMMA           reduce using rule 32 (expression -> expression AND expression .)
    UNTIL           reduce using rule 32 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 32 (expression -> expression AND expression .)
    ELSE            reduce using rule 32 (expression -> expression AND expression .)
    ENDIF           reduce using rule 32 (expression -> expression AND expression .)
    ENDCASE         reduce using rule 32 (expression -> expression AND expression .)
    OTHERWISE       reduce using rule 32 (expression -> expression AND expression .)
    NEXT            reduce using rule 32 (expression -> expression AND expression .)
    THEN            reduce using rule 32 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 32 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 32 (expression -> expression AND expression .)
    COLON           reduce using rule 32 (expression -> expression AND expression .)
    TO              reduce using rule 32 (expression -> expression AND expression .)
    OR              shift and go to state 26

  ! OR              [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 27 ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 56

    (34) expression -> expression EQUAL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 34 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 34 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 34 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression EQUAL expression .)
    MUL             reduce using rule 34 (expression -> expression EQUAL expression .)
    DIV             reduce using rule 34 (expression -> expression EQUAL expression .)
    PLUS            reduce using rule 34 (expression -> expression EQUAL expression .)
    MINUS           reduce using rule 34 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 34 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 34 (expression -> expression EQUAL expression .)
    ID              reduce using rule 34 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 34 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 34 (expression -> expression EQUAL expression .)
    IF              reduce using rule 34 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 34 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 34 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 34 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 34 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 34 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 34 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 34 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 34 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 34 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 34 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 34 (expression -> expression EQUAL expression .)
    $end            reduce using rule 34 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 34 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 34 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 34 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 34 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 34 (expression -> expression EQUAL expression .)
    ENDCASE         reduce using rule 34 (expression -> expression EQUAL expression .)
    OTHERWISE       reduce using rule 34 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 34 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 34 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 34 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 34 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 34 (expression -> expression EQUAL expression .)
    TO              reduce using rule 34 (expression -> expression EQUAL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 34 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 57

    (35) expression -> expression NOT_EQUAL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    MUL             reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    DIV             reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    PLUS            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    MINUS           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    ENDCASE         reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    OTHERWISE       reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 35 (expression -> expression NOT_EQUAL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 35 (expression -> expression NOT_EQUAL expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 58

    (36) expression -> expression LESS expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 36 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression LESS expression .)
    LESS            reduce using rule 36 (expression -> expression LESS expression .)
    GREATER         reduce using rule 36 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression LESS expression .)
    MUL             reduce using rule 36 (expression -> expression LESS expression .)
    DIV             reduce using rule 36 (expression -> expression LESS expression .)
    PLUS            reduce using rule 36 (expression -> expression LESS expression .)
    MINUS           reduce using rule 36 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 36 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 36 (expression -> expression LESS expression .)
    ID              reduce using rule 36 (expression -> expression LESS expression .)
    INPUT           reduce using rule 36 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 36 (expression -> expression LESS expression .)
    IF              reduce using rule 36 (expression -> expression LESS expression .)
    CASE            reduce using rule 36 (expression -> expression LESS expression .)
    FOR             reduce using rule 36 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 36 (expression -> expression LESS expression .)
    WHILE           reduce using rule 36 (expression -> expression LESS expression .)
    NOT             reduce using rule 36 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 36 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 36 (expression -> expression LESS expression .)
    CHAR            reduce using rule 36 (expression -> expression LESS expression .)
    STRING          reduce using rule 36 (expression -> expression LESS expression .)
    REAL            reduce using rule 36 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 36 (expression -> expression LESS expression .)
    $end            reduce using rule 36 (expression -> expression LESS expression .)
    COMMA           reduce using rule 36 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 36 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 36 (expression -> expression LESS expression .)
    ELSE            reduce using rule 36 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 36 (expression -> expression LESS expression .)
    ENDCASE         reduce using rule 36 (expression -> expression LESS expression .)
    OTHERWISE       reduce using rule 36 (expression -> expression LESS expression .)
    NEXT            reduce using rule 36 (expression -> expression LESS expression .)
    THEN            reduce using rule 36 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 36 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 36 (expression -> expression LESS expression .)
    COLON           reduce using rule 36 (expression -> expression LESS expression .)
    TO              reduce using rule 36 (expression -> expression LESS expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 36 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression LESS expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 59

    (37) expression -> expression GREATER expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 37 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression GREATER expression .)
    LESS            reduce using rule 37 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 37 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression GREATER expression .)
    MUL             reduce using rule 37 (expression -> expression GREATER expression .)
    DIV             reduce using rule 37 (expression -> expression GREATER expression .)
    PLUS            reduce using rule 37 (expression -> expression GREATER expression .)
    MINUS           reduce using rule 37 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 37 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 37 (expression -> expression GREATER expression .)
    ID              reduce using rule 37 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 37 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 37 (expression -> expression GREATER expression .)
    IF              reduce using rule 37 (expression -> expression GREATER expression .)
    CASE            reduce using rule 37 (expression -> expression GREATER expression .)
    FOR             reduce using rule 37 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 37 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 37 (expression -> expression GREATER expression .)
    NOT             reduce using rule 37 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 37 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 37 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 37 (expression -> expression GREATER expression .)
    STRING          reduce using rule 37 (expression -> expression GREATER expression .)
    REAL            reduce using rule 37 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 37 (expression -> expression GREATER expression .)
    $end            reduce using rule 37 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 37 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 37 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 37 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 37 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 37 (expression -> expression GREATER expression .)
    ENDCASE         reduce using rule 37 (expression -> expression GREATER expression .)
    OTHERWISE       reduce using rule 37 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 37 (expression -> expression GREATER expression .)
    THEN            reduce using rule 37 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 37 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 37 (expression -> expression GREATER expression .)
    COLON           reduce using rule 37 (expression -> expression GREATER expression .)
    TO              reduce using rule 37 (expression -> expression GREATER expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 60

    (38) expression -> expression LESS_EQUAL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    MUL             reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    DIV             reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    PLUS            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    MINUS           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    ENDCASE         reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    OTHERWISE       reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 38 (expression -> expression LESS_EQUAL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 38 (expression -> expression LESS_EQUAL expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression LESS_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 61

    (39) expression -> expression GREATER_EQUAL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    EQUAL           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    MUL             reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    DIV             reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    PLUS            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    MINUS           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    ENDCASE         reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    OTHERWISE       reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 39 (expression -> expression GREATER_EQUAL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27

  ! OR              [ reduce using rule 39 (expression -> expression GREATER_EQUAL expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression GREATER_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 28 ]
  ! NOT_EQUAL       [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 62

    (40) expression -> expression MUL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    MUL             reduce using rule 40 (expression -> expression MUL expression .)
    DIV             reduce using rule 40 (expression -> expression MUL expression .)
    PLUS            reduce using rule 40 (expression -> expression MUL expression .)
    MINUS           reduce using rule 40 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 40 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 40 (expression -> expression MUL expression .)
    ID              reduce using rule 40 (expression -> expression MUL expression .)
    INPUT           reduce using rule 40 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 40 (expression -> expression MUL expression .)
    IF              reduce using rule 40 (expression -> expression MUL expression .)
    CASE            reduce using rule 40 (expression -> expression MUL expression .)
    FOR             reduce using rule 40 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 40 (expression -> expression MUL expression .)
    WHILE           reduce using rule 40 (expression -> expression MUL expression .)
    NOT             reduce using rule 40 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 40 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 40 (expression -> expression MUL expression .)
    CHAR            reduce using rule 40 (expression -> expression MUL expression .)
    STRING          reduce using rule 40 (expression -> expression MUL expression .)
    REAL            reduce using rule 40 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 40 (expression -> expression MUL expression .)
    $end            reduce using rule 40 (expression -> expression MUL expression .)
    COMMA           reduce using rule 40 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 40 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 40 (expression -> expression MUL expression .)
    ELSE            reduce using rule 40 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 40 (expression -> expression MUL expression .)
    ENDCASE         reduce using rule 40 (expression -> expression MUL expression .)
    OTHERWISE       reduce using rule 40 (expression -> expression MUL expression .)
    NEXT            reduce using rule 40 (expression -> expression MUL expression .)
    THEN            reduce using rule 40 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 40 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> expression MUL expression .)
    COLON           reduce using rule 40 (expression -> expression MUL expression .)
    TO              reduce using rule 40 (expression -> expression MUL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33

  ! OR              [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! EQUAL           [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! LESS_EQUAL      [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 63

    (41) expression -> expression DIV expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    MUL             reduce using rule 41 (expression -> expression DIV expression .)
    DIV             reduce using rule 41 (expression -> expression DIV expression .)
    PLUS            reduce using rule 41 (expression -> expression DIV expression .)
    MINUS           reduce using rule 41 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 41 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 41 (expression -> expression DIV expression .)
    ID              reduce using rule 41 (expression -> expression DIV expression .)
    INPUT           reduce using rule 41 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 41 (expression -> expression DIV expression .)
    IF              reduce using rule 41 (expression -> expression DIV expression .)
    CASE            reduce using rule 41 (expression -> expression DIV expression .)
    FOR             reduce using rule 41 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 41 (expression -> expression DIV expression .)
    WHILE           reduce using rule 41 (expression -> expression DIV expression .)
    NOT             reduce using rule 41 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 41 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 41 (expression -> expression DIV expression .)
    CHAR            reduce using rule 41 (expression -> expression DIV expression .)
    STRING          reduce using rule 41 (expression -> expression DIV expression .)
    REAL            reduce using rule 41 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 41 (expression -> expression DIV expression .)
    $end            reduce using rule 41 (expression -> expression DIV expression .)
    COMMA           reduce using rule 41 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 41 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 41 (expression -> expression DIV expression .)
    ELSE            reduce using rule 41 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 41 (expression -> expression DIV expression .)
    ENDCASE         reduce using rule 41 (expression -> expression DIV expression .)
    OTHERWISE       reduce using rule 41 (expression -> expression DIV expression .)
    NEXT            reduce using rule 41 (expression -> expression DIV expression .)
    THEN            reduce using rule 41 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 41 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> expression DIV expression .)
    COLON           reduce using rule 41 (expression -> expression DIV expression .)
    TO              reduce using rule 41 (expression -> expression DIV expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33

  ! OR              [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! EQUAL           [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! LESS_EQUAL      [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! MUL             [ shift and go to state 34 ]
  ! DIV             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 64

    (42) expression -> expression PLUS expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    PLUS            reduce using rule 42 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 42 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 42 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 42 (expression -> expression PLUS expression .)
    ID              reduce using rule 42 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 42 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 42 (expression -> expression PLUS expression .)
    IF              reduce using rule 42 (expression -> expression PLUS expression .)
    CASE            reduce using rule 42 (expression -> expression PLUS expression .)
    FOR             reduce using rule 42 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 42 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 42 (expression -> expression PLUS expression .)
    NOT             reduce using rule 42 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 42 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 42 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 42 (expression -> expression PLUS expression .)
    STRING          reduce using rule 42 (expression -> expression PLUS expression .)
    REAL            reduce using rule 42 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 42 (expression -> expression PLUS expression .)
    $end            reduce using rule 42 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 42 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 42 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 42 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 42 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 42 (expression -> expression PLUS expression .)
    ENDCASE         reduce using rule 42 (expression -> expression PLUS expression .)
    OTHERWISE       reduce using rule 42 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 42 (expression -> expression PLUS expression .)
    THEN            reduce using rule 42 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 42 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> expression PLUS expression .)
    COLON           reduce using rule 42 (expression -> expression PLUS expression .)
    TO              reduce using rule 42 (expression -> expression PLUS expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35

  ! OR              [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 65

    (43) expression -> expression MINUS expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    PLUS            reduce using rule 43 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 43 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 43 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 43 (expression -> expression MINUS expression .)
    ID              reduce using rule 43 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 43 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 43 (expression -> expression MINUS expression .)
    IF              reduce using rule 43 (expression -> expression MINUS expression .)
    CASE            reduce using rule 43 (expression -> expression MINUS expression .)
    FOR             reduce using rule 43 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 43 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 43 (expression -> expression MINUS expression .)
    NOT             reduce using rule 43 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 43 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 43 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 43 (expression -> expression MINUS expression .)
    STRING          reduce using rule 43 (expression -> expression MINUS expression .)
    REAL            reduce using rule 43 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 43 (expression -> expression MINUS expression .)
    $end            reduce using rule 43 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 43 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 43 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 43 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 43 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 43 (expression -> expression MINUS expression .)
    ENDCASE         reduce using rule 43 (expression -> expression MINUS expression .)
    OTHERWISE       reduce using rule 43 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 43 (expression -> expression MINUS expression .)
    THEN            reduce using rule 43 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 43 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> expression MINUS expression .)
    COLON           reduce using rule 43 (expression -> expression MINUS expression .)
    TO              reduce using rule 43 (expression -> expression MINUS expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35

  ! OR              [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 66

    (14) statement -> INPUT ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    indexes                        shift and go to state 80
    expression                     shift and go to state 52

state 67

    (16) output_expression -> output_expression COMMA . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 81

state 68

    (30) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    indexes                        shift and go to state 82
    expression                     shift and go to state 52

state 69

    (18) statement -> IF expression THEN . statements ELSE statements ENDIF
    (19) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statements                     shift and go to state 83
    statement                      shift and go to state 2

state 70

    (20) statement -> CASE OF ID . cases ENDCASE
    (21) cases -> . cases case
    (22) cases -> . case
    (23) case -> . indexes COLON statements
    (24) case -> . OTHERWISE COLON statements
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    OTHERWISE       shift and go to state 87
    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    cases                          shift and go to state 84
    case                           shift and go to state 85
    indexes                        shift and go to state 86
    expression                     shift and go to state 52

state 71

    (25) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 88

state 72

    (26) statement -> REPEAT statements UNTIL . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 89

state 73

    (27) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ENDWHILE        shift and go to state 90
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statement                      shift and go to state 21

state 74

    (44) expression -> LEFT_PAREN expression RIGHT_PAREN .

    OR              reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDCASE         reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OTHERWISE       reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 44 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 75

    (3) statement -> DECLARE ID COLON ID .

    DECLARE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDCASE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OTHERWISE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 3 (statement -> DECLARE ID COLON ID .)


state 76

    (5) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 91


state 77

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN expression
    (30) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          shift and go to state 92
    OR              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCASE         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 78

    (11) indexes -> indexes COMMA . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 93

state 79

    (4) statement -> CONSTANT ID EQUAL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    DECLARE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDCASE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OTHERWISE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 80

    (14) statement -> INPUT ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 94
    COMMA           shift and go to state 78


state 81

    (16) output_expression -> output_expression COMMA expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    COMMA           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDCASE         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OTHERWISE       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 82

    (30) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 95
    COMMA           shift and go to state 78


state 83

    (18) statement -> IF expression THEN statements . ELSE statements ENDIF
    (19) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ELSE            shift and go to state 96
    ENDIF           shift and go to state 97
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statement                      shift and go to state 21

state 84

    (20) statement -> CASE OF ID cases . ENDCASE
    (21) cases -> cases . case
    (23) case -> . indexes COLON statements
    (24) case -> . OTHERWISE COLON statements
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ENDCASE         shift and go to state 98
    OTHERWISE       shift and go to state 87
    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    case                           shift and go to state 99
    indexes                        shift and go to state 86
    expression                     shift and go to state 52

state 85

    (22) cases -> case .

    ENDCASE         reduce using rule 22 (cases -> case .)
    OTHERWISE       reduce using rule 22 (cases -> case .)
    ID              reduce using rule 22 (cases -> case .)
    NOT             reduce using rule 22 (cases -> case .)
    LEFT_PAREN      reduce using rule 22 (cases -> case .)
    BOOLEAN         reduce using rule 22 (cases -> case .)
    CHAR            reduce using rule 22 (cases -> case .)
    STRING          reduce using rule 22 (cases -> case .)
    REAL            reduce using rule 22 (cases -> case .)
    INTEGER         reduce using rule 22 (cases -> case .)


state 86

    (23) case -> indexes . COLON statements
    (11) indexes -> indexes . COMMA expression

    COLON           shift and go to state 100
    COMMA           shift and go to state 78


state 87

    (24) case -> OTHERWISE . COLON statements

    COLON           shift and go to state 101


state 88

    (25) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    TO              shift and go to state 102
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 89

    (26) statement -> REPEAT statements UNTIL expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    DECLARE         reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    ENDCASE         reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    OTHERWISE       reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 26 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 90

    (27) statement -> WHILE expression statements ENDWHILE .

    DECLARE         reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    ENDCASE         reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    OTHERWISE       reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 27 (statement -> WHILE expression statements ENDWHILE .)


state 91

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (6) dimensions -> . dimensions COMMA dimension
    (7) dimensions -> . dimension
    (8) dimension -> . expression COLON expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    dimensions                     shift and go to state 103
    dimension                      shift and go to state 104
    expression                     shift and go to state 105

state 92

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 106

state 93

    (11) indexes -> indexes COMMA expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 11 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 11 (indexes -> indexes COMMA expression .)
    COLON           reduce using rule 11 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 94

    (14) statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DECLARE         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCASE         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 95

    (30) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    OR              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCASE         reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 30 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 96

    (18) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statements                     shift and go to state 107
    statement                      shift and go to state 2

state 97

    (19) statement -> IF expression THEN statements ENDIF .

    DECLARE         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDCASE         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    OTHERWISE       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)


state 98

    (20) statement -> CASE OF ID cases ENDCASE .

    DECLARE         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_PAREN      reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    BOOLEAN         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDCASE         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    OTHERWISE       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)


state 99

    (21) cases -> cases case .

    ENDCASE         reduce using rule 21 (cases -> cases case .)
    OTHERWISE       reduce using rule 21 (cases -> cases case .)
    ID              reduce using rule 21 (cases -> cases case .)
    NOT             reduce using rule 21 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 21 (cases -> cases case .)
    BOOLEAN         reduce using rule 21 (cases -> cases case .)
    CHAR            reduce using rule 21 (cases -> cases case .)
    STRING          reduce using rule 21 (cases -> cases case .)
    REAL            reduce using rule 21 (cases -> cases case .)
    INTEGER         reduce using rule 21 (cases -> cases case .)


state 100

    (23) case -> indexes COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    statements                     shift and go to state 108
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 101

    (24) case -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    statements                     shift and go to state 109
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 102

    (25) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 110

state 103

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (6) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 111
    COMMA           shift and go to state 112


state 104

    (7) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimension .)


state 105

    (8) dimension -> expression . COLON expression
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    COLON           shift and go to state 113
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 106

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    DECLARE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CONSTANT        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ID              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INPUT           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OUTPUT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IF              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CASE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FOR             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REPEAT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WHILE           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NOT             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    LEFT_PAREN      reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    BOOLEAN         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CHAR            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    STRING          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REAL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INTEGER         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    $end            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    UNTIL           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDWHILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ELSE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDIF           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDCASE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OTHERWISE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NEXT            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 107

    (18) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ENDIF           shift and go to state 114
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statement                      shift and go to state 21

state 108

    (23) case -> indexes COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
    ENDCASE         reduce using rule 23 (case -> indexes COLON statements .)
    OTHERWISE       reduce using rule 23 (case -> indexes COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

  ! ID              [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! NOT             [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! LEFT_PAREN      [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! BOOLEAN         [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! CHAR            [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! STRING          [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! REAL            [ reduce using rule 23 (case -> indexes COLON statements .) ]
  ! INTEGER         [ reduce using rule 23 (case -> indexes COLON statements .) ]

    statement                      shift and go to state 21
    expression                     shift and go to state 6

state 109

    (24) case -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
    ENDCASE         reduce using rule 24 (case -> OTHERWISE COLON statements .)
    OTHERWISE       reduce using rule 24 (case -> OTHERWISE COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

  ! ID              [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! NOT             [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! LEFT_PAREN      [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! BOOLEAN         [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! CHAR            [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! STRING          [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! REAL            [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]
  ! INTEGER         [ reduce using rule 24 (case -> OTHERWISE COLON statements .) ]

    statement                      shift and go to state 21
    expression                     shift and go to state 6

state 110

    (25) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statements                     shift and go to state 115
    statement                      shift and go to state 2

state 111

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 116


state 112

    (6) dimensions -> dimensions COMMA . dimension
    (8) dimension -> . expression COLON expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    dimension                      shift and go to state 117
    expression                     shift and go to state 105

state 113

    (8) dimension -> expression COLON . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    ID              shift and go to state 41
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 118

state 114

    (18) statement -> IF expression THEN statements ELSE statements ENDIF .

    DECLARE         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDCASE         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OTHERWISE       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 115

    (25) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (25) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (26) statement -> . REPEAT statements UNTIL expression
    (27) statement -> . WHILE expression statements ENDWHILE
    (28) statement -> . expression
    (29) expression -> . ID
    (30) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (31) expression -> . expression OR expression
    (32) expression -> . expression AND expression
    (33) expression -> . NOT expression
    (34) expression -> . expression EQUAL expression
    (35) expression -> . expression NOT_EQUAL expression
    (36) expression -> . expression LESS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS_EQUAL expression
    (39) expression -> . expression GREATER_EQUAL expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (45) expression -> . BOOLEAN
    (46) expression -> . CHAR
    (47) expression -> . STRING
    (48) expression -> . REAL
    (49) expression -> . INTEGER

    NEXT            shift and go to state 119
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    REAL            shift and go to state 19
    INTEGER         shift and go to state 20

    expression                     shift and go to state 6
    statement                      shift and go to state 21

state 116

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 120


state 117

    (6) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 6 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 6 (dimensions -> dimensions COMMA dimension .)


state 118

    (8) dimension -> expression COLON expression .
    (31) expression -> expression . OR expression
    (32) expression -> expression . AND expression
    (34) expression -> expression . EQUAL expression
    (35) expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . LESS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS_EQUAL expression
    (39) expression -> expression . GREATER_EQUAL expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 8 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 8 (dimension -> expression COLON expression .)
    OR              shift and go to state 26
    AND             shift and go to state 27
    EQUAL           shift and go to state 28
    NOT_EQUAL       shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    MUL             shift and go to state 34
    DIV             shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 119

    (25) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 121


state 120

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DECLARE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCASE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OTHERWISE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 121

    (25) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DECLARE         reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDCASE         reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OTHERWISE       reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 25 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 108 resolved as shift
WARNING: shift/reduce conflict for NOT in state 108 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 108 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 108 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 108 resolved as shift
WARNING: shift/reduce conflict for STRING in state 108 resolved as shift
WARNING: shift/reduce conflict for REAL in state 108 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 108 resolved as shift
WARNING: shift/reduce conflict for ID in state 109 resolved as shift
WARNING: shift/reduce conflict for NOT in state 109 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 109 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 109 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 109 resolved as shift
WARNING: shift/reduce conflict for STRING in state 109 resolved as shift
WARNING: shift/reduce conflict for REAL in state 109 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 109 resolved as shift
