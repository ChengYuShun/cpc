Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    CALL
    CLASS
    DOT
    ENDFUNCTION
    ENDPROCEDURE
    ENDTYPE
    FUNCTION
    INHERITS
    LEFT_BRACE
    LEFT_PAREN
    NEW
    POINTER
    PRIVATE
    PROCEDURE
    PUBLIC
    RETURN
    RETURNS
    RIGHT_BRACE
    RIGHT_PAREN
    TYPE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DECLARE ID COLON ID
Rule 4     statement -> CONSTANT ID EQUAL expression
Rule 5     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 6     dimensions -> dimensions COMMA dimension
Rule 7     dimensions -> dimension
Rule 8     dimension -> expression COLON expression
Rule 9     statement -> ID ASSIGN expression
Rule 10    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
Rule 11    indexes -> indexes COMMA expression
Rule 12    indexes -> expression
Rule 13    indexes -> expression TO expression
Rule 14    statement -> INPUT ID
Rule 15    statement -> OUTPUT expression
Rule 16    statement -> IF expression THEN statements ENDIF
Rule 17    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 18    statement -> CASE OF ID cases ENDCASE
Rule 19    cases -> cases case
Rule 20    cases -> case
Rule 21    case -> indexes COLON statements
Rule 22    case -> OTHERWISE COLON statements
Rule 23    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 24    statement -> REPEAT statements UNTIL expression
Rule 25    statement -> WHILE expression statements ENDWHILE
Rule 26    statement -> expression
Rule 27    expression -> ID
Rule 28    expression -> expression OR expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> NOT expression
Rule 31    expression -> expression EQUAL expression
Rule 32    expression -> expression NOT_EQUAL expression
Rule 33    expression -> expression LESS expression
Rule 34    expression -> expression GREATER expression
Rule 35    expression -> expression LESS_EQUAL expression
Rule 36    expression -> expression GREATER_EQUAL expression
Rule 37    expression -> expression MUL expression
Rule 38    expression -> expression DIV expression
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> CHAR
Rule 42    expression -> STRING
Rule 43    expression -> REAL
Rule 44    expression -> INTEGER

Terminals, with rules where they appear

AND                  : 29
ARRAY                : 5
ASSIGN               : 9 10 23
BOOLEAN              : 
CALL                 : 
CASE                 : 18
CHAR                 : 41
CLASS                : 
COLON                : 3 5 8 21 22
COMMA                : 6 11
CONSTANT             : 4
DECLARE              : 3 5
DIV                  : 38
DOT                  : 
ELSE                 : 17
ENDCASE              : 18
ENDFUNCTION          : 
ENDIF                : 16 17
ENDPROCEDURE         : 
ENDTYPE              : 
ENDWHILE             : 25
EQUAL                : 4 31
FOR                  : 23
FUNCTION             : 
GREATER              : 34
GREATER_EQUAL        : 36
ID                   : 3 3 4 5 5 9 10 14 18 23 23 27
IF                   : 16 17
INHERITS             : 
INPUT                : 14
INTEGER              : 44
LEFT_BRACE           : 
LEFT_PAREN           : 
LEFT_SQUARE          : 5 10
LESS                 : 33
LESS_EQUAL           : 35
MINUS                : 40
MUL                  : 37
NEW                  : 
NEXT                 : 23
NOT                  : 30
NOT_EQUAL            : 32
OF                   : 5 18
OR                   : 28
OTHERWISE            : 22
OUTPUT               : 15
PLUS                 : 39
POINTER              : 
PRIVATE              : 
PROCEDURE            : 
PUBLIC               : 
REAL                 : 43
REPEAT               : 24
RETURN               : 
RETURNS              : 
RIGHT_BRACE          : 
RIGHT_PAREN          : 
RIGHT_SQUARE         : 5 10
STRING               : 42
THEN                 : 16 17
TO                   : 13 23
TYPE                 : 
UNTIL                : 24
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

case                 : 19 20
cases                : 18 19
dimension            : 6 7
dimensions           : 5 6
expression           : 4 8 8 9 10 11 12 13 13 15 16 17 23 23 24 25 26 28 28 29 29 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40
indexes              : 10 11 21
statement            : 1 2
statements           : 1 16 17 17 21 22 23 24 25 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 6

state 2

    (2) statements -> statement .

    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDCASE         reduce using rule 2 (statements -> statement .)
    OTHERWISE       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DECLARE . ID COLON ID
    (5) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 20


state 4

    (9) statement -> ID . ASSIGN expression
    (10) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (27) expression -> ID .

    ASSIGN          shift and go to state 21
    LEFT_SQUARE     shift and go to state 22
    OR              reduce using rule 27 (expression -> ID .)
    AND             reduce using rule 27 (expression -> ID .)
    EQUAL           reduce using rule 27 (expression -> ID .)
    NOT_EQUAL       reduce using rule 27 (expression -> ID .)
    LESS            reduce using rule 27 (expression -> ID .)
    GREATER         reduce using rule 27 (expression -> ID .)
    LESS_EQUAL      reduce using rule 27 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 27 (expression -> ID .)
    MUL             reduce using rule 27 (expression -> ID .)
    DIV             reduce using rule 27 (expression -> ID .)
    PLUS            reduce using rule 27 (expression -> ID .)
    MINUS           reduce using rule 27 (expression -> ID .)
    DECLARE         reduce using rule 27 (expression -> ID .)
    CONSTANT        reduce using rule 27 (expression -> ID .)
    ID              reduce using rule 27 (expression -> ID .)
    INPUT           reduce using rule 27 (expression -> ID .)
    OUTPUT          reduce using rule 27 (expression -> ID .)
    IF              reduce using rule 27 (expression -> ID .)
    CASE            reduce using rule 27 (expression -> ID .)
    FOR             reduce using rule 27 (expression -> ID .)
    REPEAT          reduce using rule 27 (expression -> ID .)
    WHILE           reduce using rule 27 (expression -> ID .)
    NOT             reduce using rule 27 (expression -> ID .)
    CHAR            reduce using rule 27 (expression -> ID .)
    STRING          reduce using rule 27 (expression -> ID .)
    REAL            reduce using rule 27 (expression -> ID .)
    INTEGER         reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)
    UNTIL           reduce using rule 27 (expression -> ID .)
    ENDWHILE        reduce using rule 27 (expression -> ID .)
    ENDIF           reduce using rule 27 (expression -> ID .)
    ELSE            reduce using rule 27 (expression -> ID .)
    ENDCASE         reduce using rule 27 (expression -> ID .)
    OTHERWISE       reduce using rule 27 (expression -> ID .)
    NEXT            reduce using rule 27 (expression -> ID .)


state 5

    (4) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 23


state 6

    (26) statement -> expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 26 (statement -> expression .)
    CONSTANT        reduce using rule 26 (statement -> expression .)
    ID              reduce using rule 26 (statement -> expression .)
    INPUT           reduce using rule 26 (statement -> expression .)
    OUTPUT          reduce using rule 26 (statement -> expression .)
    IF              reduce using rule 26 (statement -> expression .)
    CASE            reduce using rule 26 (statement -> expression .)
    FOR             reduce using rule 26 (statement -> expression .)
    REPEAT          reduce using rule 26 (statement -> expression .)
    WHILE           reduce using rule 26 (statement -> expression .)
    NOT             reduce using rule 26 (statement -> expression .)
    CHAR            reduce using rule 26 (statement -> expression .)
    STRING          reduce using rule 26 (statement -> expression .)
    REAL            reduce using rule 26 (statement -> expression .)
    INTEGER         reduce using rule 26 (statement -> expression .)
    $end            reduce using rule 26 (statement -> expression .)
    UNTIL           reduce using rule 26 (statement -> expression .)
    ENDWHILE        reduce using rule 26 (statement -> expression .)
    ENDIF           reduce using rule 26 (statement -> expression .)
    ELSE            reduce using rule 26 (statement -> expression .)
    ENDCASE         reduce using rule 26 (statement -> expression .)
    OTHERWISE       reduce using rule 26 (statement -> expression .)
    NEXT            reduce using rule 26 (statement -> expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 7

    (14) statement -> INPUT . ID

    ID              shift and go to state 36


state 8

    (15) statement -> OUTPUT . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 37

state 9

    (16) statement -> IF . expression THEN statements ENDIF
    (17) statement -> IF . expression THEN statements ELSE statements ENDIF
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 39

state 10

    (18) statement -> CASE . OF ID cases ENDCASE

    OF              shift and go to state 40


state 11

    (23) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 41


state 12

    (24) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    statements                     shift and go to state 42
    expression                     shift and go to state 6
    statement                      shift and go to state 2

state 13

    (25) statement -> WHILE . expression statements ENDWHILE
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 43

state 14

    (30) expression -> NOT . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 44

state 15

    (41) expression -> CHAR .

    OR              reduce using rule 41 (expression -> CHAR .)
    AND             reduce using rule 41 (expression -> CHAR .)
    EQUAL           reduce using rule 41 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 41 (expression -> CHAR .)
    LESS            reduce using rule 41 (expression -> CHAR .)
    GREATER         reduce using rule 41 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 41 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 41 (expression -> CHAR .)
    MUL             reduce using rule 41 (expression -> CHAR .)
    DIV             reduce using rule 41 (expression -> CHAR .)
    PLUS            reduce using rule 41 (expression -> CHAR .)
    MINUS           reduce using rule 41 (expression -> CHAR .)
    DECLARE         reduce using rule 41 (expression -> CHAR .)
    CONSTANT        reduce using rule 41 (expression -> CHAR .)
    ID              reduce using rule 41 (expression -> CHAR .)
    INPUT           reduce using rule 41 (expression -> CHAR .)
    OUTPUT          reduce using rule 41 (expression -> CHAR .)
    IF              reduce using rule 41 (expression -> CHAR .)
    CASE            reduce using rule 41 (expression -> CHAR .)
    FOR             reduce using rule 41 (expression -> CHAR .)
    REPEAT          reduce using rule 41 (expression -> CHAR .)
    WHILE           reduce using rule 41 (expression -> CHAR .)
    NOT             reduce using rule 41 (expression -> CHAR .)
    CHAR            reduce using rule 41 (expression -> CHAR .)
    STRING          reduce using rule 41 (expression -> CHAR .)
    REAL            reduce using rule 41 (expression -> CHAR .)
    INTEGER         reduce using rule 41 (expression -> CHAR .)
    $end            reduce using rule 41 (expression -> CHAR .)
    UNTIL           reduce using rule 41 (expression -> CHAR .)
    ENDWHILE        reduce using rule 41 (expression -> CHAR .)
    ENDIF           reduce using rule 41 (expression -> CHAR .)
    ELSE            reduce using rule 41 (expression -> CHAR .)
    ENDCASE         reduce using rule 41 (expression -> CHAR .)
    OTHERWISE       reduce using rule 41 (expression -> CHAR .)
    NEXT            reduce using rule 41 (expression -> CHAR .)
    THEN            reduce using rule 41 (expression -> CHAR .)
    TO              reduce using rule 41 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> CHAR .)
    COMMA           reduce using rule 41 (expression -> CHAR .)
    COLON           reduce using rule 41 (expression -> CHAR .)


state 16

    (42) expression -> STRING .

    OR              reduce using rule 42 (expression -> STRING .)
    AND             reduce using rule 42 (expression -> STRING .)
    EQUAL           reduce using rule 42 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 42 (expression -> STRING .)
    LESS            reduce using rule 42 (expression -> STRING .)
    GREATER         reduce using rule 42 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 42 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 42 (expression -> STRING .)
    MUL             reduce using rule 42 (expression -> STRING .)
    DIV             reduce using rule 42 (expression -> STRING .)
    PLUS            reduce using rule 42 (expression -> STRING .)
    MINUS           reduce using rule 42 (expression -> STRING .)
    DECLARE         reduce using rule 42 (expression -> STRING .)
    CONSTANT        reduce using rule 42 (expression -> STRING .)
    ID              reduce using rule 42 (expression -> STRING .)
    INPUT           reduce using rule 42 (expression -> STRING .)
    OUTPUT          reduce using rule 42 (expression -> STRING .)
    IF              reduce using rule 42 (expression -> STRING .)
    CASE            reduce using rule 42 (expression -> STRING .)
    FOR             reduce using rule 42 (expression -> STRING .)
    REPEAT          reduce using rule 42 (expression -> STRING .)
    WHILE           reduce using rule 42 (expression -> STRING .)
    NOT             reduce using rule 42 (expression -> STRING .)
    CHAR            reduce using rule 42 (expression -> STRING .)
    STRING          reduce using rule 42 (expression -> STRING .)
    REAL            reduce using rule 42 (expression -> STRING .)
    INTEGER         reduce using rule 42 (expression -> STRING .)
    $end            reduce using rule 42 (expression -> STRING .)
    UNTIL           reduce using rule 42 (expression -> STRING .)
    ENDWHILE        reduce using rule 42 (expression -> STRING .)
    ENDIF           reduce using rule 42 (expression -> STRING .)
    ELSE            reduce using rule 42 (expression -> STRING .)
    ENDCASE         reduce using rule 42 (expression -> STRING .)
    OTHERWISE       reduce using rule 42 (expression -> STRING .)
    NEXT            reduce using rule 42 (expression -> STRING .)
    THEN            reduce using rule 42 (expression -> STRING .)
    TO              reduce using rule 42 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> STRING .)
    COMMA           reduce using rule 42 (expression -> STRING .)
    COLON           reduce using rule 42 (expression -> STRING .)


state 17

    (43) expression -> REAL .

    OR              reduce using rule 43 (expression -> REAL .)
    AND             reduce using rule 43 (expression -> REAL .)
    EQUAL           reduce using rule 43 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 43 (expression -> REAL .)
    LESS            reduce using rule 43 (expression -> REAL .)
    GREATER         reduce using rule 43 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 43 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 43 (expression -> REAL .)
    MUL             reduce using rule 43 (expression -> REAL .)
    DIV             reduce using rule 43 (expression -> REAL .)
    PLUS            reduce using rule 43 (expression -> REAL .)
    MINUS           reduce using rule 43 (expression -> REAL .)
    DECLARE         reduce using rule 43 (expression -> REAL .)
    CONSTANT        reduce using rule 43 (expression -> REAL .)
    ID              reduce using rule 43 (expression -> REAL .)
    INPUT           reduce using rule 43 (expression -> REAL .)
    OUTPUT          reduce using rule 43 (expression -> REAL .)
    IF              reduce using rule 43 (expression -> REAL .)
    CASE            reduce using rule 43 (expression -> REAL .)
    FOR             reduce using rule 43 (expression -> REAL .)
    REPEAT          reduce using rule 43 (expression -> REAL .)
    WHILE           reduce using rule 43 (expression -> REAL .)
    NOT             reduce using rule 43 (expression -> REAL .)
    CHAR            reduce using rule 43 (expression -> REAL .)
    STRING          reduce using rule 43 (expression -> REAL .)
    REAL            reduce using rule 43 (expression -> REAL .)
    INTEGER         reduce using rule 43 (expression -> REAL .)
    $end            reduce using rule 43 (expression -> REAL .)
    UNTIL           reduce using rule 43 (expression -> REAL .)
    ENDWHILE        reduce using rule 43 (expression -> REAL .)
    ENDIF           reduce using rule 43 (expression -> REAL .)
    ELSE            reduce using rule 43 (expression -> REAL .)
    ENDCASE         reduce using rule 43 (expression -> REAL .)
    OTHERWISE       reduce using rule 43 (expression -> REAL .)
    NEXT            reduce using rule 43 (expression -> REAL .)
    THEN            reduce using rule 43 (expression -> REAL .)
    TO              reduce using rule 43 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> REAL .)
    COMMA           reduce using rule 43 (expression -> REAL .)
    COLON           reduce using rule 43 (expression -> REAL .)


state 18

    (44) expression -> INTEGER .

    OR              reduce using rule 44 (expression -> INTEGER .)
    AND             reduce using rule 44 (expression -> INTEGER .)
    EQUAL           reduce using rule 44 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 44 (expression -> INTEGER .)
    LESS            reduce using rule 44 (expression -> INTEGER .)
    GREATER         reduce using rule 44 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 44 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 44 (expression -> INTEGER .)
    MUL             reduce using rule 44 (expression -> INTEGER .)
    DIV             reduce using rule 44 (expression -> INTEGER .)
    PLUS            reduce using rule 44 (expression -> INTEGER .)
    MINUS           reduce using rule 44 (expression -> INTEGER .)
    DECLARE         reduce using rule 44 (expression -> INTEGER .)
    CONSTANT        reduce using rule 44 (expression -> INTEGER .)
    ID              reduce using rule 44 (expression -> INTEGER .)
    INPUT           reduce using rule 44 (expression -> INTEGER .)
    OUTPUT          reduce using rule 44 (expression -> INTEGER .)
    IF              reduce using rule 44 (expression -> INTEGER .)
    CASE            reduce using rule 44 (expression -> INTEGER .)
    FOR             reduce using rule 44 (expression -> INTEGER .)
    REPEAT          reduce using rule 44 (expression -> INTEGER .)
    WHILE           reduce using rule 44 (expression -> INTEGER .)
    NOT             reduce using rule 44 (expression -> INTEGER .)
    CHAR            reduce using rule 44 (expression -> INTEGER .)
    STRING          reduce using rule 44 (expression -> INTEGER .)
    REAL            reduce using rule 44 (expression -> INTEGER .)
    INTEGER         reduce using rule 44 (expression -> INTEGER .)
    $end            reduce using rule 44 (expression -> INTEGER .)
    UNTIL           reduce using rule 44 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 44 (expression -> INTEGER .)
    ENDIF           reduce using rule 44 (expression -> INTEGER .)
    ELSE            reduce using rule 44 (expression -> INTEGER .)
    ENDCASE         reduce using rule 44 (expression -> INTEGER .)
    OTHERWISE       reduce using rule 44 (expression -> INTEGER .)
    NEXT            reduce using rule 44 (expression -> INTEGER .)
    THEN            reduce using rule 44 (expression -> INTEGER .)
    TO              reduce using rule 44 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> INTEGER .)
    COMMA           reduce using rule 44 (expression -> INTEGER .)
    COLON           reduce using rule 44 (expression -> INTEGER .)


state 19

    (1) statements -> statements statement .

    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDCASE         reduce using rule 1 (statements -> statements statement .)
    OTHERWISE       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 20

    (3) statement -> DECLARE ID . COLON ID
    (5) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 45


state 21

    (9) statement -> ID ASSIGN . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 46

state 22

    (10) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN expression
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (13) indexes -> . expression TO expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    indexes                        shift and go to state 47
    expression                     shift and go to state 48

state 23

    (4) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 49


state 24

    (28) expression -> expression OR . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 50

state 25

    (29) expression -> expression AND . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 51

state 26

    (31) expression -> expression EQUAL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 52

state 27

    (32) expression -> expression NOT_EQUAL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 53

state 28

    (33) expression -> expression LESS . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 54

state 29

    (34) expression -> expression GREATER . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 55

state 30

    (35) expression -> expression LESS_EQUAL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 56

state 31

    (36) expression -> expression GREATER_EQUAL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 57

state 32

    (37) expression -> expression MUL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 58

state 33

    (38) expression -> expression DIV . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 59

state 34

    (39) expression -> expression PLUS . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 60

state 35

    (40) expression -> expression MINUS . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 61

state 36

    (14) statement -> INPUT ID .

    DECLARE         reduce using rule 14 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 14 (statement -> INPUT ID .)
    ID              reduce using rule 14 (statement -> INPUT ID .)
    INPUT           reduce using rule 14 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 14 (statement -> INPUT ID .)
    IF              reduce using rule 14 (statement -> INPUT ID .)
    CASE            reduce using rule 14 (statement -> INPUT ID .)
    FOR             reduce using rule 14 (statement -> INPUT ID .)
    REPEAT          reduce using rule 14 (statement -> INPUT ID .)
    WHILE           reduce using rule 14 (statement -> INPUT ID .)
    NOT             reduce using rule 14 (statement -> INPUT ID .)
    CHAR            reduce using rule 14 (statement -> INPUT ID .)
    STRING          reduce using rule 14 (statement -> INPUT ID .)
    REAL            reduce using rule 14 (statement -> INPUT ID .)
    INTEGER         reduce using rule 14 (statement -> INPUT ID .)
    $end            reduce using rule 14 (statement -> INPUT ID .)
    UNTIL           reduce using rule 14 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 14 (statement -> INPUT ID .)
    ENDIF           reduce using rule 14 (statement -> INPUT ID .)
    ELSE            reduce using rule 14 (statement -> INPUT ID .)
    ENDCASE         reduce using rule 14 (statement -> INPUT ID .)
    OTHERWISE       reduce using rule 14 (statement -> INPUT ID .)
    NEXT            reduce using rule 14 (statement -> INPUT ID .)


state 37

    (15) statement -> OUTPUT expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 15 (statement -> OUTPUT expression .)
    CONSTANT        reduce using rule 15 (statement -> OUTPUT expression .)
    ID              reduce using rule 15 (statement -> OUTPUT expression .)
    INPUT           reduce using rule 15 (statement -> OUTPUT expression .)
    OUTPUT          reduce using rule 15 (statement -> OUTPUT expression .)
    IF              reduce using rule 15 (statement -> OUTPUT expression .)
    CASE            reduce using rule 15 (statement -> OUTPUT expression .)
    FOR             reduce using rule 15 (statement -> OUTPUT expression .)
    REPEAT          reduce using rule 15 (statement -> OUTPUT expression .)
    WHILE           reduce using rule 15 (statement -> OUTPUT expression .)
    NOT             reduce using rule 15 (statement -> OUTPUT expression .)
    CHAR            reduce using rule 15 (statement -> OUTPUT expression .)
    STRING          reduce using rule 15 (statement -> OUTPUT expression .)
    REAL            reduce using rule 15 (statement -> OUTPUT expression .)
    INTEGER         reduce using rule 15 (statement -> OUTPUT expression .)
    $end            reduce using rule 15 (statement -> OUTPUT expression .)
    UNTIL           reduce using rule 15 (statement -> OUTPUT expression .)
    ENDWHILE        reduce using rule 15 (statement -> OUTPUT expression .)
    ENDIF           reduce using rule 15 (statement -> OUTPUT expression .)
    ELSE            reduce using rule 15 (statement -> OUTPUT expression .)
    ENDCASE         reduce using rule 15 (statement -> OUTPUT expression .)
    OTHERWISE       reduce using rule 15 (statement -> OUTPUT expression .)
    NEXT            reduce using rule 15 (statement -> OUTPUT expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 38

    (27) expression -> ID .

    OR              reduce using rule 27 (expression -> ID .)
    AND             reduce using rule 27 (expression -> ID .)
    EQUAL           reduce using rule 27 (expression -> ID .)
    NOT_EQUAL       reduce using rule 27 (expression -> ID .)
    LESS            reduce using rule 27 (expression -> ID .)
    GREATER         reduce using rule 27 (expression -> ID .)
    LESS_EQUAL      reduce using rule 27 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 27 (expression -> ID .)
    MUL             reduce using rule 27 (expression -> ID .)
    DIV             reduce using rule 27 (expression -> ID .)
    PLUS            reduce using rule 27 (expression -> ID .)
    MINUS           reduce using rule 27 (expression -> ID .)
    DECLARE         reduce using rule 27 (expression -> ID .)
    CONSTANT        reduce using rule 27 (expression -> ID .)
    ID              reduce using rule 27 (expression -> ID .)
    INPUT           reduce using rule 27 (expression -> ID .)
    OUTPUT          reduce using rule 27 (expression -> ID .)
    IF              reduce using rule 27 (expression -> ID .)
    CASE            reduce using rule 27 (expression -> ID .)
    FOR             reduce using rule 27 (expression -> ID .)
    REPEAT          reduce using rule 27 (expression -> ID .)
    WHILE           reduce using rule 27 (expression -> ID .)
    NOT             reduce using rule 27 (expression -> ID .)
    CHAR            reduce using rule 27 (expression -> ID .)
    STRING          reduce using rule 27 (expression -> ID .)
    REAL            reduce using rule 27 (expression -> ID .)
    INTEGER         reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)
    UNTIL           reduce using rule 27 (expression -> ID .)
    ENDWHILE        reduce using rule 27 (expression -> ID .)
    ENDIF           reduce using rule 27 (expression -> ID .)
    ELSE            reduce using rule 27 (expression -> ID .)
    ENDCASE         reduce using rule 27 (expression -> ID .)
    OTHERWISE       reduce using rule 27 (expression -> ID .)
    NEXT            reduce using rule 27 (expression -> ID .)
    THEN            reduce using rule 27 (expression -> ID .)
    TO              reduce using rule 27 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 27 (expression -> ID .)
    COMMA           reduce using rule 27 (expression -> ID .)
    COLON           reduce using rule 27 (expression -> ID .)


state 39

    (16) statement -> IF expression . THEN statements ENDIF
    (17) statement -> IF expression . THEN statements ELSE statements ENDIF
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    THEN            shift and go to state 62
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 40

    (18) statement -> CASE OF . ID cases ENDCASE

    ID              shift and go to state 63


state 41

    (23) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 64


state 42

    (24) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    UNTIL           shift and go to state 65
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statement                      shift and go to state 19

state 43

    (25) statement -> WHILE expression . statements ENDWHILE
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statements                     shift and go to state 66
    statement                      shift and go to state 2

state 44

    (30) expression -> NOT expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    OR              reduce using rule 30 (expression -> NOT expression .)
    AND             reduce using rule 30 (expression -> NOT expression .)
    EQUAL           reduce using rule 30 (expression -> NOT expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> NOT expression .)
    LESS            reduce using rule 30 (expression -> NOT expression .)
    GREATER         reduce using rule 30 (expression -> NOT expression .)
    LESS_EQUAL      reduce using rule 30 (expression -> NOT expression .)
    GREATER_EQUAL   reduce using rule 30 (expression -> NOT expression .)
    MUL             reduce using rule 30 (expression -> NOT expression .)
    DIV             reduce using rule 30 (expression -> NOT expression .)
    PLUS            reduce using rule 30 (expression -> NOT expression .)
    MINUS           reduce using rule 30 (expression -> NOT expression .)
    DECLARE         reduce using rule 30 (expression -> NOT expression .)
    CONSTANT        reduce using rule 30 (expression -> NOT expression .)
    ID              reduce using rule 30 (expression -> NOT expression .)
    INPUT           reduce using rule 30 (expression -> NOT expression .)
    OUTPUT          reduce using rule 30 (expression -> NOT expression .)
    IF              reduce using rule 30 (expression -> NOT expression .)
    CASE            reduce using rule 30 (expression -> NOT expression .)
    FOR             reduce using rule 30 (expression -> NOT expression .)
    REPEAT          reduce using rule 30 (expression -> NOT expression .)
    WHILE           reduce using rule 30 (expression -> NOT expression .)
    NOT             reduce using rule 30 (expression -> NOT expression .)
    CHAR            reduce using rule 30 (expression -> NOT expression .)
    STRING          reduce using rule 30 (expression -> NOT expression .)
    REAL            reduce using rule 30 (expression -> NOT expression .)
    INTEGER         reduce using rule 30 (expression -> NOT expression .)
    $end            reduce using rule 30 (expression -> NOT expression .)
    UNTIL           reduce using rule 30 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 30 (expression -> NOT expression .)
    ENDIF           reduce using rule 30 (expression -> NOT expression .)
    ELSE            reduce using rule 30 (expression -> NOT expression .)
    ENDCASE         reduce using rule 30 (expression -> NOT expression .)
    OTHERWISE       reduce using rule 30 (expression -> NOT expression .)
    NEXT            reduce using rule 30 (expression -> NOT expression .)
    THEN            reduce using rule 30 (expression -> NOT expression .)
    TO              reduce using rule 30 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 30 (expression -> NOT expression .)
    COMMA           reduce using rule 30 (expression -> NOT expression .)
    COLON           reduce using rule 30 (expression -> NOT expression .)

  ! OR              [ shift and go to state 24 ]
  ! AND             [ shift and go to state 25 ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 45

    (3) statement -> DECLARE ID COLON . ID
    (5) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 67
    ARRAY           shift and go to state 68


state 46

    (9) statement -> ID ASSIGN expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CONSTANT        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 9 (statement -> ID ASSIGN expression .)
    INPUT           reduce using rule 9 (statement -> ID ASSIGN expression .)
    OUTPUT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 9 (statement -> ID ASSIGN expression .)
    CASE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 9 (statement -> ID ASSIGN expression .)
    REPEAT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 9 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 9 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 9 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 9 (statement -> ID ASSIGN expression .)
    REAL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    INTEGER         reduce using rule 9 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 9 (statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDWHILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDIF           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDCASE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    OTHERWISE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    NEXT            reduce using rule 9 (statement -> ID ASSIGN expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 47

    (10) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN expression
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 69
    COMMA           shift and go to state 70


state 48

    (12) indexes -> expression .
    (13) indexes -> expression . TO expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 12 (indexes -> expression .)
    COMMA           reduce using rule 12 (indexes -> expression .)
    COLON           reduce using rule 12 (indexes -> expression .)
    TO              shift and go to state 71
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 49

    (4) statement -> CONSTANT ID EQUAL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 72

state 50

    (28) expression -> expression OR expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    OR              reduce using rule 28 (expression -> expression OR expression .)
    AND             reduce using rule 28 (expression -> expression OR expression .)
    EQUAL           reduce using rule 28 (expression -> expression OR expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression OR expression .)
    LESS            reduce using rule 28 (expression -> expression OR expression .)
    GREATER         reduce using rule 28 (expression -> expression OR expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression OR expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression OR expression .)
    MUL             reduce using rule 28 (expression -> expression OR expression .)
    DIV             reduce using rule 28 (expression -> expression OR expression .)
    PLUS            reduce using rule 28 (expression -> expression OR expression .)
    MINUS           reduce using rule 28 (expression -> expression OR expression .)
    DECLARE         reduce using rule 28 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 28 (expression -> expression OR expression .)
    ID              reduce using rule 28 (expression -> expression OR expression .)
    INPUT           reduce using rule 28 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 28 (expression -> expression OR expression .)
    IF              reduce using rule 28 (expression -> expression OR expression .)
    CASE            reduce using rule 28 (expression -> expression OR expression .)
    FOR             reduce using rule 28 (expression -> expression OR expression .)
    REPEAT          reduce using rule 28 (expression -> expression OR expression .)
    WHILE           reduce using rule 28 (expression -> expression OR expression .)
    NOT             reduce using rule 28 (expression -> expression OR expression .)
    CHAR            reduce using rule 28 (expression -> expression OR expression .)
    STRING          reduce using rule 28 (expression -> expression OR expression .)
    REAL            reduce using rule 28 (expression -> expression OR expression .)
    INTEGER         reduce using rule 28 (expression -> expression OR expression .)
    $end            reduce using rule 28 (expression -> expression OR expression .)
    UNTIL           reduce using rule 28 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 28 (expression -> expression OR expression .)
    ENDIF           reduce using rule 28 (expression -> expression OR expression .)
    ELSE            reduce using rule 28 (expression -> expression OR expression .)
    ENDCASE         reduce using rule 28 (expression -> expression OR expression .)
    OTHERWISE       reduce using rule 28 (expression -> expression OR expression .)
    NEXT            reduce using rule 28 (expression -> expression OR expression .)
    THEN            reduce using rule 28 (expression -> expression OR expression .)
    TO              reduce using rule 28 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 28 (expression -> expression OR expression .)
    COMMA           reduce using rule 28 (expression -> expression OR expression .)
    COLON           reduce using rule 28 (expression -> expression OR expression .)

  ! OR              [ shift and go to state 24 ]
  ! AND             [ shift and go to state 25 ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 51

    (29) expression -> expression AND expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    AND             reduce using rule 29 (expression -> expression AND expression .)
    EQUAL           reduce using rule 29 (expression -> expression AND expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression AND expression .)
    LESS            reduce using rule 29 (expression -> expression AND expression .)
    GREATER         reduce using rule 29 (expression -> expression AND expression .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression AND expression .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression AND expression .)
    MUL             reduce using rule 29 (expression -> expression AND expression .)
    DIV             reduce using rule 29 (expression -> expression AND expression .)
    PLUS            reduce using rule 29 (expression -> expression AND expression .)
    MINUS           reduce using rule 29 (expression -> expression AND expression .)
    DECLARE         reduce using rule 29 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 29 (expression -> expression AND expression .)
    ID              reduce using rule 29 (expression -> expression AND expression .)
    INPUT           reduce using rule 29 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 29 (expression -> expression AND expression .)
    IF              reduce using rule 29 (expression -> expression AND expression .)
    CASE            reduce using rule 29 (expression -> expression AND expression .)
    FOR             reduce using rule 29 (expression -> expression AND expression .)
    REPEAT          reduce using rule 29 (expression -> expression AND expression .)
    WHILE           reduce using rule 29 (expression -> expression AND expression .)
    NOT             reduce using rule 29 (expression -> expression AND expression .)
    CHAR            reduce using rule 29 (expression -> expression AND expression .)
    STRING          reduce using rule 29 (expression -> expression AND expression .)
    REAL            reduce using rule 29 (expression -> expression AND expression .)
    INTEGER         reduce using rule 29 (expression -> expression AND expression .)
    $end            reduce using rule 29 (expression -> expression AND expression .)
    UNTIL           reduce using rule 29 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 29 (expression -> expression AND expression .)
    ENDIF           reduce using rule 29 (expression -> expression AND expression .)
    ELSE            reduce using rule 29 (expression -> expression AND expression .)
    ENDCASE         reduce using rule 29 (expression -> expression AND expression .)
    OTHERWISE       reduce using rule 29 (expression -> expression AND expression .)
    NEXT            reduce using rule 29 (expression -> expression AND expression .)
    THEN            reduce using rule 29 (expression -> expression AND expression .)
    TO              reduce using rule 29 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    COLON           reduce using rule 29 (expression -> expression AND expression .)
    OR              shift and go to state 24

  ! OR              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 25 ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 52

    (31) expression -> expression EQUAL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 31 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 31 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 31 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 31 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 31 (expression -> expression EQUAL expression .)
    MUL             reduce using rule 31 (expression -> expression EQUAL expression .)
    DIV             reduce using rule 31 (expression -> expression EQUAL expression .)
    PLUS            reduce using rule 31 (expression -> expression EQUAL expression .)
    MINUS           reduce using rule 31 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 31 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 31 (expression -> expression EQUAL expression .)
    ID              reduce using rule 31 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 31 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 31 (expression -> expression EQUAL expression .)
    IF              reduce using rule 31 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 31 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 31 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 31 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 31 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 31 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 31 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 31 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 31 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 31 (expression -> expression EQUAL expression .)
    $end            reduce using rule 31 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 31 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 31 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 31 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 31 (expression -> expression EQUAL expression .)
    ENDCASE         reduce using rule 31 (expression -> expression EQUAL expression .)
    OTHERWISE       reduce using rule 31 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 31 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 31 (expression -> expression EQUAL expression .)
    TO              reduce using rule 31 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 31 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 31 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 31 (expression -> expression EQUAL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 31 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 53

    (32) expression -> expression NOT_EQUAL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    MUL             reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    DIV             reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    PLUS            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    MINUS           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    ENDCASE         reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    OTHERWISE       reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 54

    (33) expression -> expression LESS expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 33 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression LESS expression .)
    LESS            reduce using rule 33 (expression -> expression LESS expression .)
    GREATER         reduce using rule 33 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression LESS expression .)
    MUL             reduce using rule 33 (expression -> expression LESS expression .)
    DIV             reduce using rule 33 (expression -> expression LESS expression .)
    PLUS            reduce using rule 33 (expression -> expression LESS expression .)
    MINUS           reduce using rule 33 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 33 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 33 (expression -> expression LESS expression .)
    ID              reduce using rule 33 (expression -> expression LESS expression .)
    INPUT           reduce using rule 33 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 33 (expression -> expression LESS expression .)
    IF              reduce using rule 33 (expression -> expression LESS expression .)
    CASE            reduce using rule 33 (expression -> expression LESS expression .)
    FOR             reduce using rule 33 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 33 (expression -> expression LESS expression .)
    WHILE           reduce using rule 33 (expression -> expression LESS expression .)
    NOT             reduce using rule 33 (expression -> expression LESS expression .)
    CHAR            reduce using rule 33 (expression -> expression LESS expression .)
    STRING          reduce using rule 33 (expression -> expression LESS expression .)
    REAL            reduce using rule 33 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 33 (expression -> expression LESS expression .)
    $end            reduce using rule 33 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 33 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 33 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 33 (expression -> expression LESS expression .)
    ELSE            reduce using rule 33 (expression -> expression LESS expression .)
    ENDCASE         reduce using rule 33 (expression -> expression LESS expression .)
    OTHERWISE       reduce using rule 33 (expression -> expression LESS expression .)
    NEXT            reduce using rule 33 (expression -> expression LESS expression .)
    THEN            reduce using rule 33 (expression -> expression LESS expression .)
    TO              reduce using rule 33 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 33 (expression -> expression LESS expression .)
    COMMA           reduce using rule 33 (expression -> expression LESS expression .)
    COLON           reduce using rule 33 (expression -> expression LESS expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 55

    (34) expression -> expression GREATER expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 34 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression GREATER expression .)
    LESS            reduce using rule 34 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 34 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression GREATER expression .)
    MUL             reduce using rule 34 (expression -> expression GREATER expression .)
    DIV             reduce using rule 34 (expression -> expression GREATER expression .)
    PLUS            reduce using rule 34 (expression -> expression GREATER expression .)
    MINUS           reduce using rule 34 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 34 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 34 (expression -> expression GREATER expression .)
    ID              reduce using rule 34 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 34 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 34 (expression -> expression GREATER expression .)
    IF              reduce using rule 34 (expression -> expression GREATER expression .)
    CASE            reduce using rule 34 (expression -> expression GREATER expression .)
    FOR             reduce using rule 34 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 34 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 34 (expression -> expression GREATER expression .)
    NOT             reduce using rule 34 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 34 (expression -> expression GREATER expression .)
    STRING          reduce using rule 34 (expression -> expression GREATER expression .)
    REAL            reduce using rule 34 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 34 (expression -> expression GREATER expression .)
    $end            reduce using rule 34 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 34 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 34 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 34 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 34 (expression -> expression GREATER expression .)
    ENDCASE         reduce using rule 34 (expression -> expression GREATER expression .)
    OTHERWISE       reduce using rule 34 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 34 (expression -> expression GREATER expression .)
    THEN            reduce using rule 34 (expression -> expression GREATER expression .)
    TO              reduce using rule 34 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 34 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 34 (expression -> expression GREATER expression .)
    COLON           reduce using rule 34 (expression -> expression GREATER expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 56

    (35) expression -> expression LESS_EQUAL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    MUL             reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    DIV             reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    PLUS            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    MINUS           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    ENDCASE         reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    OTHERWISE       reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 35 (expression -> expression LESS_EQUAL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 35 (expression -> expression LESS_EQUAL expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression LESS_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 57

    (36) expression -> expression GREATER_EQUAL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    EQUAL           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    MUL             reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    DIV             reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    PLUS            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    MINUS           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ENDCASE         reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    OTHERWISE       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25

  ! OR              [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! EQUAL           [ shift and go to state 26 ]
  ! NOT_EQUAL       [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 28 ]
  ! GREATER         [ shift and go to state 29 ]
  ! LESS_EQUAL      [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 58

    (37) expression -> expression MUL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    MUL             reduce using rule 37 (expression -> expression MUL expression .)
    DIV             reduce using rule 37 (expression -> expression MUL expression .)
    PLUS            reduce using rule 37 (expression -> expression MUL expression .)
    MINUS           reduce using rule 37 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 37 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 37 (expression -> expression MUL expression .)
    ID              reduce using rule 37 (expression -> expression MUL expression .)
    INPUT           reduce using rule 37 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 37 (expression -> expression MUL expression .)
    IF              reduce using rule 37 (expression -> expression MUL expression .)
    CASE            reduce using rule 37 (expression -> expression MUL expression .)
    FOR             reduce using rule 37 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 37 (expression -> expression MUL expression .)
    WHILE           reduce using rule 37 (expression -> expression MUL expression .)
    NOT             reduce using rule 37 (expression -> expression MUL expression .)
    CHAR            reduce using rule 37 (expression -> expression MUL expression .)
    STRING          reduce using rule 37 (expression -> expression MUL expression .)
    REAL            reduce using rule 37 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 37 (expression -> expression MUL expression .)
    $end            reduce using rule 37 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 37 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 37 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 37 (expression -> expression MUL expression .)
    ELSE            reduce using rule 37 (expression -> expression MUL expression .)
    ENDCASE         reduce using rule 37 (expression -> expression MUL expression .)
    OTHERWISE       reduce using rule 37 (expression -> expression MUL expression .)
    NEXT            reduce using rule 37 (expression -> expression MUL expression .)
    THEN            reduce using rule 37 (expression -> expression MUL expression .)
    TO              reduce using rule 37 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 37 (expression -> expression MUL expression .)
    COMMA           reduce using rule 37 (expression -> expression MUL expression .)
    COLON           reduce using rule 37 (expression -> expression MUL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31

  ! OR              [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! EQUAL           [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! LESS_EQUAL      [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 37 (expression -> expression MUL expression .) ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 59

    (38) expression -> expression DIV expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    MUL             reduce using rule 38 (expression -> expression DIV expression .)
    DIV             reduce using rule 38 (expression -> expression DIV expression .)
    PLUS            reduce using rule 38 (expression -> expression DIV expression .)
    MINUS           reduce using rule 38 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 38 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 38 (expression -> expression DIV expression .)
    ID              reduce using rule 38 (expression -> expression DIV expression .)
    INPUT           reduce using rule 38 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 38 (expression -> expression DIV expression .)
    IF              reduce using rule 38 (expression -> expression DIV expression .)
    CASE            reduce using rule 38 (expression -> expression DIV expression .)
    FOR             reduce using rule 38 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 38 (expression -> expression DIV expression .)
    WHILE           reduce using rule 38 (expression -> expression DIV expression .)
    NOT             reduce using rule 38 (expression -> expression DIV expression .)
    CHAR            reduce using rule 38 (expression -> expression DIV expression .)
    STRING          reduce using rule 38 (expression -> expression DIV expression .)
    REAL            reduce using rule 38 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 38 (expression -> expression DIV expression .)
    $end            reduce using rule 38 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 38 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 38 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 38 (expression -> expression DIV expression .)
    ELSE            reduce using rule 38 (expression -> expression DIV expression .)
    ENDCASE         reduce using rule 38 (expression -> expression DIV expression .)
    OTHERWISE       reduce using rule 38 (expression -> expression DIV expression .)
    NEXT            reduce using rule 38 (expression -> expression DIV expression .)
    THEN            reduce using rule 38 (expression -> expression DIV expression .)
    TO              reduce using rule 38 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 38 (expression -> expression DIV expression .)
    COMMA           reduce using rule 38 (expression -> expression DIV expression .)
    COLON           reduce using rule 38 (expression -> expression DIV expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31

  ! OR              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! EQUAL           [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! LESS_EQUAL      [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! MUL             [ shift and go to state 32 ]
  ! DIV             [ shift and go to state 33 ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 60

    (39) expression -> expression PLUS expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 39 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 39 (expression -> expression PLUS expression .)
    ID              reduce using rule 39 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 39 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 39 (expression -> expression PLUS expression .)
    IF              reduce using rule 39 (expression -> expression PLUS expression .)
    CASE            reduce using rule 39 (expression -> expression PLUS expression .)
    FOR             reduce using rule 39 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 39 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 39 (expression -> expression PLUS expression .)
    NOT             reduce using rule 39 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 39 (expression -> expression PLUS expression .)
    STRING          reduce using rule 39 (expression -> expression PLUS expression .)
    REAL            reduce using rule 39 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 39 (expression -> expression PLUS expression .)
    $end            reduce using rule 39 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 39 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 39 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 39 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 39 (expression -> expression PLUS expression .)
    ENDCASE         reduce using rule 39 (expression -> expression PLUS expression .)
    OTHERWISE       reduce using rule 39 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 39 (expression -> expression PLUS expression .)
    THEN            reduce using rule 39 (expression -> expression PLUS expression .)
    TO              reduce using rule 39 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    COLON           reduce using rule 39 (expression -> expression PLUS expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33

  ! OR              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 61

    (40) expression -> expression MINUS expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 40 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 40 (expression -> expression MINUS expression .)
    ID              reduce using rule 40 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 40 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 40 (expression -> expression MINUS expression .)
    IF              reduce using rule 40 (expression -> expression MINUS expression .)
    CASE            reduce using rule 40 (expression -> expression MINUS expression .)
    FOR             reduce using rule 40 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 40 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 40 (expression -> expression MINUS expression .)
    NOT             reduce using rule 40 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 40 (expression -> expression MINUS expression .)
    STRING          reduce using rule 40 (expression -> expression MINUS expression .)
    REAL            reduce using rule 40 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 40 (expression -> expression MINUS expression .)
    $end            reduce using rule 40 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 40 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 40 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 40 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 40 (expression -> expression MINUS expression .)
    ENDCASE         reduce using rule 40 (expression -> expression MINUS expression .)
    OTHERWISE       reduce using rule 40 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 40 (expression -> expression MINUS expression .)
    THEN            reduce using rule 40 (expression -> expression MINUS expression .)
    TO              reduce using rule 40 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    COLON           reduce using rule 40 (expression -> expression MINUS expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33

  ! OR              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 62

    (16) statement -> IF expression THEN . statements ENDIF
    (17) statement -> IF expression THEN . statements ELSE statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statements                     shift and go to state 73
    statement                      shift and go to state 2

state 63

    (18) statement -> CASE OF ID . cases ENDCASE
    (19) cases -> . cases case
    (20) cases -> . case
    (21) case -> . indexes COLON statements
    (22) case -> . OTHERWISE COLON statements
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (13) indexes -> . expression TO expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    OTHERWISE       shift and go to state 77
    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    cases                          shift and go to state 74
    case                           shift and go to state 75
    indexes                        shift and go to state 76
    expression                     shift and go to state 48

state 64

    (23) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 78

state 65

    (24) statement -> REPEAT statements UNTIL . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 79

state 66

    (25) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ENDWHILE        shift and go to state 80
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statement                      shift and go to state 19

state 67

    (3) statement -> DECLARE ID COLON ID .

    DECLARE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDCASE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OTHERWISE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 3 (statement -> DECLARE ID COLON ID .)


state 68

    (5) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 81


state 69

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN expression

    ASSIGN          shift and go to state 82


state 70

    (11) indexes -> indexes COMMA . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 83

state 71

    (13) indexes -> expression TO . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 84

state 72

    (4) statement -> CONSTANT ID EQUAL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDCASE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OTHERWISE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 73

    (16) statement -> IF expression THEN statements . ENDIF
    (17) statement -> IF expression THEN statements . ELSE statements ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ENDIF           shift and go to state 85
    ELSE            shift and go to state 86
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statement                      shift and go to state 19

state 74

    (18) statement -> CASE OF ID cases . ENDCASE
    (19) cases -> cases . case
    (21) case -> . indexes COLON statements
    (22) case -> . OTHERWISE COLON statements
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (13) indexes -> . expression TO expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ENDCASE         shift and go to state 87
    OTHERWISE       shift and go to state 77
    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    case                           shift and go to state 88
    indexes                        shift and go to state 76
    expression                     shift and go to state 48

state 75

    (20) cases -> case .

    ENDCASE         reduce using rule 20 (cases -> case .)
    OTHERWISE       reduce using rule 20 (cases -> case .)
    ID              reduce using rule 20 (cases -> case .)
    NOT             reduce using rule 20 (cases -> case .)
    CHAR            reduce using rule 20 (cases -> case .)
    STRING          reduce using rule 20 (cases -> case .)
    REAL            reduce using rule 20 (cases -> case .)
    INTEGER         reduce using rule 20 (cases -> case .)


state 76

    (21) case -> indexes . COLON statements
    (11) indexes -> indexes . COMMA expression

    COLON           shift and go to state 89
    COMMA           shift and go to state 70


state 77

    (22) case -> OTHERWISE . COLON statements

    COLON           shift and go to state 90


state 78

    (23) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    TO              shift and go to state 91
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 79

    (24) statement -> REPEAT statements UNTIL expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    ENDCASE         reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    OTHERWISE       reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 24 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 80

    (25) statement -> WHILE expression statements ENDWHILE .

    DECLARE         reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    ENDCASE         reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    OTHERWISE       reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 25 (statement -> WHILE expression statements ENDWHILE .)


state 81

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (6) dimensions -> . dimensions COMMA dimension
    (7) dimensions -> . dimension
    (8) dimension -> . expression COLON expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    dimensions                     shift and go to state 92
    dimension                      shift and go to state 93
    expression                     shift and go to state 94

state 82

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 95

state 83

    (11) indexes -> indexes COMMA expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 11 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 11 (indexes -> indexes COMMA expression .)
    COLON           reduce using rule 11 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 84

    (13) indexes -> expression TO expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 13 (indexes -> expression TO expression .)
    COMMA           reduce using rule 13 (indexes -> expression TO expression .)
    COLON           reduce using rule 13 (indexes -> expression TO expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 85

    (16) statement -> IF expression THEN statements ENDIF .

    DECLARE         reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    ENDCASE         reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    OTHERWISE       reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 16 (statement -> IF expression THEN statements ENDIF .)


state 86

    (17) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statements                     shift and go to state 96
    statement                      shift and go to state 2

state 87

    (18) statement -> CASE OF ID cases ENDCASE .

    DECLARE         reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    ENDCASE         reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    OTHERWISE       reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 18 (statement -> CASE OF ID cases ENDCASE .)


state 88

    (19) cases -> cases case .

    ENDCASE         reduce using rule 19 (cases -> cases case .)
    OTHERWISE       reduce using rule 19 (cases -> cases case .)
    ID              reduce using rule 19 (cases -> cases case .)
    NOT             reduce using rule 19 (cases -> cases case .)
    CHAR            reduce using rule 19 (cases -> cases case .)
    STRING          reduce using rule 19 (cases -> cases case .)
    REAL            reduce using rule 19 (cases -> cases case .)
    INTEGER         reduce using rule 19 (cases -> cases case .)


state 89

    (21) case -> indexes COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    statements                     shift and go to state 97
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 90

    (22) case -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    statements                     shift and go to state 98
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 91

    (23) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 99

state 92

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (6) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 100
    COMMA           shift and go to state 101


state 93

    (7) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimension .)


state 94

    (8) dimension -> expression . COLON expression
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    COLON           shift and go to state 102
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 95

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    DECLARE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CONSTANT        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ID              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INPUT           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OUTPUT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IF              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CASE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FOR             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REPEAT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WHILE           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NOT             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CHAR            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    STRING          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REAL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INTEGER         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    $end            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    UNTIL           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDWHILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDIF           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ELSE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDCASE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OTHERWISE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NEXT            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 96

    (17) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ENDIF           shift and go to state 103
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statement                      shift and go to state 19

state 97

    (21) case -> indexes COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
    ENDCASE         reduce using rule 21 (case -> indexes COLON statements .)
    OTHERWISE       reduce using rule 21 (case -> indexes COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

  ! ID              [ reduce using rule 21 (case -> indexes COLON statements .) ]
  ! NOT             [ reduce using rule 21 (case -> indexes COLON statements .) ]
  ! CHAR            [ reduce using rule 21 (case -> indexes COLON statements .) ]
  ! STRING          [ reduce using rule 21 (case -> indexes COLON statements .) ]
  ! REAL            [ reduce using rule 21 (case -> indexes COLON statements .) ]
  ! INTEGER         [ reduce using rule 21 (case -> indexes COLON statements .) ]

    statement                      shift and go to state 19
    expression                     shift and go to state 6

state 98

    (22) case -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
    ENDCASE         reduce using rule 22 (case -> OTHERWISE COLON statements .)
    OTHERWISE       reduce using rule 22 (case -> OTHERWISE COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

  ! ID              [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]
  ! NOT             [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]
  ! CHAR            [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]
  ! STRING          [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]
  ! REAL            [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]
  ! INTEGER         [ reduce using rule 22 (case -> OTHERWISE COLON statements .) ]

    statement                      shift and go to state 19
    expression                     shift and go to state 6

state 99

    (23) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statements                     shift and go to state 104
    statement                      shift and go to state 2

state 100

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 105


state 101

    (6) dimensions -> dimensions COMMA . dimension
    (8) dimension -> . expression COLON expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    dimension                      shift and go to state 106
    expression                     shift and go to state 94

state 102

    (8) dimension -> expression COLON . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    ID              shift and go to state 38
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 107

state 103

    (17) statement -> IF expression THEN statements ELSE statements ENDIF .

    DECLARE         reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDCASE         reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OTHERWISE       reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 17 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 104

    (23) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (14) statement -> . INPUT ID
    (15) statement -> . OUTPUT expression
    (16) statement -> . IF expression THEN statements ENDIF
    (17) statement -> . IF expression THEN statements ELSE statements ENDIF
    (18) statement -> . CASE OF ID cases ENDCASE
    (23) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (24) statement -> . REPEAT statements UNTIL expression
    (25) statement -> . WHILE expression statements ENDWHILE
    (26) statement -> . expression
    (27) expression -> . ID
    (28) expression -> . expression OR expression
    (29) expression -> . expression AND expression
    (30) expression -> . NOT expression
    (31) expression -> . expression EQUAL expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESS_EQUAL expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . CHAR
    (42) expression -> . STRING
    (43) expression -> . REAL
    (44) expression -> . INTEGER

    NEXT            shift and go to state 108
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    NOT             shift and go to state 14
    CHAR            shift and go to state 15
    STRING          shift and go to state 16
    REAL            shift and go to state 17
    INTEGER         shift and go to state 18

    expression                     shift and go to state 6
    statement                      shift and go to state 19

state 105

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 109


state 106

    (6) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 6 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 6 (dimensions -> dimensions COMMA dimension .)


state 107

    (8) dimension -> expression COLON expression .
    (28) expression -> expression . OR expression
    (29) expression -> expression . AND expression
    (31) expression -> expression . EQUAL expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESS_EQUAL expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression

    RIGHT_SQUARE    reduce using rule 8 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 8 (dimension -> expression COLON expression .)
    OR              shift and go to state 24
    AND             shift and go to state 25
    EQUAL           shift and go to state 26
    NOT_EQUAL       shift and go to state 27
    LESS            shift and go to state 28
    GREATER         shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35


state 108

    (23) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 110


state 109

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DECLARE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCASE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OTHERWISE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 110

    (23) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DECLARE         reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDCASE         reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OTHERWISE       reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 23 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT in state 97 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING in state 97 resolved as shift
WARNING: shift/reduce conflict for REAL in state 97 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT in state 98 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING in state 98 resolved as shift
WARNING: shift/reduce conflict for REAL in state 98 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 98 resolved as shift
