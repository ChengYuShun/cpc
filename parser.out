Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    GETRECORD
    INHERITS
    LEFT_BRACE
    NEW
    PRIVATE
    PUBLIC
    PUTRECORD
    RIGHT_BRACE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DECLARE ID COLON ID
Rule 4     statement -> CONSTANT ID EQUAL expression
Rule 5     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 6     dimensions -> dimensions COMMA dimension
Rule 7     dimensions -> dimension
Rule 8     dimension -> expression COLON expression
Rule 9     statement -> ID ASSIGN expression
Rule 10    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
Rule 11    indexes -> indexes COMMA expression
Rule 12    indexes -> expression
Rule 13    statement -> INPUT ID
Rule 14    statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 15    statement -> OUTPUT output_expression
Rule 16    output_expression -> output_expression COMMA expression
Rule 17    output_expression -> expression
Rule 18    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 19    statement -> IF expression THEN statements ENDIF
Rule 20    statement -> CASE OF ID cases ENDCASE
Rule 21    statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
Rule 22    cases -> cases case
Rule 23    cases -> case
Rule 24    case -> case_expression COLON statements SEMICOLON
Rule 25    case -> otherwise_statement SEMICOLON
Rule 26    case_expression -> expression TO expression
Rule 27    case_expression -> expression
Rule 28    otherwise_statement -> OTHERWISE COLON statements
Rule 29    statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
Rule 30    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 31    statement -> REPEAT statements UNTIL expression
Rule 32    statement -> WHILE expression DO statements ENDWHILE
Rule 33    statement -> WHILE expression statements ENDWHILE
Rule 34    statement -> expression
Rule 35    expression -> ID
Rule 36    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 37    expression -> expression OR expression
Rule 38    expression -> expression AND expression
Rule 39    expression -> NOT expression
Rule 40    expression -> expression EQUAL expression
Rule 41    expression -> expression NOT_EQUAL expression
Rule 42    expression -> expression LESS expression
Rule 43    expression -> expression GREATER expression
Rule 44    expression -> expression LESS_EQUAL expression
Rule 45    expression -> expression GREATER_EQUAL expression
Rule 46    expression -> expression MUL expression
Rule 47    expression -> expression DIV expression
Rule 48    expression -> MINUS expression
Rule 49    expression -> PLUS expression
Rule 50    expression -> expression PLUS expression
Rule 51    expression -> expression MINUS expression
Rule 52    expression -> expression CONNECT expression
Rule 53    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 54    expression -> BOOLEAN
Rule 55    expression -> CHAR
Rule 56    expression -> STRING
Rule 57    expression -> REAL
Rule 58    expression -> INTEGER
Rule 59    declare_parameters -> declare_parameters COMMA declare_parameter
Rule 60    declare_parameters -> declare_parameter
Rule 61    declare_parameter -> ID COLON ID
Rule 62    declare_parameter -> ID COLON ARRAY
Rule 63    declare_parameter -> BYREF ID COLON ID
Rule 64    declare_parameter -> BYREF ID COLON ARRAY
Rule 65    declare_parameter -> BYVAL ID COLON ID
Rule 66    declare_parameter -> BYVAL ID COLON ARRAY
Rule 67    parameters -> parameters COMMA expression
Rule 68    parameters -> expression
Rule 69    statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 70    statement -> PROCEDURE ID statements ENDPROCEDURE
Rule 71    statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN
Rule 72    statement -> CALL ID
Rule 73    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 74    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 75    statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION
Rule 76    statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
Rule 77    expression -> ID LEFT_PAREN parameters RIGHT_PAREN
Rule 78    expression -> ID LEFT_PAREN RIGHT_PAREN
Rule 79    statement -> RETURN expression
Rule 80    statement -> OPENFILE expression FOR READ
Rule 81    statement -> OPENFILE expression FOR WRITE
Rule 82    statement -> OPENFILE expression FOR APPEND
Rule 83    statement -> OPENFILE expression FOR RANDOM
Rule 84    statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 85    statement -> READFILE expression COMMA ID
Rule 86    statement -> WRITEFILE expression COMMA expression
Rule 87    statement -> CLOSEFILE expression
Rule 88    statement -> SEEK expression COMMA expression
Rule 89    statement -> TYPE ID statements ENDTYPE
Rule 90    expression -> expression DOT expression
Rule 91    statement -> expression DOT statement
Rule 92    statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
Rule 93    enumerate_items -> enumerate_items COMMA ID
Rule 94    enumerate_items -> ID
Rule 95    statement -> TYPE ID EQUAL POINTER ID

Terminals, with rules where they appear

AND                  : 38
APPEND               : 82
ARRAY                : 5 62 64 66 74 76
ASSIGN               : 9 10 29 30
BOOLEAN              : 54
BYREF                : 63 64
BYVAL                : 65 66
CALL                 : 71 72
CASE                 : 20 21
CHAR                 : 55
CLASS                : 
CLOSEFILE            : 87
COLON                : 3 5 8 24 28 61 62 63 64 65 66
COMMA                : 6 11 16 59 67 84 85 86 88 93
CONNECT              : 52
CONSTANT             : 4
DECLARE              : 3 5
DIV                  : 47
DO                   : 32
DOT                  : 90 91
ELSE                 : 18
ENDCASE              : 20 21
ENDFUNCTION          : 73 74 75 76
ENDIF                : 18 19
ENDPROCEDURE         : 69 70
ENDTYPE              : 89
ENDWHILE             : 32 33
EQUAL                : 4 40 92 95
FOR                  : 29 30 80 81 82 83
FUNCTION             : 73 74 75 76
GETRECORD            : 
GREATER              : 43
GREATER_EQUAL        : 45
ID                   : 3 3 4 5 5 9 10 13 14 20 21 29 29 30 30 35 36 61 61 62 63 63 64 65 65 66 69 70 71 72 73 73 74 75 75 76 77 78 84 85 89 92 93 94 95 95
IF                   : 18 19
INHERITS             : 
INPUT                : 13 14
INTEGER              : 58
LEFT_BRACE           : 
LEFT_PAREN           : 53 69 71 73 74 77 78 92
LEFT_SQUARE          : 5 10 14 21 36 84
LESS                 : 42
LESS_EQUAL           : 44
MINUS                : 48 51
MUL                  : 46
NEW                  : 
NEXT                 : 29 30
NOT                  : 39
NOT_EQUAL            : 41
OF                   : 5 20 21
OPENFILE             : 80 81 82 83
OR                   : 37
OTHERWISE            : 28
OUTPUT               : 15
PLUS                 : 49 50
POINTER              : 95
PRIVATE              : 
PROCEDURE            : 69 70
PUBLIC               : 
PUTRECORD            : 
RANDOM               : 83
READ                 : 80
READFILE             : 84 85
REAL                 : 57
REPEAT               : 31
RETURN               : 79
RETURNS              : 73 74 75 76
RIGHT_BRACE          : 
RIGHT_PAREN          : 53 69 71 73 74 77 78 92
RIGHT_SQUARE         : 5 10 14 21 36 84
SEEK                 : 88
SEMICOLON            : 24 25
STEP                 : 29
STRING               : 56
THEN                 : 18 19
TO                   : 26 29 30
TYPE                 : 89 92 95
UNTIL                : 31
WHILE                : 32 33
WRITE                : 81
WRITEFILE            : 86
error                : 

Nonterminals, with rules where they appear

case                 : 22 23
case_expression      : 24
cases                : 20 21 22
declare_parameter    : 59 60
declare_parameters   : 59 69 73 74
dimension            : 6 7
dimensions           : 5 6
enumerate_items      : 92 93
expression           : 4 8 8 9 10 11 12 16 17 18 19 26 26 27 29 29 29 30 30 31 32 33 34 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 50 50 51 51 52 52 53 67 68 79 80 81 82 83 84 85 86 86 87 88 88 90 90 91
indexes              : 10 11 14 21 36 84
otherwise_statement  : 25
output_expression    : 15 16
parameters           : 67 71 77
statement            : 1 2 91
statements           : 1 18 18 19 24 28 29 30 31 32 33 69 70 73 74 75 76 89 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 2

    (2) statements -> statement .

    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    PROCEDURE       reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    OPENFILE        reduce using rule 2 (statements -> statement .)
    READFILE        reduce using rule 2 (statements -> statement .)
    WRITEFILE       reduce using rule 2 (statements -> statement .)
    CLOSEFILE       reduce using rule 2 (statements -> statement .)
    SEEK            reduce using rule 2 (statements -> statement .)
    TYPE            reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    MINUS           reduce using rule 2 (statements -> statement .)
    PLUS            reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDPROCEDURE    reduce using rule 2 (statements -> statement .)
    ENDTYPE         reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDFUNCTION     reduce using rule 2 (statements -> statement .)
    SEMICOLON       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DECLARE . ID COLON ID
    (5) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 34


state 4

    (9) statement -> ID . ASSIGN expression
    (10) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (35) expression -> ID .
    (36) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (77) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          shift and go to state 35
    LEFT_SQUARE     shift and go to state 36
    DOT             reduce using rule 35 (expression -> ID .)
    OR              reduce using rule 35 (expression -> ID .)
    AND             reduce using rule 35 (expression -> ID .)
    EQUAL           reduce using rule 35 (expression -> ID .)
    NOT_EQUAL       reduce using rule 35 (expression -> ID .)
    LESS            reduce using rule 35 (expression -> ID .)
    GREATER         reduce using rule 35 (expression -> ID .)
    LESS_EQUAL      reduce using rule 35 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 35 (expression -> ID .)
    MUL             reduce using rule 35 (expression -> ID .)
    DIV             reduce using rule 35 (expression -> ID .)
    PLUS            reduce using rule 35 (expression -> ID .)
    MINUS           reduce using rule 35 (expression -> ID .)
    CONNECT         reduce using rule 35 (expression -> ID .)
    DECLARE         reduce using rule 35 (expression -> ID .)
    CONSTANT        reduce using rule 35 (expression -> ID .)
    ID              reduce using rule 35 (expression -> ID .)
    INPUT           reduce using rule 35 (expression -> ID .)
    OUTPUT          reduce using rule 35 (expression -> ID .)
    IF              reduce using rule 35 (expression -> ID .)
    CASE            reduce using rule 35 (expression -> ID .)
    FOR             reduce using rule 35 (expression -> ID .)
    REPEAT          reduce using rule 35 (expression -> ID .)
    WHILE           reduce using rule 35 (expression -> ID .)
    PROCEDURE       reduce using rule 35 (expression -> ID .)
    CALL            reduce using rule 35 (expression -> ID .)
    FUNCTION        reduce using rule 35 (expression -> ID .)
    RETURN          reduce using rule 35 (expression -> ID .)
    OPENFILE        reduce using rule 35 (expression -> ID .)
    READFILE        reduce using rule 35 (expression -> ID .)
    WRITEFILE       reduce using rule 35 (expression -> ID .)
    CLOSEFILE       reduce using rule 35 (expression -> ID .)
    SEEK            reduce using rule 35 (expression -> ID .)
    TYPE            reduce using rule 35 (expression -> ID .)
    NOT             reduce using rule 35 (expression -> ID .)
    BOOLEAN         reduce using rule 35 (expression -> ID .)
    CHAR            reduce using rule 35 (expression -> ID .)
    STRING          reduce using rule 35 (expression -> ID .)
    REAL            reduce using rule 35 (expression -> ID .)
    INTEGER         reduce using rule 35 (expression -> ID .)
    $end            reduce using rule 35 (expression -> ID .)
    UNTIL           reduce using rule 35 (expression -> ID .)
    ENDWHILE        reduce using rule 35 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 35 (expression -> ID .)
    ENDTYPE         reduce using rule 35 (expression -> ID .)
    ELSE            reduce using rule 35 (expression -> ID .)
    ENDIF           reduce using rule 35 (expression -> ID .)
    ENDFUNCTION     reduce using rule 35 (expression -> ID .)
    SEMICOLON       reduce using rule 35 (expression -> ID .)
    NEXT            reduce using rule 35 (expression -> ID .)
    LEFT_PAREN      shift and go to state 37

  ! LEFT_PAREN      [ reduce using rule 35 (expression -> ID .) ]


state 5

    (4) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 38


state 6

    (34) statement -> expression .
    (91) statement -> expression . DOT statement
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 34 (statement -> expression .)
    CONSTANT        reduce using rule 34 (statement -> expression .)
    ID              reduce using rule 34 (statement -> expression .)
    INPUT           reduce using rule 34 (statement -> expression .)
    OUTPUT          reduce using rule 34 (statement -> expression .)
    IF              reduce using rule 34 (statement -> expression .)
    CASE            reduce using rule 34 (statement -> expression .)
    FOR             reduce using rule 34 (statement -> expression .)
    REPEAT          reduce using rule 34 (statement -> expression .)
    WHILE           reduce using rule 34 (statement -> expression .)
    PROCEDURE       reduce using rule 34 (statement -> expression .)
    CALL            reduce using rule 34 (statement -> expression .)
    FUNCTION        reduce using rule 34 (statement -> expression .)
    RETURN          reduce using rule 34 (statement -> expression .)
    OPENFILE        reduce using rule 34 (statement -> expression .)
    READFILE        reduce using rule 34 (statement -> expression .)
    WRITEFILE       reduce using rule 34 (statement -> expression .)
    CLOSEFILE       reduce using rule 34 (statement -> expression .)
    SEEK            reduce using rule 34 (statement -> expression .)
    TYPE            reduce using rule 34 (statement -> expression .)
    NOT             reduce using rule 34 (statement -> expression .)
    LEFT_PAREN      reduce using rule 34 (statement -> expression .)
    BOOLEAN         reduce using rule 34 (statement -> expression .)
    CHAR            reduce using rule 34 (statement -> expression .)
    STRING          reduce using rule 34 (statement -> expression .)
    REAL            reduce using rule 34 (statement -> expression .)
    INTEGER         reduce using rule 34 (statement -> expression .)
    $end            reduce using rule 34 (statement -> expression .)
    UNTIL           reduce using rule 34 (statement -> expression .)
    ENDWHILE        reduce using rule 34 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 34 (statement -> expression .)
    ENDTYPE         reduce using rule 34 (statement -> expression .)
    ELSE            reduce using rule 34 (statement -> expression .)
    ENDIF           reduce using rule 34 (statement -> expression .)
    ENDFUNCTION     reduce using rule 34 (statement -> expression .)
    SEMICOLON       reduce using rule 34 (statement -> expression .)
    NEXT            reduce using rule 34 (statement -> expression .)
    DOT             shift and go to state 39
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52

  ! MINUS           [ reduce using rule 34 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 34 (statement -> expression .) ]


state 7

    (13) statement -> INPUT . ID
    (14) statement -> INPUT . ID LEFT_SQUARE indexes RIGHT_SQUARE

    ID              shift and go to state 53


state 8

    (15) statement -> OUTPUT . output_expression
    (16) output_expression -> . output_expression COMMA expression
    (17) output_expression -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    output_expression              shift and go to state 54
    expression                     shift and go to state 55

state 9

    (18) statement -> IF . expression THEN statements ELSE statements ENDIF
    (19) statement -> IF . expression THEN statements ENDIF
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 57

state 10

    (20) statement -> CASE . OF ID cases ENDCASE
    (21) statement -> CASE . OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    OF              shift and go to state 58


state 11

    (29) statement -> FOR . ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 59


state 12

    (31) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 60
    expression                     shift and go to state 6
    statement                      shift and go to state 2

state 13

    (32) statement -> WHILE . expression DO statements ENDWHILE
    (33) statement -> WHILE . expression statements ENDWHILE
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 61

state 14

    (69) statement -> PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> PROCEDURE . ID statements ENDPROCEDURE

    ID              shift and go to state 62


state 15

    (53) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 63

state 16

    (71) statement -> CALL . ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> CALL . ID

    ID              shift and go to state 64


state 17

    (73) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> FUNCTION . ID RETURNS ID statements ENDFUNCTION
    (76) statement -> FUNCTION . ID RETURNS ARRAY statements ENDFUNCTION

    ID              shift and go to state 65


state 18

    (79) statement -> RETURN . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 66

state 19

    (80) statement -> OPENFILE . expression FOR READ
    (81) statement -> OPENFILE . expression FOR WRITE
    (82) statement -> OPENFILE . expression FOR APPEND
    (83) statement -> OPENFILE . expression FOR RANDOM
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 67

state 20

    (84) statement -> READFILE . expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> READFILE . expression COMMA ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 68

state 21

    (86) statement -> WRITEFILE . expression COMMA expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 69

state 22

    (87) statement -> CLOSEFILE . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 70

state 23

    (88) statement -> SEEK . expression COMMA expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 71

state 24

    (89) statement -> TYPE . ID statements ENDTYPE
    (92) statement -> TYPE . ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> TYPE . ID EQUAL POINTER ID

    ID              shift and go to state 72


state 25

    (39) expression -> NOT . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 73

state 26

    (48) expression -> MINUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 74

state 27

    (49) expression -> PLUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 75

state 28

    (54) expression -> BOOLEAN .

    DOT             reduce using rule 54 (expression -> BOOLEAN .)
    OR              reduce using rule 54 (expression -> BOOLEAN .)
    AND             reduce using rule 54 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 54 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 54 (expression -> BOOLEAN .)
    LESS            reduce using rule 54 (expression -> BOOLEAN .)
    GREATER         reduce using rule 54 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 54 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 54 (expression -> BOOLEAN .)
    MUL             reduce using rule 54 (expression -> BOOLEAN .)
    DIV             reduce using rule 54 (expression -> BOOLEAN .)
    PLUS            reduce using rule 54 (expression -> BOOLEAN .)
    MINUS           reduce using rule 54 (expression -> BOOLEAN .)
    CONNECT         reduce using rule 54 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 54 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 54 (expression -> BOOLEAN .)
    ID              reduce using rule 54 (expression -> BOOLEAN .)
    INPUT           reduce using rule 54 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 54 (expression -> BOOLEAN .)
    IF              reduce using rule 54 (expression -> BOOLEAN .)
    CASE            reduce using rule 54 (expression -> BOOLEAN .)
    FOR             reduce using rule 54 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 54 (expression -> BOOLEAN .)
    WHILE           reduce using rule 54 (expression -> BOOLEAN .)
    PROCEDURE       reduce using rule 54 (expression -> BOOLEAN .)
    CALL            reduce using rule 54 (expression -> BOOLEAN .)
    FUNCTION        reduce using rule 54 (expression -> BOOLEAN .)
    RETURN          reduce using rule 54 (expression -> BOOLEAN .)
    OPENFILE        reduce using rule 54 (expression -> BOOLEAN .)
    READFILE        reduce using rule 54 (expression -> BOOLEAN .)
    WRITEFILE       reduce using rule 54 (expression -> BOOLEAN .)
    CLOSEFILE       reduce using rule 54 (expression -> BOOLEAN .)
    SEEK            reduce using rule 54 (expression -> BOOLEAN .)
    TYPE            reduce using rule 54 (expression -> BOOLEAN .)
    NOT             reduce using rule 54 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 54 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 54 (expression -> BOOLEAN .)
    CHAR            reduce using rule 54 (expression -> BOOLEAN .)
    STRING          reduce using rule 54 (expression -> BOOLEAN .)
    REAL            reduce using rule 54 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 54 (expression -> BOOLEAN .)
    $end            reduce using rule 54 (expression -> BOOLEAN .)
    COMMA           reduce using rule 54 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 54 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 54 (expression -> BOOLEAN .)
    ENDPROCEDURE    reduce using rule 54 (expression -> BOOLEAN .)
    ENDTYPE         reduce using rule 54 (expression -> BOOLEAN .)
    ELSE            reduce using rule 54 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 54 (expression -> BOOLEAN .)
    ENDFUNCTION     reduce using rule 54 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 54 (expression -> BOOLEAN .)
    NEXT            reduce using rule 54 (expression -> BOOLEAN .)
    THEN            reduce using rule 54 (expression -> BOOLEAN .)
    DO              reduce using rule 54 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 54 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 54 (expression -> BOOLEAN .)
    TO              reduce using rule 54 (expression -> BOOLEAN .)
    COLON           reduce using rule 54 (expression -> BOOLEAN .)
    STEP            reduce using rule 54 (expression -> BOOLEAN .)


state 29

    (55) expression -> CHAR .

    DOT             reduce using rule 55 (expression -> CHAR .)
    OR              reduce using rule 55 (expression -> CHAR .)
    AND             reduce using rule 55 (expression -> CHAR .)
    EQUAL           reduce using rule 55 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 55 (expression -> CHAR .)
    LESS            reduce using rule 55 (expression -> CHAR .)
    GREATER         reduce using rule 55 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 55 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 55 (expression -> CHAR .)
    MUL             reduce using rule 55 (expression -> CHAR .)
    DIV             reduce using rule 55 (expression -> CHAR .)
    PLUS            reduce using rule 55 (expression -> CHAR .)
    MINUS           reduce using rule 55 (expression -> CHAR .)
    CONNECT         reduce using rule 55 (expression -> CHAR .)
    DECLARE         reduce using rule 55 (expression -> CHAR .)
    CONSTANT        reduce using rule 55 (expression -> CHAR .)
    ID              reduce using rule 55 (expression -> CHAR .)
    INPUT           reduce using rule 55 (expression -> CHAR .)
    OUTPUT          reduce using rule 55 (expression -> CHAR .)
    IF              reduce using rule 55 (expression -> CHAR .)
    CASE            reduce using rule 55 (expression -> CHAR .)
    FOR             reduce using rule 55 (expression -> CHAR .)
    REPEAT          reduce using rule 55 (expression -> CHAR .)
    WHILE           reduce using rule 55 (expression -> CHAR .)
    PROCEDURE       reduce using rule 55 (expression -> CHAR .)
    CALL            reduce using rule 55 (expression -> CHAR .)
    FUNCTION        reduce using rule 55 (expression -> CHAR .)
    RETURN          reduce using rule 55 (expression -> CHAR .)
    OPENFILE        reduce using rule 55 (expression -> CHAR .)
    READFILE        reduce using rule 55 (expression -> CHAR .)
    WRITEFILE       reduce using rule 55 (expression -> CHAR .)
    CLOSEFILE       reduce using rule 55 (expression -> CHAR .)
    SEEK            reduce using rule 55 (expression -> CHAR .)
    TYPE            reduce using rule 55 (expression -> CHAR .)
    NOT             reduce using rule 55 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 55 (expression -> CHAR .)
    BOOLEAN         reduce using rule 55 (expression -> CHAR .)
    CHAR            reduce using rule 55 (expression -> CHAR .)
    STRING          reduce using rule 55 (expression -> CHAR .)
    REAL            reduce using rule 55 (expression -> CHAR .)
    INTEGER         reduce using rule 55 (expression -> CHAR .)
    $end            reduce using rule 55 (expression -> CHAR .)
    COMMA           reduce using rule 55 (expression -> CHAR .)
    UNTIL           reduce using rule 55 (expression -> CHAR .)
    ENDWHILE        reduce using rule 55 (expression -> CHAR .)
    ENDPROCEDURE    reduce using rule 55 (expression -> CHAR .)
    ENDTYPE         reduce using rule 55 (expression -> CHAR .)
    ELSE            reduce using rule 55 (expression -> CHAR .)
    ENDIF           reduce using rule 55 (expression -> CHAR .)
    ENDFUNCTION     reduce using rule 55 (expression -> CHAR .)
    SEMICOLON       reduce using rule 55 (expression -> CHAR .)
    NEXT            reduce using rule 55 (expression -> CHAR .)
    THEN            reduce using rule 55 (expression -> CHAR .)
    DO              reduce using rule 55 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 55 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 55 (expression -> CHAR .)
    TO              reduce using rule 55 (expression -> CHAR .)
    COLON           reduce using rule 55 (expression -> CHAR .)
    STEP            reduce using rule 55 (expression -> CHAR .)


state 30

    (56) expression -> STRING .

    DOT             reduce using rule 56 (expression -> STRING .)
    OR              reduce using rule 56 (expression -> STRING .)
    AND             reduce using rule 56 (expression -> STRING .)
    EQUAL           reduce using rule 56 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 56 (expression -> STRING .)
    LESS            reduce using rule 56 (expression -> STRING .)
    GREATER         reduce using rule 56 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 56 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 56 (expression -> STRING .)
    MUL             reduce using rule 56 (expression -> STRING .)
    DIV             reduce using rule 56 (expression -> STRING .)
    PLUS            reduce using rule 56 (expression -> STRING .)
    MINUS           reduce using rule 56 (expression -> STRING .)
    CONNECT         reduce using rule 56 (expression -> STRING .)
    DECLARE         reduce using rule 56 (expression -> STRING .)
    CONSTANT        reduce using rule 56 (expression -> STRING .)
    ID              reduce using rule 56 (expression -> STRING .)
    INPUT           reduce using rule 56 (expression -> STRING .)
    OUTPUT          reduce using rule 56 (expression -> STRING .)
    IF              reduce using rule 56 (expression -> STRING .)
    CASE            reduce using rule 56 (expression -> STRING .)
    FOR             reduce using rule 56 (expression -> STRING .)
    REPEAT          reduce using rule 56 (expression -> STRING .)
    WHILE           reduce using rule 56 (expression -> STRING .)
    PROCEDURE       reduce using rule 56 (expression -> STRING .)
    CALL            reduce using rule 56 (expression -> STRING .)
    FUNCTION        reduce using rule 56 (expression -> STRING .)
    RETURN          reduce using rule 56 (expression -> STRING .)
    OPENFILE        reduce using rule 56 (expression -> STRING .)
    READFILE        reduce using rule 56 (expression -> STRING .)
    WRITEFILE       reduce using rule 56 (expression -> STRING .)
    CLOSEFILE       reduce using rule 56 (expression -> STRING .)
    SEEK            reduce using rule 56 (expression -> STRING .)
    TYPE            reduce using rule 56 (expression -> STRING .)
    NOT             reduce using rule 56 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 56 (expression -> STRING .)
    BOOLEAN         reduce using rule 56 (expression -> STRING .)
    CHAR            reduce using rule 56 (expression -> STRING .)
    STRING          reduce using rule 56 (expression -> STRING .)
    REAL            reduce using rule 56 (expression -> STRING .)
    INTEGER         reduce using rule 56 (expression -> STRING .)
    $end            reduce using rule 56 (expression -> STRING .)
    COMMA           reduce using rule 56 (expression -> STRING .)
    UNTIL           reduce using rule 56 (expression -> STRING .)
    ENDWHILE        reduce using rule 56 (expression -> STRING .)
    ENDPROCEDURE    reduce using rule 56 (expression -> STRING .)
    ENDTYPE         reduce using rule 56 (expression -> STRING .)
    ELSE            reduce using rule 56 (expression -> STRING .)
    ENDIF           reduce using rule 56 (expression -> STRING .)
    ENDFUNCTION     reduce using rule 56 (expression -> STRING .)
    SEMICOLON       reduce using rule 56 (expression -> STRING .)
    NEXT            reduce using rule 56 (expression -> STRING .)
    THEN            reduce using rule 56 (expression -> STRING .)
    DO              reduce using rule 56 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 56 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 56 (expression -> STRING .)
    TO              reduce using rule 56 (expression -> STRING .)
    COLON           reduce using rule 56 (expression -> STRING .)
    STEP            reduce using rule 56 (expression -> STRING .)


state 31

    (57) expression -> REAL .

    DOT             reduce using rule 57 (expression -> REAL .)
    OR              reduce using rule 57 (expression -> REAL .)
    AND             reduce using rule 57 (expression -> REAL .)
    EQUAL           reduce using rule 57 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 57 (expression -> REAL .)
    LESS            reduce using rule 57 (expression -> REAL .)
    GREATER         reduce using rule 57 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 57 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 57 (expression -> REAL .)
    MUL             reduce using rule 57 (expression -> REAL .)
    DIV             reduce using rule 57 (expression -> REAL .)
    PLUS            reduce using rule 57 (expression -> REAL .)
    MINUS           reduce using rule 57 (expression -> REAL .)
    CONNECT         reduce using rule 57 (expression -> REAL .)
    DECLARE         reduce using rule 57 (expression -> REAL .)
    CONSTANT        reduce using rule 57 (expression -> REAL .)
    ID              reduce using rule 57 (expression -> REAL .)
    INPUT           reduce using rule 57 (expression -> REAL .)
    OUTPUT          reduce using rule 57 (expression -> REAL .)
    IF              reduce using rule 57 (expression -> REAL .)
    CASE            reduce using rule 57 (expression -> REAL .)
    FOR             reduce using rule 57 (expression -> REAL .)
    REPEAT          reduce using rule 57 (expression -> REAL .)
    WHILE           reduce using rule 57 (expression -> REAL .)
    PROCEDURE       reduce using rule 57 (expression -> REAL .)
    CALL            reduce using rule 57 (expression -> REAL .)
    FUNCTION        reduce using rule 57 (expression -> REAL .)
    RETURN          reduce using rule 57 (expression -> REAL .)
    OPENFILE        reduce using rule 57 (expression -> REAL .)
    READFILE        reduce using rule 57 (expression -> REAL .)
    WRITEFILE       reduce using rule 57 (expression -> REAL .)
    CLOSEFILE       reduce using rule 57 (expression -> REAL .)
    SEEK            reduce using rule 57 (expression -> REAL .)
    TYPE            reduce using rule 57 (expression -> REAL .)
    NOT             reduce using rule 57 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 57 (expression -> REAL .)
    BOOLEAN         reduce using rule 57 (expression -> REAL .)
    CHAR            reduce using rule 57 (expression -> REAL .)
    STRING          reduce using rule 57 (expression -> REAL .)
    REAL            reduce using rule 57 (expression -> REAL .)
    INTEGER         reduce using rule 57 (expression -> REAL .)
    $end            reduce using rule 57 (expression -> REAL .)
    COMMA           reduce using rule 57 (expression -> REAL .)
    UNTIL           reduce using rule 57 (expression -> REAL .)
    ENDWHILE        reduce using rule 57 (expression -> REAL .)
    ENDPROCEDURE    reduce using rule 57 (expression -> REAL .)
    ENDTYPE         reduce using rule 57 (expression -> REAL .)
    ELSE            reduce using rule 57 (expression -> REAL .)
    ENDIF           reduce using rule 57 (expression -> REAL .)
    ENDFUNCTION     reduce using rule 57 (expression -> REAL .)
    SEMICOLON       reduce using rule 57 (expression -> REAL .)
    NEXT            reduce using rule 57 (expression -> REAL .)
    THEN            reduce using rule 57 (expression -> REAL .)
    DO              reduce using rule 57 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 57 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 57 (expression -> REAL .)
    TO              reduce using rule 57 (expression -> REAL .)
    COLON           reduce using rule 57 (expression -> REAL .)
    STEP            reduce using rule 57 (expression -> REAL .)


state 32

    (58) expression -> INTEGER .

    DOT             reduce using rule 58 (expression -> INTEGER .)
    OR              reduce using rule 58 (expression -> INTEGER .)
    AND             reduce using rule 58 (expression -> INTEGER .)
    EQUAL           reduce using rule 58 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 58 (expression -> INTEGER .)
    LESS            reduce using rule 58 (expression -> INTEGER .)
    GREATER         reduce using rule 58 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 58 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 58 (expression -> INTEGER .)
    MUL             reduce using rule 58 (expression -> INTEGER .)
    DIV             reduce using rule 58 (expression -> INTEGER .)
    PLUS            reduce using rule 58 (expression -> INTEGER .)
    MINUS           reduce using rule 58 (expression -> INTEGER .)
    CONNECT         reduce using rule 58 (expression -> INTEGER .)
    DECLARE         reduce using rule 58 (expression -> INTEGER .)
    CONSTANT        reduce using rule 58 (expression -> INTEGER .)
    ID              reduce using rule 58 (expression -> INTEGER .)
    INPUT           reduce using rule 58 (expression -> INTEGER .)
    OUTPUT          reduce using rule 58 (expression -> INTEGER .)
    IF              reduce using rule 58 (expression -> INTEGER .)
    CASE            reduce using rule 58 (expression -> INTEGER .)
    FOR             reduce using rule 58 (expression -> INTEGER .)
    REPEAT          reduce using rule 58 (expression -> INTEGER .)
    WHILE           reduce using rule 58 (expression -> INTEGER .)
    PROCEDURE       reduce using rule 58 (expression -> INTEGER .)
    CALL            reduce using rule 58 (expression -> INTEGER .)
    FUNCTION        reduce using rule 58 (expression -> INTEGER .)
    RETURN          reduce using rule 58 (expression -> INTEGER .)
    OPENFILE        reduce using rule 58 (expression -> INTEGER .)
    READFILE        reduce using rule 58 (expression -> INTEGER .)
    WRITEFILE       reduce using rule 58 (expression -> INTEGER .)
    CLOSEFILE       reduce using rule 58 (expression -> INTEGER .)
    SEEK            reduce using rule 58 (expression -> INTEGER .)
    TYPE            reduce using rule 58 (expression -> INTEGER .)
    NOT             reduce using rule 58 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 58 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 58 (expression -> INTEGER .)
    CHAR            reduce using rule 58 (expression -> INTEGER .)
    STRING          reduce using rule 58 (expression -> INTEGER .)
    REAL            reduce using rule 58 (expression -> INTEGER .)
    INTEGER         reduce using rule 58 (expression -> INTEGER .)
    $end            reduce using rule 58 (expression -> INTEGER .)
    COMMA           reduce using rule 58 (expression -> INTEGER .)
    UNTIL           reduce using rule 58 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 58 (expression -> INTEGER .)
    ENDPROCEDURE    reduce using rule 58 (expression -> INTEGER .)
    ENDTYPE         reduce using rule 58 (expression -> INTEGER .)
    ELSE            reduce using rule 58 (expression -> INTEGER .)
    ENDIF           reduce using rule 58 (expression -> INTEGER .)
    ENDFUNCTION     reduce using rule 58 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 58 (expression -> INTEGER .)
    NEXT            reduce using rule 58 (expression -> INTEGER .)
    THEN            reduce using rule 58 (expression -> INTEGER .)
    DO              reduce using rule 58 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 58 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 58 (expression -> INTEGER .)
    TO              reduce using rule 58 (expression -> INTEGER .)
    COLON           reduce using rule 58 (expression -> INTEGER .)
    STEP            reduce using rule 58 (expression -> INTEGER .)


state 33

    (1) statements -> statements statement .

    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    PROCEDURE       reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    OPENFILE        reduce using rule 1 (statements -> statements statement .)
    READFILE        reduce using rule 1 (statements -> statements statement .)
    WRITEFILE       reduce using rule 1 (statements -> statements statement .)
    CLOSEFILE       reduce using rule 1 (statements -> statements statement .)
    SEEK            reduce using rule 1 (statements -> statements statement .)
    TYPE            reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    PLUS            reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDPROCEDURE    reduce using rule 1 (statements -> statements statement .)
    ENDTYPE         reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDFUNCTION     reduce using rule 1 (statements -> statements statement .)
    SEMICOLON       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 34

    (3) statement -> DECLARE ID . COLON ID
    (5) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 76


state 35

    (9) statement -> ID ASSIGN . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 77

state 36

    (10) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN expression
    (36) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    indexes                        shift and go to state 78
    expression                     shift and go to state 79

state 37

    (77) expression -> ID LEFT_PAREN . parameters RIGHT_PAREN
    (78) expression -> ID LEFT_PAREN . RIGHT_PAREN
    (67) parameters -> . parameters COMMA expression
    (68) parameters -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    RIGHT_PAREN     shift and go to state 81
    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    parameters                     shift and go to state 80
    expression                     shift and go to state 82

state 38

    (4) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 83


state 39

    (91) statement -> expression DOT . statement
    (90) expression -> expression DOT . expression
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 84
    statement                      shift and go to state 85

state 40

    (37) expression -> expression OR . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 86

state 41

    (38) expression -> expression AND . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 87

state 42

    (40) expression -> expression EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 88

state 43

    (41) expression -> expression NOT_EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 89

state 44

    (42) expression -> expression LESS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 90

state 45

    (43) expression -> expression GREATER . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 91

state 46

    (44) expression -> expression LESS_EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 92

state 47

    (45) expression -> expression GREATER_EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 93

state 48

    (46) expression -> expression MUL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 94

state 49

    (47) expression -> expression DIV . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 95

state 50

    (50) expression -> expression PLUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 96

state 51

    (51) expression -> expression MINUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 97

state 52

    (52) expression -> expression CONNECT . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 98

state 53

    (13) statement -> INPUT ID .
    (14) statement -> INPUT ID . LEFT_SQUARE indexes RIGHT_SQUARE

    DECLARE         reduce using rule 13 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 13 (statement -> INPUT ID .)
    ID              reduce using rule 13 (statement -> INPUT ID .)
    INPUT           reduce using rule 13 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 13 (statement -> INPUT ID .)
    IF              reduce using rule 13 (statement -> INPUT ID .)
    CASE            reduce using rule 13 (statement -> INPUT ID .)
    FOR             reduce using rule 13 (statement -> INPUT ID .)
    REPEAT          reduce using rule 13 (statement -> INPUT ID .)
    WHILE           reduce using rule 13 (statement -> INPUT ID .)
    PROCEDURE       reduce using rule 13 (statement -> INPUT ID .)
    CALL            reduce using rule 13 (statement -> INPUT ID .)
    FUNCTION        reduce using rule 13 (statement -> INPUT ID .)
    RETURN          reduce using rule 13 (statement -> INPUT ID .)
    OPENFILE        reduce using rule 13 (statement -> INPUT ID .)
    READFILE        reduce using rule 13 (statement -> INPUT ID .)
    WRITEFILE       reduce using rule 13 (statement -> INPUT ID .)
    CLOSEFILE       reduce using rule 13 (statement -> INPUT ID .)
    SEEK            reduce using rule 13 (statement -> INPUT ID .)
    TYPE            reduce using rule 13 (statement -> INPUT ID .)
    NOT             reduce using rule 13 (statement -> INPUT ID .)
    MINUS           reduce using rule 13 (statement -> INPUT ID .)
    PLUS            reduce using rule 13 (statement -> INPUT ID .)
    LEFT_PAREN      reduce using rule 13 (statement -> INPUT ID .)
    BOOLEAN         reduce using rule 13 (statement -> INPUT ID .)
    CHAR            reduce using rule 13 (statement -> INPUT ID .)
    STRING          reduce using rule 13 (statement -> INPUT ID .)
    REAL            reduce using rule 13 (statement -> INPUT ID .)
    INTEGER         reduce using rule 13 (statement -> INPUT ID .)
    $end            reduce using rule 13 (statement -> INPUT ID .)
    UNTIL           reduce using rule 13 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 13 (statement -> INPUT ID .)
    ENDPROCEDURE    reduce using rule 13 (statement -> INPUT ID .)
    ENDTYPE         reduce using rule 13 (statement -> INPUT ID .)
    ELSE            reduce using rule 13 (statement -> INPUT ID .)
    ENDIF           reduce using rule 13 (statement -> INPUT ID .)
    ENDFUNCTION     reduce using rule 13 (statement -> INPUT ID .)
    SEMICOLON       reduce using rule 13 (statement -> INPUT ID .)
    NEXT            reduce using rule 13 (statement -> INPUT ID .)
    LEFT_SQUARE     shift and go to state 99


state 54

    (15) statement -> OUTPUT output_expression .
    (16) output_expression -> output_expression . COMMA expression

    DECLARE         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 15 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 15 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 15 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 15 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 15 (statement -> OUTPUT output_expression .)
    PROCEDURE       reduce using rule 15 (statement -> OUTPUT output_expression .)
    CALL            reduce using rule 15 (statement -> OUTPUT output_expression .)
    FUNCTION        reduce using rule 15 (statement -> OUTPUT output_expression .)
    RETURN          reduce using rule 15 (statement -> OUTPUT output_expression .)
    OPENFILE        reduce using rule 15 (statement -> OUTPUT output_expression .)
    READFILE        reduce using rule 15 (statement -> OUTPUT output_expression .)
    WRITEFILE       reduce using rule 15 (statement -> OUTPUT output_expression .)
    CLOSEFILE       reduce using rule 15 (statement -> OUTPUT output_expression .)
    SEEK            reduce using rule 15 (statement -> OUTPUT output_expression .)
    TYPE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 15 (statement -> OUTPUT output_expression .)
    MINUS           reduce using rule 15 (statement -> OUTPUT output_expression .)
    PLUS            reduce using rule 15 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 15 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 15 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 15 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 15 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 15 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 15 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDTYPE         reduce using rule 15 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 15 (statement -> OUTPUT output_expression .)
    SEMICOLON       reduce using rule 15 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 15 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 100


state 55

    (17) output_expression -> expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 17 (output_expression -> expression .)
    DECLARE         reduce using rule 17 (output_expression -> expression .)
    CONSTANT        reduce using rule 17 (output_expression -> expression .)
    ID              reduce using rule 17 (output_expression -> expression .)
    INPUT           reduce using rule 17 (output_expression -> expression .)
    OUTPUT          reduce using rule 17 (output_expression -> expression .)
    IF              reduce using rule 17 (output_expression -> expression .)
    CASE            reduce using rule 17 (output_expression -> expression .)
    FOR             reduce using rule 17 (output_expression -> expression .)
    REPEAT          reduce using rule 17 (output_expression -> expression .)
    WHILE           reduce using rule 17 (output_expression -> expression .)
    PROCEDURE       reduce using rule 17 (output_expression -> expression .)
    CALL            reduce using rule 17 (output_expression -> expression .)
    FUNCTION        reduce using rule 17 (output_expression -> expression .)
    RETURN          reduce using rule 17 (output_expression -> expression .)
    OPENFILE        reduce using rule 17 (output_expression -> expression .)
    READFILE        reduce using rule 17 (output_expression -> expression .)
    WRITEFILE       reduce using rule 17 (output_expression -> expression .)
    CLOSEFILE       reduce using rule 17 (output_expression -> expression .)
    SEEK            reduce using rule 17 (output_expression -> expression .)
    TYPE            reduce using rule 17 (output_expression -> expression .)
    NOT             reduce using rule 17 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 17 (output_expression -> expression .)
    BOOLEAN         reduce using rule 17 (output_expression -> expression .)
    CHAR            reduce using rule 17 (output_expression -> expression .)
    STRING          reduce using rule 17 (output_expression -> expression .)
    REAL            reduce using rule 17 (output_expression -> expression .)
    INTEGER         reduce using rule 17 (output_expression -> expression .)
    $end            reduce using rule 17 (output_expression -> expression .)
    UNTIL           reduce using rule 17 (output_expression -> expression .)
    ENDWHILE        reduce using rule 17 (output_expression -> expression .)
    ENDPROCEDURE    reduce using rule 17 (output_expression -> expression .)
    ENDTYPE         reduce using rule 17 (output_expression -> expression .)
    ELSE            reduce using rule 17 (output_expression -> expression .)
    ENDIF           reduce using rule 17 (output_expression -> expression .)
    ENDFUNCTION     reduce using rule 17 (output_expression -> expression .)
    SEMICOLON       reduce using rule 17 (output_expression -> expression .)
    NEXT            reduce using rule 17 (output_expression -> expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 17 (output_expression -> expression .) ]
  ! PLUS            [ reduce using rule 17 (output_expression -> expression .) ]


state 56

    (35) expression -> ID .
    (36) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (77) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    OR              reduce using rule 35 (expression -> ID .)
    AND             reduce using rule 35 (expression -> ID .)
    EQUAL           reduce using rule 35 (expression -> ID .)
    NOT_EQUAL       reduce using rule 35 (expression -> ID .)
    LESS            reduce using rule 35 (expression -> ID .)
    GREATER         reduce using rule 35 (expression -> ID .)
    LESS_EQUAL      reduce using rule 35 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 35 (expression -> ID .)
    MUL             reduce using rule 35 (expression -> ID .)
    DIV             reduce using rule 35 (expression -> ID .)
    PLUS            reduce using rule 35 (expression -> ID .)
    MINUS           reduce using rule 35 (expression -> ID .)
    CONNECT         reduce using rule 35 (expression -> ID .)
    DOT             reduce using rule 35 (expression -> ID .)
    COMMA           reduce using rule 35 (expression -> ID .)
    DECLARE         reduce using rule 35 (expression -> ID .)
    CONSTANT        reduce using rule 35 (expression -> ID .)
    ID              reduce using rule 35 (expression -> ID .)
    INPUT           reduce using rule 35 (expression -> ID .)
    OUTPUT          reduce using rule 35 (expression -> ID .)
    IF              reduce using rule 35 (expression -> ID .)
    CASE            reduce using rule 35 (expression -> ID .)
    FOR             reduce using rule 35 (expression -> ID .)
    REPEAT          reduce using rule 35 (expression -> ID .)
    WHILE           reduce using rule 35 (expression -> ID .)
    PROCEDURE       reduce using rule 35 (expression -> ID .)
    CALL            reduce using rule 35 (expression -> ID .)
    FUNCTION        reduce using rule 35 (expression -> ID .)
    RETURN          reduce using rule 35 (expression -> ID .)
    OPENFILE        reduce using rule 35 (expression -> ID .)
    READFILE        reduce using rule 35 (expression -> ID .)
    WRITEFILE       reduce using rule 35 (expression -> ID .)
    CLOSEFILE       reduce using rule 35 (expression -> ID .)
    SEEK            reduce using rule 35 (expression -> ID .)
    TYPE            reduce using rule 35 (expression -> ID .)
    NOT             reduce using rule 35 (expression -> ID .)
    BOOLEAN         reduce using rule 35 (expression -> ID .)
    CHAR            reduce using rule 35 (expression -> ID .)
    STRING          reduce using rule 35 (expression -> ID .)
    REAL            reduce using rule 35 (expression -> ID .)
    INTEGER         reduce using rule 35 (expression -> ID .)
    $end            reduce using rule 35 (expression -> ID .)
    UNTIL           reduce using rule 35 (expression -> ID .)
    ENDWHILE        reduce using rule 35 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 35 (expression -> ID .)
    ENDTYPE         reduce using rule 35 (expression -> ID .)
    ELSE            reduce using rule 35 (expression -> ID .)
    ENDIF           reduce using rule 35 (expression -> ID .)
    ENDFUNCTION     reduce using rule 35 (expression -> ID .)
    SEMICOLON       reduce using rule 35 (expression -> ID .)
    NEXT            reduce using rule 35 (expression -> ID .)
    THEN            reduce using rule 35 (expression -> ID .)
    DO              reduce using rule 35 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 35 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 35 (expression -> ID .)
    TO              reduce using rule 35 (expression -> ID .)
    COLON           reduce using rule 35 (expression -> ID .)
    STEP            reduce using rule 35 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 102
    LEFT_PAREN      shift and go to state 37

  ! LEFT_PAREN      [ reduce using rule 35 (expression -> ID .) ]


state 57

    (18) statement -> IF expression . THEN statements ELSE statements ENDIF
    (19) statement -> IF expression . THEN statements ENDIF
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    THEN            shift and go to state 103
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 58

    (20) statement -> CASE OF . ID cases ENDCASE
    (21) statement -> CASE OF . ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    ID              shift and go to state 104


state 59

    (29) statement -> FOR ID . ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 105


state 60

    (31) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    UNTIL           shift and go to state 106
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 61

    (32) statement -> WHILE expression . DO statements ENDWHILE
    (33) statement -> WHILE expression . statements ENDWHILE
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DO              shift and go to state 107
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 108
    statement                      shift and go to state 2

state 62

    (69) statement -> PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> PROCEDURE ID . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    LEFT_PAREN      shift and go to state 111
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 112
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 63

    (53) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_PAREN     shift and go to state 113
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 64

    (71) statement -> CALL ID . LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> CALL ID .

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    LEFT_PAREN      shift and go to state 114
    DECLARE         reduce using rule 72 (statement -> CALL ID .)
    CONSTANT        reduce using rule 72 (statement -> CALL ID .)
    ID              reduce using rule 72 (statement -> CALL ID .)
    INPUT           reduce using rule 72 (statement -> CALL ID .)
    OUTPUT          reduce using rule 72 (statement -> CALL ID .)
    IF              reduce using rule 72 (statement -> CALL ID .)
    CASE            reduce using rule 72 (statement -> CALL ID .)
    FOR             reduce using rule 72 (statement -> CALL ID .)
    REPEAT          reduce using rule 72 (statement -> CALL ID .)
    WHILE           reduce using rule 72 (statement -> CALL ID .)
    PROCEDURE       reduce using rule 72 (statement -> CALL ID .)
    CALL            reduce using rule 72 (statement -> CALL ID .)
    FUNCTION        reduce using rule 72 (statement -> CALL ID .)
    RETURN          reduce using rule 72 (statement -> CALL ID .)
    OPENFILE        reduce using rule 72 (statement -> CALL ID .)
    READFILE        reduce using rule 72 (statement -> CALL ID .)
    WRITEFILE       reduce using rule 72 (statement -> CALL ID .)
    CLOSEFILE       reduce using rule 72 (statement -> CALL ID .)
    SEEK            reduce using rule 72 (statement -> CALL ID .)
    TYPE            reduce using rule 72 (statement -> CALL ID .)
    NOT             reduce using rule 72 (statement -> CALL ID .)
    MINUS           reduce using rule 72 (statement -> CALL ID .)
    PLUS            reduce using rule 72 (statement -> CALL ID .)
    BOOLEAN         reduce using rule 72 (statement -> CALL ID .)
    CHAR            reduce using rule 72 (statement -> CALL ID .)
    STRING          reduce using rule 72 (statement -> CALL ID .)
    REAL            reduce using rule 72 (statement -> CALL ID .)
    INTEGER         reduce using rule 72 (statement -> CALL ID .)
    $end            reduce using rule 72 (statement -> CALL ID .)
    UNTIL           reduce using rule 72 (statement -> CALL ID .)
    ENDWHILE        reduce using rule 72 (statement -> CALL ID .)
    ENDPROCEDURE    reduce using rule 72 (statement -> CALL ID .)
    ENDTYPE         reduce using rule 72 (statement -> CALL ID .)
    ELSE            reduce using rule 72 (statement -> CALL ID .)
    ENDIF           reduce using rule 72 (statement -> CALL ID .)
    ENDFUNCTION     reduce using rule 72 (statement -> CALL ID .)
    SEMICOLON       reduce using rule 72 (statement -> CALL ID .)
    NEXT            reduce using rule 72 (statement -> CALL ID .)

  ! LEFT_PAREN      [ reduce using rule 72 (statement -> CALL ID .) ]


state 65

    (73) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> FUNCTION ID . RETURNS ID statements ENDFUNCTION
    (76) statement -> FUNCTION ID . RETURNS ARRAY statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 115
    RETURNS         shift and go to state 116


state 66

    (79) statement -> RETURN expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 79 (statement -> RETURN expression .)
    CONSTANT        reduce using rule 79 (statement -> RETURN expression .)
    ID              reduce using rule 79 (statement -> RETURN expression .)
    INPUT           reduce using rule 79 (statement -> RETURN expression .)
    OUTPUT          reduce using rule 79 (statement -> RETURN expression .)
    IF              reduce using rule 79 (statement -> RETURN expression .)
    CASE            reduce using rule 79 (statement -> RETURN expression .)
    FOR             reduce using rule 79 (statement -> RETURN expression .)
    REPEAT          reduce using rule 79 (statement -> RETURN expression .)
    WHILE           reduce using rule 79 (statement -> RETURN expression .)
    PROCEDURE       reduce using rule 79 (statement -> RETURN expression .)
    CALL            reduce using rule 79 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 79 (statement -> RETURN expression .)
    RETURN          reduce using rule 79 (statement -> RETURN expression .)
    OPENFILE        reduce using rule 79 (statement -> RETURN expression .)
    READFILE        reduce using rule 79 (statement -> RETURN expression .)
    WRITEFILE       reduce using rule 79 (statement -> RETURN expression .)
    CLOSEFILE       reduce using rule 79 (statement -> RETURN expression .)
    SEEK            reduce using rule 79 (statement -> RETURN expression .)
    TYPE            reduce using rule 79 (statement -> RETURN expression .)
    NOT             reduce using rule 79 (statement -> RETURN expression .)
    LEFT_PAREN      reduce using rule 79 (statement -> RETURN expression .)
    BOOLEAN         reduce using rule 79 (statement -> RETURN expression .)
    CHAR            reduce using rule 79 (statement -> RETURN expression .)
    STRING          reduce using rule 79 (statement -> RETURN expression .)
    REAL            reduce using rule 79 (statement -> RETURN expression .)
    INTEGER         reduce using rule 79 (statement -> RETURN expression .)
    $end            reduce using rule 79 (statement -> RETURN expression .)
    UNTIL           reduce using rule 79 (statement -> RETURN expression .)
    ENDWHILE        reduce using rule 79 (statement -> RETURN expression .)
    ENDPROCEDURE    reduce using rule 79 (statement -> RETURN expression .)
    ENDTYPE         reduce using rule 79 (statement -> RETURN expression .)
    ELSE            reduce using rule 79 (statement -> RETURN expression .)
    ENDIF           reduce using rule 79 (statement -> RETURN expression .)
    ENDFUNCTION     reduce using rule 79 (statement -> RETURN expression .)
    SEMICOLON       reduce using rule 79 (statement -> RETURN expression .)
    NEXT            reduce using rule 79 (statement -> RETURN expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 79 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 79 (statement -> RETURN expression .) ]


state 67

    (80) statement -> OPENFILE expression . FOR READ
    (81) statement -> OPENFILE expression . FOR WRITE
    (82) statement -> OPENFILE expression . FOR APPEND
    (83) statement -> OPENFILE expression . FOR RANDOM
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    FOR             shift and go to state 117
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 68

    (84) statement -> READFILE expression . COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> READFILE expression . COMMA ID
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    COMMA           shift and go to state 118
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 69

    (86) statement -> WRITEFILE expression . COMMA expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    COMMA           shift and go to state 119
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 70

    (87) statement -> CLOSEFILE expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 87 (statement -> CLOSEFILE expression .)
    CONSTANT        reduce using rule 87 (statement -> CLOSEFILE expression .)
    ID              reduce using rule 87 (statement -> CLOSEFILE expression .)
    INPUT           reduce using rule 87 (statement -> CLOSEFILE expression .)
    OUTPUT          reduce using rule 87 (statement -> CLOSEFILE expression .)
    IF              reduce using rule 87 (statement -> CLOSEFILE expression .)
    CASE            reduce using rule 87 (statement -> CLOSEFILE expression .)
    FOR             reduce using rule 87 (statement -> CLOSEFILE expression .)
    REPEAT          reduce using rule 87 (statement -> CLOSEFILE expression .)
    WHILE           reduce using rule 87 (statement -> CLOSEFILE expression .)
    PROCEDURE       reduce using rule 87 (statement -> CLOSEFILE expression .)
    CALL            reduce using rule 87 (statement -> CLOSEFILE expression .)
    FUNCTION        reduce using rule 87 (statement -> CLOSEFILE expression .)
    RETURN          reduce using rule 87 (statement -> CLOSEFILE expression .)
    OPENFILE        reduce using rule 87 (statement -> CLOSEFILE expression .)
    READFILE        reduce using rule 87 (statement -> CLOSEFILE expression .)
    WRITEFILE       reduce using rule 87 (statement -> CLOSEFILE expression .)
    CLOSEFILE       reduce using rule 87 (statement -> CLOSEFILE expression .)
    SEEK            reduce using rule 87 (statement -> CLOSEFILE expression .)
    TYPE            reduce using rule 87 (statement -> CLOSEFILE expression .)
    NOT             reduce using rule 87 (statement -> CLOSEFILE expression .)
    LEFT_PAREN      reduce using rule 87 (statement -> CLOSEFILE expression .)
    BOOLEAN         reduce using rule 87 (statement -> CLOSEFILE expression .)
    CHAR            reduce using rule 87 (statement -> CLOSEFILE expression .)
    STRING          reduce using rule 87 (statement -> CLOSEFILE expression .)
    REAL            reduce using rule 87 (statement -> CLOSEFILE expression .)
    INTEGER         reduce using rule 87 (statement -> CLOSEFILE expression .)
    $end            reduce using rule 87 (statement -> CLOSEFILE expression .)
    UNTIL           reduce using rule 87 (statement -> CLOSEFILE expression .)
    ENDWHILE        reduce using rule 87 (statement -> CLOSEFILE expression .)
    ENDPROCEDURE    reduce using rule 87 (statement -> CLOSEFILE expression .)
    ENDTYPE         reduce using rule 87 (statement -> CLOSEFILE expression .)
    ELSE            reduce using rule 87 (statement -> CLOSEFILE expression .)
    ENDIF           reduce using rule 87 (statement -> CLOSEFILE expression .)
    ENDFUNCTION     reduce using rule 87 (statement -> CLOSEFILE expression .)
    SEMICOLON       reduce using rule 87 (statement -> CLOSEFILE expression .)
    NEXT            reduce using rule 87 (statement -> CLOSEFILE expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 87 (statement -> CLOSEFILE expression .) ]
  ! PLUS            [ reduce using rule 87 (statement -> CLOSEFILE expression .) ]


state 71

    (88) statement -> SEEK expression . COMMA expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    COMMA           shift and go to state 120
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 72

    (89) statement -> TYPE ID . statements ENDTYPE
    (92) statement -> TYPE ID . EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> TYPE ID . EQUAL POINTER ID
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    EQUAL           shift and go to state 122
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 121
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 73

    (39) expression -> NOT expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 39 (expression -> NOT expression .)
    OR              reduce using rule 39 (expression -> NOT expression .)
    AND             reduce using rule 39 (expression -> NOT expression .)
    CONNECT         reduce using rule 39 (expression -> NOT expression .)
    DECLARE         reduce using rule 39 (expression -> NOT expression .)
    CONSTANT        reduce using rule 39 (expression -> NOT expression .)
    ID              reduce using rule 39 (expression -> NOT expression .)
    INPUT           reduce using rule 39 (expression -> NOT expression .)
    OUTPUT          reduce using rule 39 (expression -> NOT expression .)
    IF              reduce using rule 39 (expression -> NOT expression .)
    CASE            reduce using rule 39 (expression -> NOT expression .)
    FOR             reduce using rule 39 (expression -> NOT expression .)
    REPEAT          reduce using rule 39 (expression -> NOT expression .)
    WHILE           reduce using rule 39 (expression -> NOT expression .)
    PROCEDURE       reduce using rule 39 (expression -> NOT expression .)
    CALL            reduce using rule 39 (expression -> NOT expression .)
    FUNCTION        reduce using rule 39 (expression -> NOT expression .)
    RETURN          reduce using rule 39 (expression -> NOT expression .)
    OPENFILE        reduce using rule 39 (expression -> NOT expression .)
    READFILE        reduce using rule 39 (expression -> NOT expression .)
    WRITEFILE       reduce using rule 39 (expression -> NOT expression .)
    CLOSEFILE       reduce using rule 39 (expression -> NOT expression .)
    SEEK            reduce using rule 39 (expression -> NOT expression .)
    TYPE            reduce using rule 39 (expression -> NOT expression .)
    NOT             reduce using rule 39 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 39 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 39 (expression -> NOT expression .)
    CHAR            reduce using rule 39 (expression -> NOT expression .)
    STRING          reduce using rule 39 (expression -> NOT expression .)
    REAL            reduce using rule 39 (expression -> NOT expression .)
    INTEGER         reduce using rule 39 (expression -> NOT expression .)
    $end            reduce using rule 39 (expression -> NOT expression .)
    COMMA           reduce using rule 39 (expression -> NOT expression .)
    UNTIL           reduce using rule 39 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 39 (expression -> NOT expression .)
    ENDPROCEDURE    reduce using rule 39 (expression -> NOT expression .)
    ENDTYPE         reduce using rule 39 (expression -> NOT expression .)
    ELSE            reduce using rule 39 (expression -> NOT expression .)
    ENDIF           reduce using rule 39 (expression -> NOT expression .)
    ENDFUNCTION     reduce using rule 39 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 39 (expression -> NOT expression .)
    NEXT            reduce using rule 39 (expression -> NOT expression .)
    THEN            reduce using rule 39 (expression -> NOT expression .)
    DO              reduce using rule 39 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 39 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 39 (expression -> NOT expression .)
    TO              reduce using rule 39 (expression -> NOT expression .)
    COLON           reduce using rule 39 (expression -> NOT expression .)
    STEP            reduce using rule 39 (expression -> NOT expression .)
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! EQUAL           [ reduce using rule 39 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 39 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 39 (expression -> NOT expression .) ]
  ! MUL             [ reduce using rule 39 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 74

    (48) expression -> MINUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 48 (expression -> MINUS expression .)
    OR              reduce using rule 48 (expression -> MINUS expression .)
    AND             reduce using rule 48 (expression -> MINUS expression .)
    EQUAL           reduce using rule 48 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> MINUS expression .)
    LESS            reduce using rule 48 (expression -> MINUS expression .)
    GREATER         reduce using rule 48 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> MINUS expression .)
    MUL             reduce using rule 48 (expression -> MINUS expression .)
    DIV             reduce using rule 48 (expression -> MINUS expression .)
    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    CONNECT         reduce using rule 48 (expression -> MINUS expression .)
    DECLARE         reduce using rule 48 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 48 (expression -> MINUS expression .)
    ID              reduce using rule 48 (expression -> MINUS expression .)
    INPUT           reduce using rule 48 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 48 (expression -> MINUS expression .)
    IF              reduce using rule 48 (expression -> MINUS expression .)
    CASE            reduce using rule 48 (expression -> MINUS expression .)
    FOR             reduce using rule 48 (expression -> MINUS expression .)
    REPEAT          reduce using rule 48 (expression -> MINUS expression .)
    WHILE           reduce using rule 48 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 48 (expression -> MINUS expression .)
    CALL            reduce using rule 48 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 48 (expression -> MINUS expression .)
    RETURN          reduce using rule 48 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 48 (expression -> MINUS expression .)
    READFILE        reduce using rule 48 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 48 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 48 (expression -> MINUS expression .)
    SEEK            reduce using rule 48 (expression -> MINUS expression .)
    TYPE            reduce using rule 48 (expression -> MINUS expression .)
    NOT             reduce using rule 48 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 48 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 48 (expression -> MINUS expression .)
    CHAR            reduce using rule 48 (expression -> MINUS expression .)
    STRING          reduce using rule 48 (expression -> MINUS expression .)
    REAL            reduce using rule 48 (expression -> MINUS expression .)
    INTEGER         reduce using rule 48 (expression -> MINUS expression .)
    $end            reduce using rule 48 (expression -> MINUS expression .)
    COMMA           reduce using rule 48 (expression -> MINUS expression .)
    UNTIL           reduce using rule 48 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 48 (expression -> MINUS expression .)
    ENDPROCEDURE    reduce using rule 48 (expression -> MINUS expression .)
    ENDTYPE         reduce using rule 48 (expression -> MINUS expression .)
    ELSE            reduce using rule 48 (expression -> MINUS expression .)
    ENDIF           reduce using rule 48 (expression -> MINUS expression .)
    ENDFUNCTION     reduce using rule 48 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 48 (expression -> MINUS expression .)
    NEXT            reduce using rule 48 (expression -> MINUS expression .)
    THEN            reduce using rule 48 (expression -> MINUS expression .)
    DO              reduce using rule 48 (expression -> MINUS expression .)
    RIGHT_PAREN     reduce using rule 48 (expression -> MINUS expression .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> MINUS expression .)
    TO              reduce using rule 48 (expression -> MINUS expression .)
    COLON           reduce using rule 48 (expression -> MINUS expression .)
    STEP            reduce using rule 48 (expression -> MINUS expression .)

  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 75

    (49) expression -> PLUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 49 (expression -> PLUS expression .)
    OR              reduce using rule 49 (expression -> PLUS expression .)
    AND             reduce using rule 49 (expression -> PLUS expression .)
    EQUAL           reduce using rule 49 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> PLUS expression .)
    LESS            reduce using rule 49 (expression -> PLUS expression .)
    GREATER         reduce using rule 49 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 49 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 49 (expression -> PLUS expression .)
    MUL             reduce using rule 49 (expression -> PLUS expression .)
    DIV             reduce using rule 49 (expression -> PLUS expression .)
    PLUS            reduce using rule 49 (expression -> PLUS expression .)
    MINUS           reduce using rule 49 (expression -> PLUS expression .)
    CONNECT         reduce using rule 49 (expression -> PLUS expression .)
    DECLARE         reduce using rule 49 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 49 (expression -> PLUS expression .)
    ID              reduce using rule 49 (expression -> PLUS expression .)
    INPUT           reduce using rule 49 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 49 (expression -> PLUS expression .)
    IF              reduce using rule 49 (expression -> PLUS expression .)
    CASE            reduce using rule 49 (expression -> PLUS expression .)
    FOR             reduce using rule 49 (expression -> PLUS expression .)
    REPEAT          reduce using rule 49 (expression -> PLUS expression .)
    WHILE           reduce using rule 49 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 49 (expression -> PLUS expression .)
    CALL            reduce using rule 49 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 49 (expression -> PLUS expression .)
    RETURN          reduce using rule 49 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 49 (expression -> PLUS expression .)
    READFILE        reduce using rule 49 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 49 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 49 (expression -> PLUS expression .)
    SEEK            reduce using rule 49 (expression -> PLUS expression .)
    TYPE            reduce using rule 49 (expression -> PLUS expression .)
    NOT             reduce using rule 49 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 49 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 49 (expression -> PLUS expression .)
    CHAR            reduce using rule 49 (expression -> PLUS expression .)
    STRING          reduce using rule 49 (expression -> PLUS expression .)
    REAL            reduce using rule 49 (expression -> PLUS expression .)
    INTEGER         reduce using rule 49 (expression -> PLUS expression .)
    $end            reduce using rule 49 (expression -> PLUS expression .)
    COMMA           reduce using rule 49 (expression -> PLUS expression .)
    UNTIL           reduce using rule 49 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 49 (expression -> PLUS expression .)
    ENDPROCEDURE    reduce using rule 49 (expression -> PLUS expression .)
    ENDTYPE         reduce using rule 49 (expression -> PLUS expression .)
    ELSE            reduce using rule 49 (expression -> PLUS expression .)
    ENDIF           reduce using rule 49 (expression -> PLUS expression .)
    ENDFUNCTION     reduce using rule 49 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 49 (expression -> PLUS expression .)
    NEXT            reduce using rule 49 (expression -> PLUS expression .)
    THEN            reduce using rule 49 (expression -> PLUS expression .)
    DO              reduce using rule 49 (expression -> PLUS expression .)
    RIGHT_PAREN     reduce using rule 49 (expression -> PLUS expression .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> PLUS expression .)
    TO              reduce using rule 49 (expression -> PLUS expression .)
    COLON           reduce using rule 49 (expression -> PLUS expression .)
    STEP            reduce using rule 49 (expression -> PLUS expression .)

  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 76

    (3) statement -> DECLARE ID COLON . ID
    (5) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 123
    ARRAY           shift and go to state 124


state 77

    (9) statement -> ID ASSIGN expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CONSTANT        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 9 (statement -> ID ASSIGN expression .)
    INPUT           reduce using rule 9 (statement -> ID ASSIGN expression .)
    OUTPUT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 9 (statement -> ID ASSIGN expression .)
    CASE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 9 (statement -> ID ASSIGN expression .)
    REPEAT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 9 (statement -> ID ASSIGN expression .)
    PROCEDURE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    CALL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FUNCTION        reduce using rule 9 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 9 (statement -> ID ASSIGN expression .)
    OPENFILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    READFILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    WRITEFILE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    CLOSEFILE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    SEEK            reduce using rule 9 (statement -> ID ASSIGN expression .)
    TYPE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 9 (statement -> ID ASSIGN expression .)
    LEFT_PAREN      reduce using rule 9 (statement -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 9 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 9 (statement -> ID ASSIGN expression .)
    REAL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    INTEGER         reduce using rule 9 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 9 (statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDWHILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDTYPE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDIF           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDFUNCTION     reduce using rule 9 (statement -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 9 (statement -> ID ASSIGN expression .)
    NEXT            reduce using rule 9 (statement -> ID ASSIGN expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 9 (statement -> ID ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 9 (statement -> ID ASSIGN expression .) ]


state 78

    (10) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN expression
    (36) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 125
    COMMA           shift and go to state 126


state 79

    (12) indexes -> expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 12 (indexes -> expression .)
    COMMA           reduce using rule 12 (indexes -> expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 80

    (77) expression -> ID LEFT_PAREN parameters . RIGHT_PAREN
    (67) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 127
    COMMA           shift and go to state 128


state 81

    (78) expression -> ID LEFT_PAREN RIGHT_PAREN .

    DOT             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OR              reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    AND             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    EQUAL           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MUL             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONNECT         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OPENFILE        reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    READFILE        reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WRITEFILE       reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEEK            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TYPE            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDTYPE         reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    THEN            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DO              reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TO              reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COLON           reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STEP            reduce using rule 78 (expression -> ID LEFT_PAREN RIGHT_PAREN .)


state 82

    (68) parameters -> expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 68 (parameters -> expression .)
    COMMA           reduce using rule 68 (parameters -> expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 83

    (4) statement -> CONSTANT ID EQUAL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 129

state 84

    (90) expression -> expression DOT expression .
    (34) statement -> expression .
    (91) statement -> expression . DOT statement
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! reduce/reduce conflict for DECLARE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ID resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for CASE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for CALL resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for NOT resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for REAL resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ENDWHILE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ENDPROCEDURE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ENDTYPE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ENDIF resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for ENDFUNCTION resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 34 (statement -> expression .)
  ! reduce/reduce conflict for NEXT resolved using rule 34 (statement -> expression .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
    DECLARE         reduce using rule 34 (statement -> expression .)
    CONSTANT        reduce using rule 34 (statement -> expression .)
    ID              reduce using rule 34 (statement -> expression .)
    INPUT           reduce using rule 34 (statement -> expression .)
    OUTPUT          reduce using rule 34 (statement -> expression .)
    IF              reduce using rule 34 (statement -> expression .)
    CASE            reduce using rule 34 (statement -> expression .)
    FOR             reduce using rule 34 (statement -> expression .)
    REPEAT          reduce using rule 34 (statement -> expression .)
    WHILE           reduce using rule 34 (statement -> expression .)
    PROCEDURE       reduce using rule 34 (statement -> expression .)
    CALL            reduce using rule 34 (statement -> expression .)
    FUNCTION        reduce using rule 34 (statement -> expression .)
    RETURN          reduce using rule 34 (statement -> expression .)
    OPENFILE        reduce using rule 34 (statement -> expression .)
    READFILE        reduce using rule 34 (statement -> expression .)
    WRITEFILE       reduce using rule 34 (statement -> expression .)
    CLOSEFILE       reduce using rule 34 (statement -> expression .)
    SEEK            reduce using rule 34 (statement -> expression .)
    TYPE            reduce using rule 34 (statement -> expression .)
    NOT             reduce using rule 34 (statement -> expression .)
    LEFT_PAREN      reduce using rule 34 (statement -> expression .)
    BOOLEAN         reduce using rule 34 (statement -> expression .)
    CHAR            reduce using rule 34 (statement -> expression .)
    STRING          reduce using rule 34 (statement -> expression .)
    REAL            reduce using rule 34 (statement -> expression .)
    INTEGER         reduce using rule 34 (statement -> expression .)
    $end            reduce using rule 34 (statement -> expression .)
    UNTIL           reduce using rule 34 (statement -> expression .)
    ENDWHILE        reduce using rule 34 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 34 (statement -> expression .)
    ENDTYPE         reduce using rule 34 (statement -> expression .)
    ELSE            reduce using rule 34 (statement -> expression .)
    ENDIF           reduce using rule 34 (statement -> expression .)
    ENDFUNCTION     reduce using rule 34 (statement -> expression .)
    SEMICOLON       reduce using rule 34 (statement -> expression .)
    NEXT            reduce using rule 34 (statement -> expression .)
    DOT             shift and go to state 39
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52

  ! DOT             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! OR              [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! DECLARE         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CONSTANT        [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ID              [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! INPUT           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! OUTPUT          [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! IF              [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CASE            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! FOR             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! REPEAT          [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! WHILE           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! PROCEDURE       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CALL            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! FUNCTION        [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! RETURN          [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! OPENFILE        [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! READFILE        [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! WRITEFILE       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CLOSEFILE       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! SEEK            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! TYPE            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! NOT             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! LEFT_PAREN      [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! BOOLEAN         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CHAR            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! STRING          [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! REAL            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! INTEGER         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! $end            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! UNTIL           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ENDWHILE        [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ENDPROCEDURE    [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ENDTYPE         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ELSE            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ENDIF           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! ENDFUNCTION     [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! SEMICOLON       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! NEXT            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 34 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 34 (statement -> expression .) ]


state 85

    (91) statement -> expression DOT statement .

    DECLARE         reduce using rule 91 (statement -> expression DOT statement .)
    CONSTANT        reduce using rule 91 (statement -> expression DOT statement .)
    ID              reduce using rule 91 (statement -> expression DOT statement .)
    INPUT           reduce using rule 91 (statement -> expression DOT statement .)
    OUTPUT          reduce using rule 91 (statement -> expression DOT statement .)
    IF              reduce using rule 91 (statement -> expression DOT statement .)
    CASE            reduce using rule 91 (statement -> expression DOT statement .)
    FOR             reduce using rule 91 (statement -> expression DOT statement .)
    REPEAT          reduce using rule 91 (statement -> expression DOT statement .)
    WHILE           reduce using rule 91 (statement -> expression DOT statement .)
    PROCEDURE       reduce using rule 91 (statement -> expression DOT statement .)
    CALL            reduce using rule 91 (statement -> expression DOT statement .)
    FUNCTION        reduce using rule 91 (statement -> expression DOT statement .)
    RETURN          reduce using rule 91 (statement -> expression DOT statement .)
    OPENFILE        reduce using rule 91 (statement -> expression DOT statement .)
    READFILE        reduce using rule 91 (statement -> expression DOT statement .)
    WRITEFILE       reduce using rule 91 (statement -> expression DOT statement .)
    CLOSEFILE       reduce using rule 91 (statement -> expression DOT statement .)
    SEEK            reduce using rule 91 (statement -> expression DOT statement .)
    TYPE            reduce using rule 91 (statement -> expression DOT statement .)
    NOT             reduce using rule 91 (statement -> expression DOT statement .)
    MINUS           reduce using rule 91 (statement -> expression DOT statement .)
    PLUS            reduce using rule 91 (statement -> expression DOT statement .)
    LEFT_PAREN      reduce using rule 91 (statement -> expression DOT statement .)
    BOOLEAN         reduce using rule 91 (statement -> expression DOT statement .)
    CHAR            reduce using rule 91 (statement -> expression DOT statement .)
    STRING          reduce using rule 91 (statement -> expression DOT statement .)
    REAL            reduce using rule 91 (statement -> expression DOT statement .)
    INTEGER         reduce using rule 91 (statement -> expression DOT statement .)
    $end            reduce using rule 91 (statement -> expression DOT statement .)
    UNTIL           reduce using rule 91 (statement -> expression DOT statement .)
    ENDWHILE        reduce using rule 91 (statement -> expression DOT statement .)
    ENDPROCEDURE    reduce using rule 91 (statement -> expression DOT statement .)
    ENDTYPE         reduce using rule 91 (statement -> expression DOT statement .)
    ELSE            reduce using rule 91 (statement -> expression DOT statement .)
    ENDIF           reduce using rule 91 (statement -> expression DOT statement .)
    ENDFUNCTION     reduce using rule 91 (statement -> expression DOT statement .)
    SEMICOLON       reduce using rule 91 (statement -> expression DOT statement .)
    NEXT            reduce using rule 91 (statement -> expression DOT statement .)


state 86

    (37) expression -> expression OR expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 37 (expression -> expression OR expression .)
    OR              reduce using rule 37 (expression -> expression OR expression .)
    AND             reduce using rule 37 (expression -> expression OR expression .)
    CONNECT         reduce using rule 37 (expression -> expression OR expression .)
    DECLARE         reduce using rule 37 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 37 (expression -> expression OR expression .)
    ID              reduce using rule 37 (expression -> expression OR expression .)
    INPUT           reduce using rule 37 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 37 (expression -> expression OR expression .)
    IF              reduce using rule 37 (expression -> expression OR expression .)
    CASE            reduce using rule 37 (expression -> expression OR expression .)
    FOR             reduce using rule 37 (expression -> expression OR expression .)
    REPEAT          reduce using rule 37 (expression -> expression OR expression .)
    WHILE           reduce using rule 37 (expression -> expression OR expression .)
    PROCEDURE       reduce using rule 37 (expression -> expression OR expression .)
    CALL            reduce using rule 37 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 37 (expression -> expression OR expression .)
    RETURN          reduce using rule 37 (expression -> expression OR expression .)
    OPENFILE        reduce using rule 37 (expression -> expression OR expression .)
    READFILE        reduce using rule 37 (expression -> expression OR expression .)
    WRITEFILE       reduce using rule 37 (expression -> expression OR expression .)
    CLOSEFILE       reduce using rule 37 (expression -> expression OR expression .)
    SEEK            reduce using rule 37 (expression -> expression OR expression .)
    TYPE            reduce using rule 37 (expression -> expression OR expression .)
    NOT             reduce using rule 37 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 37 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 37 (expression -> expression OR expression .)
    CHAR            reduce using rule 37 (expression -> expression OR expression .)
    STRING          reduce using rule 37 (expression -> expression OR expression .)
    REAL            reduce using rule 37 (expression -> expression OR expression .)
    INTEGER         reduce using rule 37 (expression -> expression OR expression .)
    $end            reduce using rule 37 (expression -> expression OR expression .)
    COMMA           reduce using rule 37 (expression -> expression OR expression .)
    UNTIL           reduce using rule 37 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 37 (expression -> expression OR expression .)
    ENDPROCEDURE    reduce using rule 37 (expression -> expression OR expression .)
    ENDTYPE         reduce using rule 37 (expression -> expression OR expression .)
    ELSE            reduce using rule 37 (expression -> expression OR expression .)
    ENDIF           reduce using rule 37 (expression -> expression OR expression .)
    ENDFUNCTION     reduce using rule 37 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression OR expression .)
    NEXT            reduce using rule 37 (expression -> expression OR expression .)
    THEN            reduce using rule 37 (expression -> expression OR expression .)
    DO              reduce using rule 37 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 37 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 37 (expression -> expression OR expression .)
    TO              reduce using rule 37 (expression -> expression OR expression .)
    COLON           reduce using rule 37 (expression -> expression OR expression .)
    STEP            reduce using rule 37 (expression -> expression OR expression .)
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! EQUAL           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 87

    (38) expression -> expression AND expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 38 (expression -> expression AND expression .)
    AND             reduce using rule 38 (expression -> expression AND expression .)
    CONNECT         reduce using rule 38 (expression -> expression AND expression .)
    DECLARE         reduce using rule 38 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 38 (expression -> expression AND expression .)
    ID              reduce using rule 38 (expression -> expression AND expression .)
    INPUT           reduce using rule 38 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 38 (expression -> expression AND expression .)
    IF              reduce using rule 38 (expression -> expression AND expression .)
    CASE            reduce using rule 38 (expression -> expression AND expression .)
    FOR             reduce using rule 38 (expression -> expression AND expression .)
    REPEAT          reduce using rule 38 (expression -> expression AND expression .)
    WHILE           reduce using rule 38 (expression -> expression AND expression .)
    PROCEDURE       reduce using rule 38 (expression -> expression AND expression .)
    CALL            reduce using rule 38 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 38 (expression -> expression AND expression .)
    RETURN          reduce using rule 38 (expression -> expression AND expression .)
    OPENFILE        reduce using rule 38 (expression -> expression AND expression .)
    READFILE        reduce using rule 38 (expression -> expression AND expression .)
    WRITEFILE       reduce using rule 38 (expression -> expression AND expression .)
    CLOSEFILE       reduce using rule 38 (expression -> expression AND expression .)
    SEEK            reduce using rule 38 (expression -> expression AND expression .)
    TYPE            reduce using rule 38 (expression -> expression AND expression .)
    NOT             reduce using rule 38 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 38 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 38 (expression -> expression AND expression .)
    CHAR            reduce using rule 38 (expression -> expression AND expression .)
    STRING          reduce using rule 38 (expression -> expression AND expression .)
    REAL            reduce using rule 38 (expression -> expression AND expression .)
    INTEGER         reduce using rule 38 (expression -> expression AND expression .)
    $end            reduce using rule 38 (expression -> expression AND expression .)
    COMMA           reduce using rule 38 (expression -> expression AND expression .)
    UNTIL           reduce using rule 38 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 38 (expression -> expression AND expression .)
    ENDPROCEDURE    reduce using rule 38 (expression -> expression AND expression .)
    ENDTYPE         reduce using rule 38 (expression -> expression AND expression .)
    ELSE            reduce using rule 38 (expression -> expression AND expression .)
    ENDIF           reduce using rule 38 (expression -> expression AND expression .)
    ENDFUNCTION     reduce using rule 38 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression AND expression .)
    NEXT            reduce using rule 38 (expression -> expression AND expression .)
    THEN            reduce using rule 38 (expression -> expression AND expression .)
    DO              reduce using rule 38 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 38 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 38 (expression -> expression AND expression .)
    TO              reduce using rule 38 (expression -> expression AND expression .)
    COLON           reduce using rule 38 (expression -> expression AND expression .)
    STEP            reduce using rule 38 (expression -> expression AND expression .)
    OR              shift and go to state 40
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! OR              [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 88

    (40) expression -> expression EQUAL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 40 (expression -> expression EQUAL expression .)
    OR              reduce using rule 40 (expression -> expression EQUAL expression .)
    AND             reduce using rule 40 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 40 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 40 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 40 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression EQUAL expression .)
    CONNECT         reduce using rule 40 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 40 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 40 (expression -> expression EQUAL expression .)
    ID              reduce using rule 40 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 40 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 40 (expression -> expression EQUAL expression .)
    IF              reduce using rule 40 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 40 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 40 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 40 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 40 (expression -> expression EQUAL expression .)
    PROCEDURE       reduce using rule 40 (expression -> expression EQUAL expression .)
    CALL            reduce using rule 40 (expression -> expression EQUAL expression .)
    FUNCTION        reduce using rule 40 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 40 (expression -> expression EQUAL expression .)
    OPENFILE        reduce using rule 40 (expression -> expression EQUAL expression .)
    READFILE        reduce using rule 40 (expression -> expression EQUAL expression .)
    WRITEFILE       reduce using rule 40 (expression -> expression EQUAL expression .)
    CLOSEFILE       reduce using rule 40 (expression -> expression EQUAL expression .)
    SEEK            reduce using rule 40 (expression -> expression EQUAL expression .)
    TYPE            reduce using rule 40 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 40 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 40 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 40 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 40 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 40 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 40 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 40 (expression -> expression EQUAL expression .)
    $end            reduce using rule 40 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 40 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 40 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 40 (expression -> expression EQUAL expression .)
    ENDPROCEDURE    reduce using rule 40 (expression -> expression EQUAL expression .)
    ENDTYPE         reduce using rule 40 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 40 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 40 (expression -> expression EQUAL expression .)
    ENDFUNCTION     reduce using rule 40 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 40 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 40 (expression -> expression EQUAL expression .)
    DO              reduce using rule 40 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 40 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> expression EQUAL expression .)
    TO              reduce using rule 40 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 40 (expression -> expression EQUAL expression .)
    STEP            reduce using rule 40 (expression -> expression EQUAL expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 40 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression EQUAL expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 89

    (41) expression -> expression NOT_EQUAL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CONNECT         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    PROCEDURE       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CALL            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    FUNCTION        reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    OPENFILE        reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    READFILE        reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    WRITEFILE       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CLOSEFILE       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    SEEK            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    TYPE            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ENDTYPE         reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    ENDFUNCTION     reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    DO              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    STEP            reduce using rule 41 (expression -> expression NOT_EQUAL expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 90

    (42) expression -> expression LESS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 42 (expression -> expression LESS expression .)
    OR              reduce using rule 42 (expression -> expression LESS expression .)
    AND             reduce using rule 42 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 42 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression LESS expression .)
    LESS            reduce using rule 42 (expression -> expression LESS expression .)
    GREATER         reduce using rule 42 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 42 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 42 (expression -> expression LESS expression .)
    CONNECT         reduce using rule 42 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 42 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 42 (expression -> expression LESS expression .)
    ID              reduce using rule 42 (expression -> expression LESS expression .)
    INPUT           reduce using rule 42 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 42 (expression -> expression LESS expression .)
    IF              reduce using rule 42 (expression -> expression LESS expression .)
    CASE            reduce using rule 42 (expression -> expression LESS expression .)
    FOR             reduce using rule 42 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 42 (expression -> expression LESS expression .)
    WHILE           reduce using rule 42 (expression -> expression LESS expression .)
    PROCEDURE       reduce using rule 42 (expression -> expression LESS expression .)
    CALL            reduce using rule 42 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 42 (expression -> expression LESS expression .)
    RETURN          reduce using rule 42 (expression -> expression LESS expression .)
    OPENFILE        reduce using rule 42 (expression -> expression LESS expression .)
    READFILE        reduce using rule 42 (expression -> expression LESS expression .)
    WRITEFILE       reduce using rule 42 (expression -> expression LESS expression .)
    CLOSEFILE       reduce using rule 42 (expression -> expression LESS expression .)
    SEEK            reduce using rule 42 (expression -> expression LESS expression .)
    TYPE            reduce using rule 42 (expression -> expression LESS expression .)
    NOT             reduce using rule 42 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 42 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 42 (expression -> expression LESS expression .)
    CHAR            reduce using rule 42 (expression -> expression LESS expression .)
    STRING          reduce using rule 42 (expression -> expression LESS expression .)
    REAL            reduce using rule 42 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 42 (expression -> expression LESS expression .)
    $end            reduce using rule 42 (expression -> expression LESS expression .)
    COMMA           reduce using rule 42 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 42 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 42 (expression -> expression LESS expression .)
    ENDPROCEDURE    reduce using rule 42 (expression -> expression LESS expression .)
    ENDTYPE         reduce using rule 42 (expression -> expression LESS expression .)
    ELSE            reduce using rule 42 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 42 (expression -> expression LESS expression .)
    ENDFUNCTION     reduce using rule 42 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression LESS expression .)
    NEXT            reduce using rule 42 (expression -> expression LESS expression .)
    THEN            reduce using rule 42 (expression -> expression LESS expression .)
    DO              reduce using rule 42 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 42 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> expression LESS expression .)
    TO              reduce using rule 42 (expression -> expression LESS expression .)
    COLON           reduce using rule 42 (expression -> expression LESS expression .)
    STEP            reduce using rule 42 (expression -> expression LESS expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 91

    (43) expression -> expression GREATER expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 43 (expression -> expression GREATER expression .)
    OR              reduce using rule 43 (expression -> expression GREATER expression .)
    AND             reduce using rule 43 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 43 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression GREATER expression .)
    LESS            reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 43 (expression -> expression GREATER expression .)
    CONNECT         reduce using rule 43 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 43 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 43 (expression -> expression GREATER expression .)
    ID              reduce using rule 43 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 43 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 43 (expression -> expression GREATER expression .)
    IF              reduce using rule 43 (expression -> expression GREATER expression .)
    CASE            reduce using rule 43 (expression -> expression GREATER expression .)
    FOR             reduce using rule 43 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 43 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 43 (expression -> expression GREATER expression .)
    PROCEDURE       reduce using rule 43 (expression -> expression GREATER expression .)
    CALL            reduce using rule 43 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 43 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 43 (expression -> expression GREATER expression .)
    OPENFILE        reduce using rule 43 (expression -> expression GREATER expression .)
    READFILE        reduce using rule 43 (expression -> expression GREATER expression .)
    WRITEFILE       reduce using rule 43 (expression -> expression GREATER expression .)
    CLOSEFILE       reduce using rule 43 (expression -> expression GREATER expression .)
    SEEK            reduce using rule 43 (expression -> expression GREATER expression .)
    TYPE            reduce using rule 43 (expression -> expression GREATER expression .)
    NOT             reduce using rule 43 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 43 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 43 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 43 (expression -> expression GREATER expression .)
    STRING          reduce using rule 43 (expression -> expression GREATER expression .)
    REAL            reduce using rule 43 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 43 (expression -> expression GREATER expression .)
    $end            reduce using rule 43 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 43 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 43 (expression -> expression GREATER expression .)
    ENDPROCEDURE    reduce using rule 43 (expression -> expression GREATER expression .)
    ENDTYPE         reduce using rule 43 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 43 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 43 (expression -> expression GREATER expression .)
    ENDFUNCTION     reduce using rule 43 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 43 (expression -> expression GREATER expression .)
    THEN            reduce using rule 43 (expression -> expression GREATER expression .)
    DO              reduce using rule 43 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 43 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> expression GREATER expression .)
    TO              reduce using rule 43 (expression -> expression GREATER expression .)
    COLON           reduce using rule 43 (expression -> expression GREATER expression .)
    STEP            reduce using rule 43 (expression -> expression GREATER expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 92

    (44) expression -> expression LESS_EQUAL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CONNECT         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    PROCEDURE       reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CALL            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    FUNCTION        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    OPENFILE        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    READFILE        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    WRITEFILE       reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CLOSEFILE       reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    SEEK            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    TYPE            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ENDTYPE         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ENDFUNCTION     reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    DO              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    STEP            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 93

    (45) expression -> expression GREATER_EQUAL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CONNECT         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    PROCEDURE       reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CALL            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    FUNCTION        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    OPENFILE        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    READFILE        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    WRITEFILE       reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CLOSEFILE       reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    SEEK            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    TYPE            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ENDTYPE         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ENDFUNCTION     reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    DO              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    STEP            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MUL             [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 94

    (46) expression -> expression MUL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 46 (expression -> expression MUL expression .)
    OR              reduce using rule 46 (expression -> expression MUL expression .)
    AND             reduce using rule 46 (expression -> expression MUL expression .)
    EQUAL           reduce using rule 46 (expression -> expression MUL expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> expression MUL expression .)
    LESS            reduce using rule 46 (expression -> expression MUL expression .)
    GREATER         reduce using rule 46 (expression -> expression MUL expression .)
    LESS_EQUAL      reduce using rule 46 (expression -> expression MUL expression .)
    GREATER_EQUAL   reduce using rule 46 (expression -> expression MUL expression .)
    MUL             reduce using rule 46 (expression -> expression MUL expression .)
    DIV             reduce using rule 46 (expression -> expression MUL expression .)
    PLUS            reduce using rule 46 (expression -> expression MUL expression .)
    MINUS           reduce using rule 46 (expression -> expression MUL expression .)
    CONNECT         reduce using rule 46 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 46 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 46 (expression -> expression MUL expression .)
    ID              reduce using rule 46 (expression -> expression MUL expression .)
    INPUT           reduce using rule 46 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 46 (expression -> expression MUL expression .)
    IF              reduce using rule 46 (expression -> expression MUL expression .)
    CASE            reduce using rule 46 (expression -> expression MUL expression .)
    FOR             reduce using rule 46 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 46 (expression -> expression MUL expression .)
    WHILE           reduce using rule 46 (expression -> expression MUL expression .)
    PROCEDURE       reduce using rule 46 (expression -> expression MUL expression .)
    CALL            reduce using rule 46 (expression -> expression MUL expression .)
    FUNCTION        reduce using rule 46 (expression -> expression MUL expression .)
    RETURN          reduce using rule 46 (expression -> expression MUL expression .)
    OPENFILE        reduce using rule 46 (expression -> expression MUL expression .)
    READFILE        reduce using rule 46 (expression -> expression MUL expression .)
    WRITEFILE       reduce using rule 46 (expression -> expression MUL expression .)
    CLOSEFILE       reduce using rule 46 (expression -> expression MUL expression .)
    SEEK            reduce using rule 46 (expression -> expression MUL expression .)
    TYPE            reduce using rule 46 (expression -> expression MUL expression .)
    NOT             reduce using rule 46 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 46 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 46 (expression -> expression MUL expression .)
    CHAR            reduce using rule 46 (expression -> expression MUL expression .)
    STRING          reduce using rule 46 (expression -> expression MUL expression .)
    REAL            reduce using rule 46 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 46 (expression -> expression MUL expression .)
    $end            reduce using rule 46 (expression -> expression MUL expression .)
    COMMA           reduce using rule 46 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 46 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 46 (expression -> expression MUL expression .)
    ENDPROCEDURE    reduce using rule 46 (expression -> expression MUL expression .)
    ENDTYPE         reduce using rule 46 (expression -> expression MUL expression .)
    ELSE            reduce using rule 46 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 46 (expression -> expression MUL expression .)
    ENDFUNCTION     reduce using rule 46 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression MUL expression .)
    NEXT            reduce using rule 46 (expression -> expression MUL expression .)
    THEN            reduce using rule 46 (expression -> expression MUL expression .)
    DO              reduce using rule 46 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 46 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 46 (expression -> expression MUL expression .)
    TO              reduce using rule 46 (expression -> expression MUL expression .)
    COLON           reduce using rule 46 (expression -> expression MUL expression .)
    STEP            reduce using rule 46 (expression -> expression MUL expression .)

  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 95

    (47) expression -> expression DIV expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 47 (expression -> expression DIV expression .)
    OR              reduce using rule 47 (expression -> expression DIV expression .)
    AND             reduce using rule 47 (expression -> expression DIV expression .)
    EQUAL           reduce using rule 47 (expression -> expression DIV expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression DIV expression .)
    LESS            reduce using rule 47 (expression -> expression DIV expression .)
    GREATER         reduce using rule 47 (expression -> expression DIV expression .)
    LESS_EQUAL      reduce using rule 47 (expression -> expression DIV expression .)
    GREATER_EQUAL   reduce using rule 47 (expression -> expression DIV expression .)
    MUL             reduce using rule 47 (expression -> expression DIV expression .)
    DIV             reduce using rule 47 (expression -> expression DIV expression .)
    PLUS            reduce using rule 47 (expression -> expression DIV expression .)
    MINUS           reduce using rule 47 (expression -> expression DIV expression .)
    CONNECT         reduce using rule 47 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 47 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 47 (expression -> expression DIV expression .)
    ID              reduce using rule 47 (expression -> expression DIV expression .)
    INPUT           reduce using rule 47 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 47 (expression -> expression DIV expression .)
    IF              reduce using rule 47 (expression -> expression DIV expression .)
    CASE            reduce using rule 47 (expression -> expression DIV expression .)
    FOR             reduce using rule 47 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 47 (expression -> expression DIV expression .)
    WHILE           reduce using rule 47 (expression -> expression DIV expression .)
    PROCEDURE       reduce using rule 47 (expression -> expression DIV expression .)
    CALL            reduce using rule 47 (expression -> expression DIV expression .)
    FUNCTION        reduce using rule 47 (expression -> expression DIV expression .)
    RETURN          reduce using rule 47 (expression -> expression DIV expression .)
    OPENFILE        reduce using rule 47 (expression -> expression DIV expression .)
    READFILE        reduce using rule 47 (expression -> expression DIV expression .)
    WRITEFILE       reduce using rule 47 (expression -> expression DIV expression .)
    CLOSEFILE       reduce using rule 47 (expression -> expression DIV expression .)
    SEEK            reduce using rule 47 (expression -> expression DIV expression .)
    TYPE            reduce using rule 47 (expression -> expression DIV expression .)
    NOT             reduce using rule 47 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 47 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 47 (expression -> expression DIV expression .)
    CHAR            reduce using rule 47 (expression -> expression DIV expression .)
    STRING          reduce using rule 47 (expression -> expression DIV expression .)
    REAL            reduce using rule 47 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 47 (expression -> expression DIV expression .)
    $end            reduce using rule 47 (expression -> expression DIV expression .)
    COMMA           reduce using rule 47 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 47 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 47 (expression -> expression DIV expression .)
    ENDPROCEDURE    reduce using rule 47 (expression -> expression DIV expression .)
    ENDTYPE         reduce using rule 47 (expression -> expression DIV expression .)
    ELSE            reduce using rule 47 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 47 (expression -> expression DIV expression .)
    ENDFUNCTION     reduce using rule 47 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression DIV expression .)
    NEXT            reduce using rule 47 (expression -> expression DIV expression .)
    THEN            reduce using rule 47 (expression -> expression DIV expression .)
    DO              reduce using rule 47 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 47 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 47 (expression -> expression DIV expression .)
    TO              reduce using rule 47 (expression -> expression DIV expression .)
    COLON           reduce using rule 47 (expression -> expression DIV expression .)
    STEP            reduce using rule 47 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 96

    (50) expression -> expression PLUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 50 (expression -> expression PLUS expression .)
    OR              reduce using rule 50 (expression -> expression PLUS expression .)
    AND             reduce using rule 50 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 50 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 50 (expression -> expression PLUS expression .)
    LESS            reduce using rule 50 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 50 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 50 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 50 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 50 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 50 (expression -> expression PLUS expression .)
    CONNECT         reduce using rule 50 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 50 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 50 (expression -> expression PLUS expression .)
    ID              reduce using rule 50 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 50 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 50 (expression -> expression PLUS expression .)
    IF              reduce using rule 50 (expression -> expression PLUS expression .)
    CASE            reduce using rule 50 (expression -> expression PLUS expression .)
    FOR             reduce using rule 50 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 50 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 50 (expression -> expression PLUS expression .)
    PROCEDURE       reduce using rule 50 (expression -> expression PLUS expression .)
    CALL            reduce using rule 50 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 50 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 50 (expression -> expression PLUS expression .)
    OPENFILE        reduce using rule 50 (expression -> expression PLUS expression .)
    READFILE        reduce using rule 50 (expression -> expression PLUS expression .)
    WRITEFILE       reduce using rule 50 (expression -> expression PLUS expression .)
    CLOSEFILE       reduce using rule 50 (expression -> expression PLUS expression .)
    SEEK            reduce using rule 50 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 50 (expression -> expression PLUS expression .)
    NOT             reduce using rule 50 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 50 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 50 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 50 (expression -> expression PLUS expression .)
    STRING          reduce using rule 50 (expression -> expression PLUS expression .)
    REAL            reduce using rule 50 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 50 (expression -> expression PLUS expression .)
    $end            reduce using rule 50 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 50 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 50 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 50 (expression -> expression PLUS expression .)
    ENDPROCEDURE    reduce using rule 50 (expression -> expression PLUS expression .)
    ENDTYPE         reduce using rule 50 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 50 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 50 (expression -> expression PLUS expression .)
    ENDFUNCTION     reduce using rule 50 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 50 (expression -> expression PLUS expression .)
    THEN            reduce using rule 50 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 50 (expression -> expression PLUS expression .)
    DO              reduce using rule 50 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 50 (expression -> expression PLUS expression .)
    TO              reduce using rule 50 (expression -> expression PLUS expression .)
    COLON           reduce using rule 50 (expression -> expression PLUS expression .)
    STEP            reduce using rule 50 (expression -> expression PLUS expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49

  ! MUL             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 97

    (51) expression -> expression MINUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DOT             reduce using rule 51 (expression -> expression MINUS expression .)
    OR              reduce using rule 51 (expression -> expression MINUS expression .)
    AND             reduce using rule 51 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 51 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 51 (expression -> expression MINUS expression .)
    LESS            reduce using rule 51 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 51 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 51 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 51 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 51 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 51 (expression -> expression MINUS expression .)
    CONNECT         reduce using rule 51 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 51 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 51 (expression -> expression MINUS expression .)
    ID              reduce using rule 51 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 51 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 51 (expression -> expression MINUS expression .)
    IF              reduce using rule 51 (expression -> expression MINUS expression .)
    CASE            reduce using rule 51 (expression -> expression MINUS expression .)
    FOR             reduce using rule 51 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 51 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 51 (expression -> expression MINUS expression .)
    PROCEDURE       reduce using rule 51 (expression -> expression MINUS expression .)
    CALL            reduce using rule 51 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 51 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 51 (expression -> expression MINUS expression .)
    OPENFILE        reduce using rule 51 (expression -> expression MINUS expression .)
    READFILE        reduce using rule 51 (expression -> expression MINUS expression .)
    WRITEFILE       reduce using rule 51 (expression -> expression MINUS expression .)
    CLOSEFILE       reduce using rule 51 (expression -> expression MINUS expression .)
    SEEK            reduce using rule 51 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 51 (expression -> expression MINUS expression .)
    NOT             reduce using rule 51 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 51 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 51 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 51 (expression -> expression MINUS expression .)
    STRING          reduce using rule 51 (expression -> expression MINUS expression .)
    REAL            reduce using rule 51 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 51 (expression -> expression MINUS expression .)
    $end            reduce using rule 51 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 51 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 51 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 51 (expression -> expression MINUS expression .)
    ENDPROCEDURE    reduce using rule 51 (expression -> expression MINUS expression .)
    ENDTYPE         reduce using rule 51 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 51 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 51 (expression -> expression MINUS expression .)
    ENDFUNCTION     reduce using rule 51 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 51 (expression -> expression MINUS expression .)
    THEN            reduce using rule 51 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 51 (expression -> expression MINUS expression .)
    DO              reduce using rule 51 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 51 (expression -> expression MINUS expression .)
    TO              reduce using rule 51 (expression -> expression MINUS expression .)
    COLON           reduce using rule 51 (expression -> expression MINUS expression .)
    STEP            reduce using rule 51 (expression -> expression MINUS expression .)
    MUL             shift and go to state 48
    DIV             shift and go to state 49

  ! MUL             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 98

    (52) expression -> expression CONNECT expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    DECLARE         reduce using rule 52 (expression -> expression CONNECT expression .)
    CONSTANT        reduce using rule 52 (expression -> expression CONNECT expression .)
    ID              reduce using rule 52 (expression -> expression CONNECT expression .)
    INPUT           reduce using rule 52 (expression -> expression CONNECT expression .)
    OUTPUT          reduce using rule 52 (expression -> expression CONNECT expression .)
    IF              reduce using rule 52 (expression -> expression CONNECT expression .)
    CASE            reduce using rule 52 (expression -> expression CONNECT expression .)
    FOR             reduce using rule 52 (expression -> expression CONNECT expression .)
    REPEAT          reduce using rule 52 (expression -> expression CONNECT expression .)
    WHILE           reduce using rule 52 (expression -> expression CONNECT expression .)
    PROCEDURE       reduce using rule 52 (expression -> expression CONNECT expression .)
    CALL            reduce using rule 52 (expression -> expression CONNECT expression .)
    FUNCTION        reduce using rule 52 (expression -> expression CONNECT expression .)
    RETURN          reduce using rule 52 (expression -> expression CONNECT expression .)
    OPENFILE        reduce using rule 52 (expression -> expression CONNECT expression .)
    READFILE        reduce using rule 52 (expression -> expression CONNECT expression .)
    WRITEFILE       reduce using rule 52 (expression -> expression CONNECT expression .)
    CLOSEFILE       reduce using rule 52 (expression -> expression CONNECT expression .)
    SEEK            reduce using rule 52 (expression -> expression CONNECT expression .)
    TYPE            reduce using rule 52 (expression -> expression CONNECT expression .)
    NOT             reduce using rule 52 (expression -> expression CONNECT expression .)
    LEFT_PAREN      reduce using rule 52 (expression -> expression CONNECT expression .)
    BOOLEAN         reduce using rule 52 (expression -> expression CONNECT expression .)
    CHAR            reduce using rule 52 (expression -> expression CONNECT expression .)
    STRING          reduce using rule 52 (expression -> expression CONNECT expression .)
    REAL            reduce using rule 52 (expression -> expression CONNECT expression .)
    INTEGER         reduce using rule 52 (expression -> expression CONNECT expression .)
    $end            reduce using rule 52 (expression -> expression CONNECT expression .)
    COMMA           reduce using rule 52 (expression -> expression CONNECT expression .)
    UNTIL           reduce using rule 52 (expression -> expression CONNECT expression .)
    ENDWHILE        reduce using rule 52 (expression -> expression CONNECT expression .)
    ENDPROCEDURE    reduce using rule 52 (expression -> expression CONNECT expression .)
    ENDTYPE         reduce using rule 52 (expression -> expression CONNECT expression .)
    ELSE            reduce using rule 52 (expression -> expression CONNECT expression .)
    ENDIF           reduce using rule 52 (expression -> expression CONNECT expression .)
    ENDFUNCTION     reduce using rule 52 (expression -> expression CONNECT expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression CONNECT expression .)
    NEXT            reduce using rule 52 (expression -> expression CONNECT expression .)
    THEN            reduce using rule 52 (expression -> expression CONNECT expression .)
    DO              reduce using rule 52 (expression -> expression CONNECT expression .)
    RIGHT_PAREN     reduce using rule 52 (expression -> expression CONNECT expression .)
    RIGHT_SQUARE    reduce using rule 52 (expression -> expression CONNECT expression .)
    TO              reduce using rule 52 (expression -> expression CONNECT expression .)
    COLON           reduce using rule 52 (expression -> expression CONNECT expression .)
    STEP            reduce using rule 52 (expression -> expression CONNECT expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! DOT             [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! EQUAL           [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! LESS            [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! GREATER         [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! MUL             [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression CONNECT expression .) ]
  ! CONNECT         [ reduce using rule 52 (expression -> expression CONNECT expression .) ]


state 99

    (14) statement -> INPUT ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    indexes                        shift and go to state 130
    expression                     shift and go to state 79

state 100

    (16) output_expression -> output_expression COMMA . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 131

state 101

    (90) expression -> expression DOT . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 132

state 102

    (36) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    indexes                        shift and go to state 133
    expression                     shift and go to state 79

state 103

    (18) statement -> IF expression THEN . statements ELSE statements ENDIF
    (19) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 134
    statement                      shift and go to state 2

state 104

    (20) statement -> CASE OF ID . cases ENDCASE
    (21) statement -> CASE OF ID . LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (22) cases -> . cases case
    (23) cases -> . case
    (24) case -> . case_expression COLON statements SEMICOLON
    (25) case -> . otherwise_statement SEMICOLON
    (26) case_expression -> . expression TO expression
    (27) case_expression -> . expression
    (28) otherwise_statement -> . OTHERWISE COLON statements
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    LEFT_SQUARE     shift and go to state 136
    OTHERWISE       shift and go to state 141
    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    cases                          shift and go to state 135
    case                           shift and go to state 137
    case_expression                shift and go to state 138
    otherwise_statement            shift and go to state 139
    expression                     shift and go to state 140

state 105

    (29) statement -> FOR ID ASSIGN . expression TO expression STEP expression statements NEXT ID
    (30) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 142

state 106

    (31) statement -> REPEAT statements UNTIL . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 143

state 107

    (32) statement -> WHILE expression DO . statements ENDWHILE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 144
    statement                      shift and go to state 2

state 108

    (33) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDWHILE        shift and go to state 145
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 109

    (50) expression -> expression PLUS . expression
    (49) expression -> PLUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 146

state 110

    (51) expression -> expression MINUS . expression
    (48) expression -> MINUS . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 147

state 111

    (69) statement -> PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (53) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (59) declare_parameters -> . declare_parameters COMMA declare_parameter
    (60) declare_parameters -> . declare_parameter
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression
    (61) declare_parameter -> . ID COLON ID
    (62) declare_parameter -> . ID COLON ARRAY
    (63) declare_parameter -> . BYREF ID COLON ID
    (64) declare_parameter -> . BYREF ID COLON ARRAY
    (65) declare_parameter -> . BYVAL ID COLON ID
    (66) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 148
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BYREF           shift and go to state 151
    BYVAL           shift and go to state 152

    declare_parameters             shift and go to state 149
    expression                     shift and go to state 63
    declare_parameter              shift and go to state 150

state 112

    (70) statement -> PROCEDURE ID statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDPROCEDURE    shift and go to state 153
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 113

    (53) expression -> LEFT_PAREN expression RIGHT_PAREN .

    DOT             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OR              reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONNECT         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PROCEDURE       reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CALL            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FUNCTION        reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RETURN          reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OPENFILE        reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    READFILE        reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WRITEFILE       reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEEK            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TYPE            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDTYPE         reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DO              reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STEP            reduce using rule 53 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 114

    (71) statement -> CALL ID LEFT_PAREN . parameters RIGHT_PAREN
    (67) parameters -> . parameters COMMA expression
    (68) parameters -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    parameters                     shift and go to state 154
    expression                     shift and go to state 82

state 115

    (73) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (59) declare_parameters -> . declare_parameters COMMA declare_parameter
    (60) declare_parameters -> . declare_parameter
    (61) declare_parameter -> . ID COLON ID
    (62) declare_parameter -> . ID COLON ARRAY
    (63) declare_parameter -> . BYREF ID COLON ID
    (64) declare_parameter -> . BYREF ID COLON ARRAY
    (65) declare_parameter -> . BYVAL ID COLON ID
    (66) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 155
    BYREF           shift and go to state 151
    BYVAL           shift and go to state 152

    declare_parameters             shift and go to state 156
    declare_parameter              shift and go to state 150

state 116

    (75) statement -> FUNCTION ID RETURNS . ID statements ENDFUNCTION
    (76) statement -> FUNCTION ID RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 157
    ARRAY           shift and go to state 158


state 117

    (80) statement -> OPENFILE expression FOR . READ
    (81) statement -> OPENFILE expression FOR . WRITE
    (82) statement -> OPENFILE expression FOR . APPEND
    (83) statement -> OPENFILE expression FOR . RANDOM

    READ            shift and go to state 159
    WRITE           shift and go to state 160
    APPEND          shift and go to state 161
    RANDOM          shift and go to state 162


state 118

    (84) statement -> READFILE expression COMMA . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> READFILE expression COMMA . ID

    ID              shift and go to state 163


state 119

    (86) statement -> WRITEFILE expression COMMA . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 164

state 120

    (88) statement -> SEEK expression COMMA . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 165

state 121

    (89) statement -> TYPE ID statements . ENDTYPE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDTYPE         shift and go to state 166
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 122

    (92) statement -> TYPE ID EQUAL . LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> TYPE ID EQUAL . POINTER ID

    LEFT_PAREN      shift and go to state 167
    POINTER         shift and go to state 168


state 123

    (3) statement -> DECLARE ID COLON ID .

    DECLARE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    PROCEDURE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CALL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FUNCTION        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    RETURN          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OPENFILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    READFILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    WRITEFILE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CLOSEFILE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    SEEK            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    TYPE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    MINUS           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    PLUS            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDTYPE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDFUNCTION     reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    SEMICOLON       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 3 (statement -> DECLARE ID COLON ID .)


state 124

    (5) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 169


state 125

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN expression
    (36) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          shift and go to state 170
    DOT             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OR              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 126

    (11) indexes -> indexes COMMA . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 171

state 127

    (77) expression -> ID LEFT_PAREN parameters RIGHT_PAREN .

    DOT             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 77 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)


state 128

    (67) parameters -> parameters COMMA . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 172

state 129

    (4) statement -> CONSTANT ID EQUAL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    DECLARE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    PROCEDURE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CALL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FUNCTION        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    RETURN          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OPENFILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    READFILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    WRITEFILE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CLOSEFILE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    SEEK            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    TYPE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDPROCEDURE    reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDTYPE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDFUNCTION     reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    SEMICOLON       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .) ]


state 130

    (14) statement -> INPUT ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 173
    COMMA           shift and go to state 126


state 131

    (16) output_expression -> output_expression COMMA expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    PROCEDURE       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CALL            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    FUNCTION        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    RETURN          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OPENFILE        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    READFILE        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    WRITEFILE       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CLOSEFILE       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    SEEK            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    TYPE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDTYPE         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDFUNCTION     reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    SEMICOLON       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 16 (output_expression -> output_expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 16 (output_expression -> output_expression COMMA expression .) ]


state 132

    (90) expression -> expression DOT expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COMMA           reduce using rule 90 (expression -> expression DOT expression .)
    DECLARE         reduce using rule 90 (expression -> expression DOT expression .)
    CONSTANT        reduce using rule 90 (expression -> expression DOT expression .)
    ID              reduce using rule 90 (expression -> expression DOT expression .)
    INPUT           reduce using rule 90 (expression -> expression DOT expression .)
    OUTPUT          reduce using rule 90 (expression -> expression DOT expression .)
    IF              reduce using rule 90 (expression -> expression DOT expression .)
    CASE            reduce using rule 90 (expression -> expression DOT expression .)
    FOR             reduce using rule 90 (expression -> expression DOT expression .)
    REPEAT          reduce using rule 90 (expression -> expression DOT expression .)
    WHILE           reduce using rule 90 (expression -> expression DOT expression .)
    PROCEDURE       reduce using rule 90 (expression -> expression DOT expression .)
    CALL            reduce using rule 90 (expression -> expression DOT expression .)
    FUNCTION        reduce using rule 90 (expression -> expression DOT expression .)
    RETURN          reduce using rule 90 (expression -> expression DOT expression .)
    OPENFILE        reduce using rule 90 (expression -> expression DOT expression .)
    READFILE        reduce using rule 90 (expression -> expression DOT expression .)
    WRITEFILE       reduce using rule 90 (expression -> expression DOT expression .)
    CLOSEFILE       reduce using rule 90 (expression -> expression DOT expression .)
    SEEK            reduce using rule 90 (expression -> expression DOT expression .)
    TYPE            reduce using rule 90 (expression -> expression DOT expression .)
    NOT             reduce using rule 90 (expression -> expression DOT expression .)
    LEFT_PAREN      reduce using rule 90 (expression -> expression DOT expression .)
    BOOLEAN         reduce using rule 90 (expression -> expression DOT expression .)
    CHAR            reduce using rule 90 (expression -> expression DOT expression .)
    STRING          reduce using rule 90 (expression -> expression DOT expression .)
    REAL            reduce using rule 90 (expression -> expression DOT expression .)
    INTEGER         reduce using rule 90 (expression -> expression DOT expression .)
    $end            reduce using rule 90 (expression -> expression DOT expression .)
    UNTIL           reduce using rule 90 (expression -> expression DOT expression .)
    ENDWHILE        reduce using rule 90 (expression -> expression DOT expression .)
    ENDPROCEDURE    reduce using rule 90 (expression -> expression DOT expression .)
    ENDTYPE         reduce using rule 90 (expression -> expression DOT expression .)
    ELSE            reduce using rule 90 (expression -> expression DOT expression .)
    ENDIF           reduce using rule 90 (expression -> expression DOT expression .)
    ENDFUNCTION     reduce using rule 90 (expression -> expression DOT expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression DOT expression .)
    NEXT            reduce using rule 90 (expression -> expression DOT expression .)
    THEN            reduce using rule 90 (expression -> expression DOT expression .)
    DO              reduce using rule 90 (expression -> expression DOT expression .)
    RIGHT_PAREN     reduce using rule 90 (expression -> expression DOT expression .)
    RIGHT_SQUARE    reduce using rule 90 (expression -> expression DOT expression .)
    TO              reduce using rule 90 (expression -> expression DOT expression .)
    COLON           reduce using rule 90 (expression -> expression DOT expression .)
    STEP            reduce using rule 90 (expression -> expression DOT expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! OR              [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 90 (expression -> expression DOT expression .) ]
  ! DOT             [ reduce using rule 90 (expression -> expression DOT expression .) ]


state 133

    (36) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 174
    COMMA           shift and go to state 126


state 134

    (18) statement -> IF expression THEN statements . ELSE statements ENDIF
    (19) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ELSE            shift and go to state 175
    ENDIF           shift and go to state 176
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 135

    (20) statement -> CASE OF ID cases . ENDCASE
    (22) cases -> cases . case
    (24) case -> . case_expression COLON statements SEMICOLON
    (25) case -> . otherwise_statement SEMICOLON
    (26) case_expression -> . expression TO expression
    (27) case_expression -> . expression
    (28) otherwise_statement -> . OTHERWISE COLON statements
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDCASE         shift and go to state 177
    OTHERWISE       shift and go to state 141
    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    case                           shift and go to state 178
    case_expression                shift and go to state 138
    otherwise_statement            shift and go to state 139
    expression                     shift and go to state 140

state 136

    (21) statement -> CASE OF ID LEFT_SQUARE . indexes RIGHT_SQUARE cases ENDCASE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    indexes                        shift and go to state 179
    expression                     shift and go to state 79

state 137

    (23) cases -> case .

    ENDCASE         reduce using rule 23 (cases -> case .)
    OTHERWISE       reduce using rule 23 (cases -> case .)
    ID              reduce using rule 23 (cases -> case .)
    NOT             reduce using rule 23 (cases -> case .)
    MINUS           reduce using rule 23 (cases -> case .)
    PLUS            reduce using rule 23 (cases -> case .)
    LEFT_PAREN      reduce using rule 23 (cases -> case .)
    BOOLEAN         reduce using rule 23 (cases -> case .)
    CHAR            reduce using rule 23 (cases -> case .)
    STRING          reduce using rule 23 (cases -> case .)
    REAL            reduce using rule 23 (cases -> case .)
    INTEGER         reduce using rule 23 (cases -> case .)


state 138

    (24) case -> case_expression . COLON statements SEMICOLON

    COLON           shift and go to state 180


state 139

    (25) case -> otherwise_statement . SEMICOLON

    SEMICOLON       shift and go to state 181


state 140

    (26) case_expression -> expression . TO expression
    (27) case_expression -> expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    TO              shift and go to state 182
    COLON           reduce using rule 27 (case_expression -> expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 141

    (28) otherwise_statement -> OTHERWISE . COLON statements

    COLON           shift and go to state 183


state 142

    (29) statement -> FOR ID ASSIGN expression . TO expression STEP expression statements NEXT ID
    (30) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    TO              shift and go to state 184
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 143

    (31) statement -> REPEAT statements UNTIL expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    PROCEDURE       reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    CALL            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    FUNCTION        reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    RETURN          reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    OPENFILE        reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    READFILE        reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    WRITEFILE       reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    CLOSEFILE       reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    SEEK            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    TYPE            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ENDPROCEDURE    reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ENDTYPE         reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    ENDFUNCTION     reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    SEMICOLON       reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 31 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 31 (statement -> REPEAT statements UNTIL expression .) ]
  ! PLUS            [ reduce using rule 31 (statement -> REPEAT statements UNTIL expression .) ]


state 144

    (32) statement -> WHILE expression DO statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDWHILE        shift and go to state 185
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 145

    (33) statement -> WHILE expression statements ENDWHILE .

    DECLARE         reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    PROCEDURE       reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    CALL            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    FUNCTION        reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    RETURN          reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    OPENFILE        reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    READFILE        reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    WRITEFILE       reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    CLOSEFILE       reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    SEEK            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    TYPE            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    MINUS           reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    PLUS            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ENDTYPE         reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    SEMICOLON       reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 33 (statement -> WHILE expression statements ENDWHILE .)


state 146

    (50) expression -> expression PLUS expression .
    (49) expression -> PLUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! reduce/reduce conflict for DOT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 49 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 49 (expression -> PLUS expression .)
    DO              reduce using rule 50 (expression -> expression PLUS expression .)
    STEP            reduce using rule 50 (expression -> expression PLUS expression .)
    DOT             reduce using rule 49 (expression -> PLUS expression .)
    OR              reduce using rule 49 (expression -> PLUS expression .)
    AND             reduce using rule 49 (expression -> PLUS expression .)
    EQUAL           reduce using rule 49 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> PLUS expression .)
    LESS            reduce using rule 49 (expression -> PLUS expression .)
    GREATER         reduce using rule 49 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 49 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 49 (expression -> PLUS expression .)
    MUL             reduce using rule 49 (expression -> PLUS expression .)
    DIV             reduce using rule 49 (expression -> PLUS expression .)
    PLUS            reduce using rule 49 (expression -> PLUS expression .)
    MINUS           reduce using rule 49 (expression -> PLUS expression .)
    CONNECT         reduce using rule 49 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 49 (expression -> PLUS expression .)
    DECLARE         reduce using rule 49 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 49 (expression -> PLUS expression .)
    ID              reduce using rule 49 (expression -> PLUS expression .)
    INPUT           reduce using rule 49 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 49 (expression -> PLUS expression .)
    IF              reduce using rule 49 (expression -> PLUS expression .)
    CASE            reduce using rule 49 (expression -> PLUS expression .)
    FOR             reduce using rule 49 (expression -> PLUS expression .)
    REPEAT          reduce using rule 49 (expression -> PLUS expression .)
    WHILE           reduce using rule 49 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 49 (expression -> PLUS expression .)
    CALL            reduce using rule 49 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 49 (expression -> PLUS expression .)
    RETURN          reduce using rule 49 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 49 (expression -> PLUS expression .)
    READFILE        reduce using rule 49 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 49 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 49 (expression -> PLUS expression .)
    SEEK            reduce using rule 49 (expression -> PLUS expression .)
    TYPE            reduce using rule 49 (expression -> PLUS expression .)
    NOT             reduce using rule 49 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 49 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 49 (expression -> PLUS expression .)
    CHAR            reduce using rule 49 (expression -> PLUS expression .)
    STRING          reduce using rule 49 (expression -> PLUS expression .)
    REAL            reduce using rule 49 (expression -> PLUS expression .)
    INTEGER         reduce using rule 49 (expression -> PLUS expression .)
    NEXT            reduce using rule 49 (expression -> PLUS expression .)

  ! OR              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CONNECT         [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! DECLARE         [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CONSTANT        [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! ID              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! INPUT           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! OUTPUT          [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! IF              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CASE            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! FOR             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! REPEAT          [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! WHILE           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! PROCEDURE       [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CALL            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! FUNCTION        [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! RETURN          [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! OPENFILE        [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! READFILE        [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! WRITEFILE       [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! SEEK            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! TYPE            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! BOOLEAN         [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! CHAR            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! STRING          [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! REAL            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! INTEGER         [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 147

    (51) expression -> expression MINUS expression .
    (48) expression -> MINUS expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! reduce/reduce conflict for DOT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 48 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 48 (expression -> MINUS expression .)
    DO              reduce using rule 51 (expression -> expression MINUS expression .)
    STEP            reduce using rule 51 (expression -> expression MINUS expression .)
    DOT             reduce using rule 48 (expression -> MINUS expression .)
    OR              reduce using rule 48 (expression -> MINUS expression .)
    AND             reduce using rule 48 (expression -> MINUS expression .)
    EQUAL           reduce using rule 48 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> MINUS expression .)
    LESS            reduce using rule 48 (expression -> MINUS expression .)
    GREATER         reduce using rule 48 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> MINUS expression .)
    MUL             reduce using rule 48 (expression -> MINUS expression .)
    DIV             reduce using rule 48 (expression -> MINUS expression .)
    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    CONNECT         reduce using rule 48 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 48 (expression -> MINUS expression .)
    DECLARE         reduce using rule 48 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 48 (expression -> MINUS expression .)
    ID              reduce using rule 48 (expression -> MINUS expression .)
    INPUT           reduce using rule 48 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 48 (expression -> MINUS expression .)
    IF              reduce using rule 48 (expression -> MINUS expression .)
    CASE            reduce using rule 48 (expression -> MINUS expression .)
    FOR             reduce using rule 48 (expression -> MINUS expression .)
    REPEAT          reduce using rule 48 (expression -> MINUS expression .)
    WHILE           reduce using rule 48 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 48 (expression -> MINUS expression .)
    CALL            reduce using rule 48 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 48 (expression -> MINUS expression .)
    RETURN          reduce using rule 48 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 48 (expression -> MINUS expression .)
    READFILE        reduce using rule 48 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 48 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 48 (expression -> MINUS expression .)
    SEEK            reduce using rule 48 (expression -> MINUS expression .)
    TYPE            reduce using rule 48 (expression -> MINUS expression .)
    NOT             reduce using rule 48 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 48 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 48 (expression -> MINUS expression .)
    CHAR            reduce using rule 48 (expression -> MINUS expression .)
    STRING          reduce using rule 48 (expression -> MINUS expression .)
    REAL            reduce using rule 48 (expression -> MINUS expression .)
    INTEGER         reduce using rule 48 (expression -> MINUS expression .)
    NEXT            reduce using rule 48 (expression -> MINUS expression .)

  ! OR              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CONNECT         [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! DECLARE         [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CONSTANT        [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! ID              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! INPUT           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! OUTPUT          [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! FOR             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! REPEAT          [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! PROCEDURE       [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CALL            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! FUNCTION        [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! RETURN          [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! OPENFILE        [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! READFILE        [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! WRITEFILE       [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! SEEK            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! TYPE            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! BOOLEAN         [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! CHAR            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! EQUAL           [ shift and go to state 42 ]
  ! NOT_EQUAL       [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! MUL             [ shift and go to state 48 ]
  ! DIV             [ shift and go to state 49 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! CONNECT         [ shift and go to state 52 ]
  ! DOT             [ shift and go to state 101 ]


state 148

    (35) expression -> ID .
    (36) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (77) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> ID . LEFT_PAREN RIGHT_PAREN
    (61) declare_parameter -> ID . COLON ID
    (62) declare_parameter -> ID . COLON ARRAY

    RIGHT_PAREN     reduce using rule 35 (expression -> ID .)
    OR              reduce using rule 35 (expression -> ID .)
    AND             reduce using rule 35 (expression -> ID .)
    EQUAL           reduce using rule 35 (expression -> ID .)
    NOT_EQUAL       reduce using rule 35 (expression -> ID .)
    LESS            reduce using rule 35 (expression -> ID .)
    GREATER         reduce using rule 35 (expression -> ID .)
    LESS_EQUAL      reduce using rule 35 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 35 (expression -> ID .)
    MUL             reduce using rule 35 (expression -> ID .)
    DIV             reduce using rule 35 (expression -> ID .)
    PLUS            reduce using rule 35 (expression -> ID .)
    MINUS           reduce using rule 35 (expression -> ID .)
    CONNECT         reduce using rule 35 (expression -> ID .)
    DOT             reduce using rule 35 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 102
    LEFT_PAREN      shift and go to state 37
    COLON           shift and go to state 186


state 149

    (69) statement -> PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (59) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 187
    COMMA           shift and go to state 188


state 150

    (60) declare_parameters -> declare_parameter .

    RIGHT_PAREN     reduce using rule 60 (declare_parameters -> declare_parameter .)
    COMMA           reduce using rule 60 (declare_parameters -> declare_parameter .)


state 151

    (63) declare_parameter -> BYREF . ID COLON ID
    (64) declare_parameter -> BYREF . ID COLON ARRAY

    ID              shift and go to state 189


state 152

    (65) declare_parameter -> BYVAL . ID COLON ID
    (66) declare_parameter -> BYVAL . ID COLON ARRAY

    ID              shift and go to state 190


state 153

    (70) statement -> PROCEDURE ID statements ENDPROCEDURE .

    DECLARE         reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ID              reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INPUT           reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IF              reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CASE            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FOR             reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REPEAT          reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WHILE           reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CALL            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    RETURN          reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    READFILE        reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEEK            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    TYPE            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NOT             reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    MINUS           reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PLUS            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CHAR            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    STRING          reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REAL            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INTEGER         reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    $end            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    UNTIL           reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ELSE            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDIF           reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NEXT            reduce using rule 70 (statement -> PROCEDURE ID statements ENDPROCEDURE .)


state 154

    (71) statement -> CALL ID LEFT_PAREN parameters . RIGHT_PAREN
    (67) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 191
    COMMA           shift and go to state 128


state 155

    (61) declare_parameter -> ID . COLON ID
    (62) declare_parameter -> ID . COLON ARRAY

    COLON           shift and go to state 186


state 156

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (59) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 192
    COMMA           shift and go to state 188


state 157

    (75) statement -> FUNCTION ID RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 193
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 158

    (76) statement -> FUNCTION ID RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 194
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 159

    (80) statement -> OPENFILE expression FOR READ .

    DECLARE         reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    CONSTANT        reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ID              reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    INPUT           reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    OUTPUT          reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    IF              reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    CASE            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    FOR             reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    REPEAT          reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    WHILE           reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    PROCEDURE       reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    CALL            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    FUNCTION        reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    RETURN          reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    OPENFILE        reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    READFILE        reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    WRITEFILE       reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    CLOSEFILE       reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    SEEK            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    TYPE            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    NOT             reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    MINUS           reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    PLUS            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    LEFT_PAREN      reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    BOOLEAN         reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    CHAR            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    STRING          reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    REAL            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    INTEGER         reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    $end            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    UNTIL           reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ENDWHILE        reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ENDPROCEDURE    reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ENDTYPE         reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ELSE            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ENDIF           reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    ENDFUNCTION     reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    SEMICOLON       reduce using rule 80 (statement -> OPENFILE expression FOR READ .)
    NEXT            reduce using rule 80 (statement -> OPENFILE expression FOR READ .)


state 160

    (81) statement -> OPENFILE expression FOR WRITE .

    DECLARE         reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    CONSTANT        reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ID              reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    INPUT           reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    OUTPUT          reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    IF              reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    CASE            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    FOR             reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    REPEAT          reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    WHILE           reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    PROCEDURE       reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    CALL            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    FUNCTION        reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    RETURN          reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    OPENFILE        reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    READFILE        reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    WRITEFILE       reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    CLOSEFILE       reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    SEEK            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    TYPE            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    NOT             reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    MINUS           reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    PLUS            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_PAREN      reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    BOOLEAN         reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    CHAR            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    STRING          reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    REAL            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    INTEGER         reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    $end            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    UNTIL           reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ENDWHILE        reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ENDPROCEDURE    reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ENDTYPE         reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ELSE            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ENDIF           reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    ENDFUNCTION     reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    SEMICOLON       reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)
    NEXT            reduce using rule 81 (statement -> OPENFILE expression FOR WRITE .)


state 161

    (82) statement -> OPENFILE expression FOR APPEND .

    DECLARE         reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    CONSTANT        reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ID              reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    INPUT           reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    OUTPUT          reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    IF              reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    CASE            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    FOR             reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    REPEAT          reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    WHILE           reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    PROCEDURE       reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    CALL            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    FUNCTION        reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    RETURN          reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    OPENFILE        reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    READFILE        reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    WRITEFILE       reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    CLOSEFILE       reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    SEEK            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    TYPE            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    NOT             reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    MINUS           reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    PLUS            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_PAREN      reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    BOOLEAN         reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    CHAR            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    STRING          reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    REAL            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    INTEGER         reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    $end            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    UNTIL           reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ENDWHILE        reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ENDPROCEDURE    reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ENDTYPE         reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ELSE            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ENDIF           reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    ENDFUNCTION     reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    SEMICOLON       reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)
    NEXT            reduce using rule 82 (statement -> OPENFILE expression FOR APPEND .)


state 162

    (83) statement -> OPENFILE expression FOR RANDOM .

    DECLARE         reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    CONSTANT        reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ID              reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    INPUT           reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    OUTPUT          reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    IF              reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    CASE            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    FOR             reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    REPEAT          reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    WHILE           reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    PROCEDURE       reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    CALL            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    FUNCTION        reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    RETURN          reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    OPENFILE        reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    READFILE        reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    WRITEFILE       reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    CLOSEFILE       reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    SEEK            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    TYPE            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    NOT             reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    MINUS           reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    PLUS            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_PAREN      reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    BOOLEAN         reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    CHAR            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    STRING          reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    REAL            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    INTEGER         reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    $end            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    UNTIL           reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ENDWHILE        reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ENDPROCEDURE    reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ENDTYPE         reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ELSE            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ENDIF           reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    ENDFUNCTION     reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    SEMICOLON       reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)
    NEXT            reduce using rule 83 (statement -> OPENFILE expression FOR RANDOM .)


state 163

    (84) statement -> READFILE expression COMMA ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> READFILE expression COMMA ID .

    LEFT_SQUARE     shift and go to state 195
    DECLARE         reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    CONSTANT        reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ID              reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    INPUT           reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    OUTPUT          reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    IF              reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    CASE            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    FOR             reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    REPEAT          reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    WHILE           reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    PROCEDURE       reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    CALL            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    FUNCTION        reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    RETURN          reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    OPENFILE        reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    READFILE        reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    WRITEFILE       reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    CLOSEFILE       reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    SEEK            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    TYPE            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    NOT             reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    MINUS           reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    PLUS            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    LEFT_PAREN      reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    BOOLEAN         reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    CHAR            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    STRING          reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    REAL            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    INTEGER         reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    $end            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    UNTIL           reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ENDWHILE        reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ENDPROCEDURE    reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ENDTYPE         reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ELSE            reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ENDIF           reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    ENDFUNCTION     reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    SEMICOLON       reduce using rule 85 (statement -> READFILE expression COMMA ID .)
    NEXT            reduce using rule 85 (statement -> READFILE expression COMMA ID .)


state 164

    (86) statement -> WRITEFILE expression COMMA expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    CONSTANT        reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ID              reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    INPUT           reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    OUTPUT          reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    IF              reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    CASE            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    FOR             reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    REPEAT          reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    WHILE           reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    PROCEDURE       reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    CALL            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    FUNCTION        reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    RETURN          reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    OPENFILE        reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    READFILE        reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    WRITEFILE       reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    CLOSEFILE       reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    SEEK            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    TYPE            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    NOT             reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_PAREN      reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    BOOLEAN         reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    CHAR            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    STRING          reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    REAL            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    INTEGER         reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    $end            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    UNTIL           reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ENDWHILE        reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ENDTYPE         reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ELSE            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ENDIF           reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    ENDFUNCTION     reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    SEMICOLON       reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    NEXT            reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 86 (statement -> WRITEFILE expression COMMA expression .) ]


state 165

    (88) statement -> SEEK expression COMMA expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    CONSTANT        reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ID              reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    INPUT           reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    OUTPUT          reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    IF              reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    CASE            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    FOR             reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    REPEAT          reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    WHILE           reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    PROCEDURE       reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    CALL            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    FUNCTION        reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    RETURN          reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    OPENFILE        reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    READFILE        reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    WRITEFILE       reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    CLOSEFILE       reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    SEEK            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    TYPE            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    NOT             reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    LEFT_PAREN      reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    BOOLEAN         reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    CHAR            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    STRING          reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    REAL            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    INTEGER         reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    $end            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    UNTIL           reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ENDWHILE        reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ENDTYPE         reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ELSE            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ENDIF           reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    ENDFUNCTION     reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    SEMICOLON       reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    NEXT            reduce using rule 88 (statement -> SEEK expression COMMA expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 88 (statement -> SEEK expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 88 (statement -> SEEK expression COMMA expression .) ]


state 166

    (89) statement -> TYPE ID statements ENDTYPE .

    DECLARE         reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    CONSTANT        reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ID              reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    INPUT           reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    OUTPUT          reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    IF              reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    CASE            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    FOR             reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    REPEAT          reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    WHILE           reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    PROCEDURE       reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    CALL            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    FUNCTION        reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    RETURN          reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    OPENFILE        reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    READFILE        reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    WRITEFILE       reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    CLOSEFILE       reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    SEEK            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    TYPE            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    NOT             reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    MINUS           reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    PLUS            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_PAREN      reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    BOOLEAN         reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    CHAR            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    STRING          reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    REAL            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    INTEGER         reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    $end            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    UNTIL           reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ENDWHILE        reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ENDPROCEDURE    reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ENDTYPE         reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ELSE            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ENDIF           reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    ENDFUNCTION     reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    SEMICOLON       reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)
    NEXT            reduce using rule 89 (statement -> TYPE ID statements ENDTYPE .)


state 167

    (92) statement -> TYPE ID EQUAL LEFT_PAREN . enumerate_items RIGHT_PAREN
    (93) enumerate_items -> . enumerate_items COMMA ID
    (94) enumerate_items -> . ID

    ID              shift and go to state 196

    enumerate_items                shift and go to state 197

state 168

    (95) statement -> TYPE ID EQUAL POINTER . ID

    ID              shift and go to state 198


state 169

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (6) dimensions -> . dimensions COMMA dimension
    (7) dimensions -> . dimension
    (8) dimension -> . expression COLON expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    dimensions                     shift and go to state 199
    dimension                      shift and go to state 200
    expression                     shift and go to state 201

state 170

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 202

state 171

    (11) indexes -> indexes COMMA expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 11 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 11 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 172

    (67) parameters -> parameters COMMA expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 67 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 67 (parameters -> parameters COMMA expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 173

    (14) statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DECLARE         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 174

    (36) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    OR              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DOT             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DO              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STEP            reduce using rule 36 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 175

    (18) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 203
    statement                      shift and go to state 2

state 176

    (19) statement -> IF expression THEN statements ENDIF .

    DECLARE         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    PROCEDURE       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CALL            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    FUNCTION        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    RETURN          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    OPENFILE        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    READFILE        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    WRITEFILE       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CLOSEFILE       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    SEEK            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    TYPE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    MINUS           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    PLUS            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDPROCEDURE    reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDTYPE         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDFUNCTION     reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    SEMICOLON       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)


state 177

    (20) statement -> CASE OF ID cases ENDCASE .

    DECLARE         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    PROCEDURE       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CALL            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    FUNCTION        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    RETURN          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    OPENFILE        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    READFILE        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    WRITEFILE       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CLOSEFILE       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    SEEK            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    TYPE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    MINUS           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    PLUS            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_PAREN      reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    BOOLEAN         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDTYPE         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDFUNCTION     reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    SEMICOLON       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)


state 178

    (22) cases -> cases case .

    ENDCASE         reduce using rule 22 (cases -> cases case .)
    OTHERWISE       reduce using rule 22 (cases -> cases case .)
    ID              reduce using rule 22 (cases -> cases case .)
    NOT             reduce using rule 22 (cases -> cases case .)
    MINUS           reduce using rule 22 (cases -> cases case .)
    PLUS            reduce using rule 22 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 22 (cases -> cases case .)
    BOOLEAN         reduce using rule 22 (cases -> cases case .)
    CHAR            reduce using rule 22 (cases -> cases case .)
    STRING          reduce using rule 22 (cases -> cases case .)
    REAL            reduce using rule 22 (cases -> cases case .)
    INTEGER         reduce using rule 22 (cases -> cases case .)


state 179

    (21) statement -> CASE OF ID LEFT_SQUARE indexes . RIGHT_SQUARE cases ENDCASE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 204
    COMMA           shift and go to state 126


state 180

    (24) case -> case_expression COLON . statements SEMICOLON
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 205
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 181

    (25) case -> otherwise_statement SEMICOLON .

    ENDCASE         reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    OTHERWISE       reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    ID              reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    NOT             reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    MINUS           reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    PLUS            reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    LEFT_PAREN      reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    BOOLEAN         reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    CHAR            reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    STRING          reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    REAL            reduce using rule 25 (case -> otherwise_statement SEMICOLON .)
    INTEGER         reduce using rule 25 (case -> otherwise_statement SEMICOLON .)


state 182

    (26) case_expression -> expression TO . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 206

state 183

    (28) otherwise_statement -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 207
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 184

    (29) statement -> FOR ID ASSIGN expression TO . expression STEP expression statements NEXT ID
    (30) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 208

state 185

    (32) statement -> WHILE expression DO statements ENDWHILE .

    DECLARE         reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    CONSTANT        reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ID              reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    INPUT           reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    OUTPUT          reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    IF              reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    CASE            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    FOR             reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    REPEAT          reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    WHILE           reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    PROCEDURE       reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    CALL            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    FUNCTION        reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    RETURN          reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    OPENFILE        reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    READFILE        reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    WRITEFILE       reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    CLOSEFILE       reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    SEEK            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    TYPE            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    NOT             reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    MINUS           reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    PLUS            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    BOOLEAN         reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    CHAR            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    STRING          reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    REAL            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    INTEGER         reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    $end            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    UNTIL           reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDWHILE        reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDTYPE         reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ELSE            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDIF           reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    SEMICOLON       reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)
    NEXT            reduce using rule 32 (statement -> WHILE expression DO statements ENDWHILE .)


state 186

    (61) declare_parameter -> ID COLON . ID
    (62) declare_parameter -> ID COLON . ARRAY

    ID              shift and go to state 209
    ARRAY           shift and go to state 210


state 187

    (69) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 211
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 188

    (59) declare_parameters -> declare_parameters COMMA . declare_parameter
    (61) declare_parameter -> . ID COLON ID
    (62) declare_parameter -> . ID COLON ARRAY
    (63) declare_parameter -> . BYREF ID COLON ID
    (64) declare_parameter -> . BYREF ID COLON ARRAY
    (65) declare_parameter -> . BYVAL ID COLON ID
    (66) declare_parameter -> . BYVAL ID COLON ARRAY

    ID              shift and go to state 155
    BYREF           shift and go to state 151
    BYVAL           shift and go to state 152

    declare_parameter              shift and go to state 212

state 189

    (63) declare_parameter -> BYREF ID . COLON ID
    (64) declare_parameter -> BYREF ID . COLON ARRAY

    COLON           shift and go to state 213


state 190

    (65) declare_parameter -> BYVAL ID . COLON ID
    (66) declare_parameter -> BYVAL ID . COLON ARRAY

    COLON           shift and go to state 214


state 191

    (71) statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .

    DECLARE         reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 71 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)


state 192

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION

    RETURNS         shift and go to state 215


state 193

    (75) statement -> FUNCTION ID RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 216
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 194

    (76) statement -> FUNCTION ID RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 217
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 195

    (84) statement -> READFILE expression COMMA ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 79
    indexes                        shift and go to state 218

state 196

    (94) enumerate_items -> ID .

    RIGHT_PAREN     reduce using rule 94 (enumerate_items -> ID .)
    COMMA           reduce using rule 94 (enumerate_items -> ID .)


state 197

    (92) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items . RIGHT_PAREN
    (93) enumerate_items -> enumerate_items . COMMA ID

    RIGHT_PAREN     shift and go to state 219
    COMMA           shift and go to state 220


state 198

    (95) statement -> TYPE ID EQUAL POINTER ID .

    DECLARE         reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    CONSTANT        reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ID              reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    INPUT           reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    OUTPUT          reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    IF              reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    CASE            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    FOR             reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    REPEAT          reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    WHILE           reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    PROCEDURE       reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    CALL            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    FUNCTION        reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    RETURN          reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    OPENFILE        reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    READFILE        reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    WRITEFILE       reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    CLOSEFILE       reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    SEEK            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    TYPE            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    NOT             reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    MINUS           reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    PLUS            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_PAREN      reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    BOOLEAN         reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    CHAR            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    STRING          reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    REAL            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    INTEGER         reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    $end            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    UNTIL           reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDWHILE        reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDPROCEDURE    reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDTYPE         reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ELSE            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDIF           reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDFUNCTION     reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    SEMICOLON       reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)
    NEXT            reduce using rule 95 (statement -> TYPE ID EQUAL POINTER ID .)


state 199

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (6) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 221
    COMMA           shift and go to state 222


state 200

    (7) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimension .)


state 201

    (8) dimension -> expression . COLON expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    COLON           shift and go to state 223
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 202

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CONSTANT        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ID              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INPUT           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OUTPUT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IF              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CASE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FOR             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REPEAT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WHILE           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PROCEDURE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CALL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FUNCTION        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    RETURN          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OPENFILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    READFILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WRITEFILE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CLOSEFILE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    SEEK            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    TYPE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NOT             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    LEFT_PAREN      reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    BOOLEAN         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CHAR            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    STRING          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REAL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INTEGER         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    $end            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    UNTIL           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDWHILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDTYPE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ELSE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDIF           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDFUNCTION     reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    SEMICOLON       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NEXT            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101

  ! MINUS           [ reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]


state 203

    (18) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDIF           shift and go to state 224
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 204

    (21) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE . cases ENDCASE
    (22) cases -> . cases case
    (23) cases -> . case
    (24) case -> . case_expression COLON statements SEMICOLON
    (25) case -> . otherwise_statement SEMICOLON
    (26) case_expression -> . expression TO expression
    (27) case_expression -> . expression
    (28) otherwise_statement -> . OTHERWISE COLON statements
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    OTHERWISE       shift and go to state 141
    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    cases                          shift and go to state 225
    case                           shift and go to state 137
    case_expression                shift and go to state 138
    otherwise_statement            shift and go to state 139
    expression                     shift and go to state 140

state 205

    (24) case -> case_expression COLON statements . SEMICOLON
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    SEMICOLON       shift and go to state 226
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 206

    (26) case_expression -> expression TO expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    COLON           reduce using rule 26 (case_expression -> expression TO expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 207

    (28) otherwise_statement -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    SEMICOLON       reduce using rule 28 (otherwise_statement -> OTHERWISE COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 208

    (29) statement -> FOR ID ASSIGN expression TO expression . STEP expression statements NEXT ID
    (30) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    STEP            shift and go to state 227
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 228
    statement                      shift and go to state 2

state 209

    (61) declare_parameter -> ID COLON ID .

    RIGHT_PAREN     reduce using rule 61 (declare_parameter -> ID COLON ID .)
    COMMA           reduce using rule 61 (declare_parameter -> ID COLON ID .)


state 210

    (62) declare_parameter -> ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 62 (declare_parameter -> ID COLON ARRAY .)
    COMMA           reduce using rule 62 (declare_parameter -> ID COLON ARRAY .)


state 211

    (69) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDPROCEDURE    shift and go to state 229
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 212

    (59) declare_parameters -> declare_parameters COMMA declare_parameter .

    RIGHT_PAREN     reduce using rule 59 (declare_parameters -> declare_parameters COMMA declare_parameter .)
    COMMA           reduce using rule 59 (declare_parameters -> declare_parameters COMMA declare_parameter .)


state 213

    (63) declare_parameter -> BYREF ID COLON . ID
    (64) declare_parameter -> BYREF ID COLON . ARRAY

    ID              shift and go to state 230
    ARRAY           shift and go to state 231


state 214

    (65) declare_parameter -> BYVAL ID COLON . ID
    (66) declare_parameter -> BYVAL ID COLON . ARRAY

    ID              shift and go to state 232
    ARRAY           shift and go to state 233


state 215

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 234
    ARRAY           shift and go to state 235


state 216

    (75) statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .

    DECLARE         reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 75 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)


state 217

    (76) statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .

    DECLARE         reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 76 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)


state 218

    (84) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 236
    COMMA           shift and go to state 126


state 219

    (92) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .

    DECLARE         reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CONSTANT        reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ID              reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INPUT           reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OUTPUT          reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IF              reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CASE            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FOR             reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REPEAT          reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WHILE           reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PROCEDURE       reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CALL            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FUNCTION        reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    RETURN          reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OPENFILE        reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    READFILE        reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WRITEFILE       reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEEK            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    TYPE            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NOT             reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    MINUS           reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PLUS            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    BOOLEAN         reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CHAR            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    STRING          reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REAL            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INTEGER         reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    $end            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    UNTIL           reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDWHILE        reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDTYPE         reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ELSE            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDIF           reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEMICOLON       reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEXT            reduce using rule 92 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)


state 220

    (93) enumerate_items -> enumerate_items COMMA . ID

    ID              shift and go to state 237


state 221

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 238


state 222

    (6) dimensions -> dimensions COMMA . dimension
    (8) dimension -> . expression COLON expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    dimension                      shift and go to state 239
    expression                     shift and go to state 201

state 223

    (8) dimension -> expression COLON . expression
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 240

state 224

    (18) statement -> IF expression THEN statements ELSE statements ENDIF .

    DECLARE         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PROCEDURE       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CALL            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FUNCTION        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    RETURN          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OPENFILE        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    READFILE        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WRITEFILE       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLOSEFILE       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEEK            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    TYPE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MINUS           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PLUS            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDPROCEDURE    reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDTYPE         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDFUNCTION     reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEMICOLON       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 225

    (21) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases . ENDCASE
    (22) cases -> cases . case
    (24) case -> . case_expression COLON statements SEMICOLON
    (25) case -> . otherwise_statement SEMICOLON
    (26) case_expression -> . expression TO expression
    (27) case_expression -> . expression
    (28) otherwise_statement -> . OTHERWISE COLON statements
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDCASE         shift and go to state 241
    OTHERWISE       shift and go to state 141
    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    case                           shift and go to state 178
    case_expression                shift and go to state 138
    otherwise_statement            shift and go to state 139
    expression                     shift and go to state 140

state 226

    (24) case -> case_expression COLON statements SEMICOLON .

    ENDCASE         reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    OTHERWISE       reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    ID              reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    NOT             reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    MINUS           reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    PLUS            reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_PAREN      reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    BOOLEAN         reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    CHAR            reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    STRING          reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    REAL            reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)
    INTEGER         reduce using rule 24 (case -> case_expression COLON statements SEMICOLON .)


state 227

    (29) statement -> FOR ID ASSIGN expression TO expression STEP . expression statements NEXT ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ID              shift and go to state 56
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 242

state 228

    (30) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    NEXT            shift and go to state 243
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 229

    (69) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DECLARE         reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 69 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 230

    (63) declare_parameter -> BYREF ID COLON ID .

    RIGHT_PAREN     reduce using rule 63 (declare_parameter -> BYREF ID COLON ID .)
    COMMA           reduce using rule 63 (declare_parameter -> BYREF ID COLON ID .)


state 231

    (64) declare_parameter -> BYREF ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 64 (declare_parameter -> BYREF ID COLON ARRAY .)
    COMMA           reduce using rule 64 (declare_parameter -> BYREF ID COLON ARRAY .)


state 232

    (65) declare_parameter -> BYVAL ID COLON ID .

    RIGHT_PAREN     reduce using rule 65 (declare_parameter -> BYVAL ID COLON ID .)
    COMMA           reduce using rule 65 (declare_parameter -> BYVAL ID COLON ID .)


state 233

    (66) declare_parameter -> BYVAL ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 66 (declare_parameter -> BYVAL ID COLON ARRAY .)
    COMMA           reduce using rule 66 (declare_parameter -> BYVAL ID COLON ARRAY .)


state 234

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 244
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 235

    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statements                     shift and go to state 245
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 236

    (84) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DECLARE         reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 84 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 237

    (93) enumerate_items -> enumerate_items COMMA ID .

    RIGHT_PAREN     reduce using rule 93 (enumerate_items -> enumerate_items COMMA ID .)
    COMMA           reduce using rule 93 (enumerate_items -> enumerate_items COMMA ID .)


state 238

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 246


state 239

    (6) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 6 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 6 (dimensions -> dimensions COMMA dimension .)


state 240

    (8) dimension -> expression COLON expression .
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 8 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 8 (dimension -> expression COLON expression .)
    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101


state 241

    (21) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .

    DECLARE         reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CONSTANT        reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ID              reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INPUT           reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OUTPUT          reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    IF              reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CASE            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FOR             reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REPEAT          reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WHILE           reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PROCEDURE       reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CALL            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FUNCTION        reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    RETURN          reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OPENFILE        reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    READFILE        reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WRITEFILE       reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CLOSEFILE       reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEEK            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    TYPE            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NOT             reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    MINUS           reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PLUS            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    LEFT_PAREN      reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    BOOLEAN         reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CHAR            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    STRING          reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REAL            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INTEGER         reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    $end            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    UNTIL           reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDWHILE        reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDTYPE         reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ELSE            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDIF           reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDFUNCTION     reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEMICOLON       reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NEXT            reduce using rule 21 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)


state 242

    (29) statement -> FOR ID ASSIGN expression TO expression STEP expression . statements NEXT ID
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (40) expression -> expression . EQUAL expression
    (41) expression -> expression . NOT_EQUAL expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . MUL expression
    (47) expression -> expression . DIV expression
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . CONNECT expression
    (90) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    OR              shift and go to state 40
    AND             shift and go to state 41
    EQUAL           shift and go to state 42
    NOT_EQUAL       shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    MUL             shift and go to state 48
    DIV             shift and go to state 49
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    CONNECT         shift and go to state 52
    DOT             shift and go to state 101
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statements                     shift and go to state 247
    statement                      shift and go to state 2

state 243

    (30) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 248


state 244

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 249
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 245

    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    ENDFUNCTION     shift and go to state 250
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    statement                      shift and go to state 33
    expression                     shift and go to state 6

state 246

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DECLARE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 247

    (29) statement -> FOR ID ASSIGN expression TO expression STEP expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (21) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (29) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (30) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (31) statement -> . REPEAT statements UNTIL expression
    (32) statement -> . WHILE expression DO statements ENDWHILE
    (33) statement -> . WHILE expression statements ENDWHILE
    (34) statement -> . expression
    (69) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (70) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (71) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (72) statement -> . CALL ID
    (73) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (74) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (75) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (76) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (79) statement -> . RETURN expression
    (80) statement -> . OPENFILE expression FOR READ
    (81) statement -> . OPENFILE expression FOR WRITE
    (82) statement -> . OPENFILE expression FOR APPEND
    (83) statement -> . OPENFILE expression FOR RANDOM
    (84) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (85) statement -> . READFILE expression COMMA ID
    (86) statement -> . WRITEFILE expression COMMA expression
    (87) statement -> . CLOSEFILE expression
    (88) statement -> . SEEK expression COMMA expression
    (89) statement -> . TYPE ID statements ENDTYPE
    (91) statement -> . expression DOT statement
    (92) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (95) statement -> . TYPE ID EQUAL POINTER ID
    (35) expression -> . ID
    (36) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . NOT expression
    (40) expression -> . expression EQUAL expression
    (41) expression -> . expression NOT_EQUAL expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression MUL expression
    (47) expression -> . expression DIV expression
    (48) expression -> . MINUS expression
    (49) expression -> . PLUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression CONNECT expression
    (53) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (54) expression -> . BOOLEAN
    (55) expression -> . CHAR
    (56) expression -> . STRING
    (57) expression -> . REAL
    (58) expression -> . INTEGER
    (77) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (78) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (90) expression -> . expression DOT expression

    NEXT            shift and go to state 251
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    OPENFILE        shift and go to state 19
    READFILE        shift and go to state 20
    WRITEFILE       shift and go to state 21
    CLOSEFILE       shift and go to state 22
    SEEK            shift and go to state 23
    TYPE            shift and go to state 24
    NOT             shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32

    expression                     shift and go to state 6
    statement                      shift and go to state 33

state 248

    (30) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DECLARE         reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PROCEDURE       reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CALL            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FUNCTION        reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    RETURN          reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OPENFILE        reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    READFILE        reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WRITEFILE       reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEEK            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    TYPE            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MINUS           reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PLUS            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDTYPE         reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEMICOLON       reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 30 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)


state 249

    (73) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DECLARE         reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 73 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 250

    (74) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DECLARE         reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 74 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 251

    (29) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT . ID

    ID              shift and go to state 252


state 252

    (29) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .

    DECLARE         reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CONSTANT        reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ID              reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INPUT           reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OUTPUT          reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IF              reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CASE            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FOR             reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REPEAT          reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WHILE           reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PROCEDURE       reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CALL            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FUNCTION        reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    RETURN          reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OPENFILE        reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    READFILE        reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WRITEFILE       reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEEK            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    TYPE            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NOT             reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    MINUS           reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PLUS            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    BOOLEAN         reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CHAR            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    STRING          reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REAL            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INTEGER         reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    $end            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    UNTIL           reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDWHILE        reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDTYPE         reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ELSE            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDIF           reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEMICOLON       reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEXT            reduce using rule 29 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_PAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for DOT in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for MUL in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for MUL in state 98 resolved as shift
WARNING: shift/reduce conflict for DIV in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 98 resolved as shift
WARNING: shift/reduce conflict for DOT in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for LESS in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 132 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for MUL in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 132 resolved as shift
WARNING: shift/reduce conflict for DOT in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 164 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 202 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 202 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression DOT expression) in state 84
WARNING: reduce/reduce conflict in state 146 resolved using rule (expression -> PLUS expression)
WARNING: rejected rule (expression -> expression PLUS expression) in state 146
WARNING: reduce/reduce conflict in state 147 resolved using rule (expression -> MINUS expression)
WARNING: rejected rule (expression -> expression MINUS expression) in state 147
