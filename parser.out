Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DOT
    ENDTYPE
    INHERITS
    LEFT_BRACE
    NEW
    POINTER
    PRIVATE
    PUBLIC
    RIGHT_BRACE
    TYPE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DECLARE ID COLON ID
Rule 4     statement -> CONSTANT ID EQUAL expression
Rule 5     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 6     dimensions -> dimensions COMMA dimension
Rule 7     dimensions -> dimension
Rule 8     dimension -> expression COLON expression
Rule 9     statement -> ID ASSIGN expression
Rule 10    statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
Rule 11    indexes -> indexes COMMA expression
Rule 12    indexes -> expression
Rule 13    statement -> INPUT ID
Rule 14    statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 15    statement -> OUTPUT output_expression
Rule 16    output_expression -> output_expression COMMA expression
Rule 17    output_expression -> expression
Rule 18    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 19    statement -> IF expression THEN statements ENDIF
Rule 20    statement -> CASE OF ID cases ENDCASE
Rule 21    cases -> cases case
Rule 22    cases -> case
Rule 23    case -> case_expression COLON statements SEMICOLON
Rule 24    case -> otherwise_statement SEMICOLON
Rule 25    case_expression -> expression TO expression
Rule 26    case_expression -> expression
Rule 27    otherwise_statement -> OTHERWISE COLON statements
Rule 28    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 29    statement -> REPEAT statements UNTIL expression
Rule 30    statement -> WHILE expression statements ENDWHILE
Rule 31    statement -> expression
Rule 32    expression -> ID
Rule 33    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 34    expression -> expression OR expression
Rule 35    expression -> expression AND expression
Rule 36    expression -> NOT expression
Rule 37    expression -> expression EQUAL expression
Rule 38    expression -> expression NOT_EQUAL expression
Rule 39    expression -> expression LESS expression
Rule 40    expression -> expression GREATER expression
Rule 41    expression -> expression LESS_EQUAL expression
Rule 42    expression -> expression GREATER_EQUAL expression
Rule 43    expression -> expression MUL expression
Rule 44    expression -> expression DIV expression
Rule 45    expression -> MINUS expression
Rule 46    expression -> PLUS expression
Rule 47    expression -> expression PLUS expression
Rule 48    expression -> expression MINUS expression
Rule 49    expression -> expression CONNECT expression
Rule 50    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 51    expression -> BOOLEAN
Rule 52    expression -> CHAR
Rule 53    expression -> STRING
Rule 54    expression -> REAL
Rule 55    expression -> INTEGER
Rule 56    declare_parameters -> declare_parameters COMMA declare_parameter
Rule 57    declare_parameters -> declare_parameter
Rule 58    declare_parameter -> ID COLON ID
Rule 59    declare_parameter -> ID COLON ARRAY
Rule 60    parameters -> parameters COMMA expression
Rule 61    parameters -> expression
Rule 62    statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 63    statement -> PROCEDURE ID statements ENDPROCEDURE
Rule 64    statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN
Rule 65    statement -> CALL ID
Rule 66    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 67    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 68    statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION
Rule 69    statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
Rule 70    expression -> ID LEFT_PAREN parameters RIGHT_PAREN
Rule 71    expression -> ID LEFT_PAREN RIGHT_PAREN
Rule 72    statement -> RETURN expression

Terminals, with rules where they appear

AND                  : 35
ARRAY                : 5 59 67 69
ASSIGN               : 9 10 28
BOOLEAN              : 51
CALL                 : 64 65
CASE                 : 20
CHAR                 : 52
CLASS                : 
COLON                : 3 5 8 23 27 58 59
COMMA                : 6 11 16 56 60
CONNECT              : 49
CONSTANT             : 4
DECLARE              : 3 5
DIV                  : 44
DOT                  : 
ELSE                 : 18
ENDCASE              : 20
ENDFUNCTION          : 66 67 68 69
ENDIF                : 18 19
ENDPROCEDURE         : 62 63
ENDTYPE              : 
ENDWHILE             : 30
EQUAL                : 4 37
FOR                  : 28
FUNCTION             : 66 67 68 69
GREATER              : 40
GREATER_EQUAL        : 42
ID                   : 3 3 4 5 5 9 10 13 14 20 28 28 32 33 58 58 59 62 63 64 65 66 66 67 68 68 69 70 71
IF                   : 18 19
INHERITS             : 
INPUT                : 13 14
INTEGER              : 55
LEFT_BRACE           : 
LEFT_PAREN           : 50 62 64 66 67 70 71
LEFT_SQUARE          : 5 10 14 33
LESS                 : 39
LESS_EQUAL           : 41
MINUS                : 45 48
MUL                  : 43
NEW                  : 
NEXT                 : 28
NOT                  : 36
NOT_EQUAL            : 38
OF                   : 5 20
OR                   : 34
OTHERWISE            : 27
OUTPUT               : 15
PLUS                 : 46 47
POINTER              : 
PRIVATE              : 
PROCEDURE            : 62 63
PUBLIC               : 
REAL                 : 54
REPEAT               : 29
RETURN               : 72
RETURNS              : 66 67 68 69
RIGHT_BRACE          : 
RIGHT_PAREN          : 50 62 64 66 67 70 71
RIGHT_SQUARE         : 5 10 14 33
SEMICOLON            : 23 24
STRING               : 53
THEN                 : 18 19
TO                   : 25 28
TYPE                 : 
UNTIL                : 29
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

case                 : 21 22
case_expression      : 23
cases                : 20 21
declare_parameter    : 56 57
declare_parameters   : 56 62 66 67
dimension            : 6 7
dimensions           : 5 6
expression           : 4 8 8 9 10 11 12 16 17 18 19 25 25 26 28 28 29 30 31 34 34 35 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 46 47 47 48 48 49 49 50 60 61 72
indexes              : 10 11 14 33
otherwise_statement  : 24
output_expression    : 15 16
parameters           : 60 64 70
statement            : 1 2
statements           : 1 18 18 19 23 27 28 29 30 62 63 66 67 68 69 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 2

    (2) statements -> statement .

    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    PROCEDURE       reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    MINUS           reduce using rule 2 (statements -> statement .)
    PLUS            reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDPROCEDURE    reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDFUNCTION     reduce using rule 2 (statements -> statement .)
    SEMICOLON       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DECLARE . ID COLON ID
    (5) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 28


state 4

    (9) statement -> ID . ASSIGN expression
    (10) statement -> ID . LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (32) expression -> ID .
    (33) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (70) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          shift and go to state 29
    LEFT_SQUARE     shift and go to state 30
    OR              reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    EQUAL           reduce using rule 32 (expression -> ID .)
    NOT_EQUAL       reduce using rule 32 (expression -> ID .)
    LESS            reduce using rule 32 (expression -> ID .)
    GREATER         reduce using rule 32 (expression -> ID .)
    LESS_EQUAL      reduce using rule 32 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 32 (expression -> ID .)
    MUL             reduce using rule 32 (expression -> ID .)
    DIV             reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    CONNECT         reduce using rule 32 (expression -> ID .)
    DECLARE         reduce using rule 32 (expression -> ID .)
    CONSTANT        reduce using rule 32 (expression -> ID .)
    ID              reduce using rule 32 (expression -> ID .)
    INPUT           reduce using rule 32 (expression -> ID .)
    OUTPUT          reduce using rule 32 (expression -> ID .)
    IF              reduce using rule 32 (expression -> ID .)
    CASE            reduce using rule 32 (expression -> ID .)
    FOR             reduce using rule 32 (expression -> ID .)
    REPEAT          reduce using rule 32 (expression -> ID .)
    WHILE           reduce using rule 32 (expression -> ID .)
    PROCEDURE       reduce using rule 32 (expression -> ID .)
    CALL            reduce using rule 32 (expression -> ID .)
    FUNCTION        reduce using rule 32 (expression -> ID .)
    RETURN          reduce using rule 32 (expression -> ID .)
    NOT             reduce using rule 32 (expression -> ID .)
    BOOLEAN         reduce using rule 32 (expression -> ID .)
    CHAR            reduce using rule 32 (expression -> ID .)
    STRING          reduce using rule 32 (expression -> ID .)
    REAL            reduce using rule 32 (expression -> ID .)
    INTEGER         reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)
    UNTIL           reduce using rule 32 (expression -> ID .)
    ENDWHILE        reduce using rule 32 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 32 (expression -> ID .)
    ELSE            reduce using rule 32 (expression -> ID .)
    ENDIF           reduce using rule 32 (expression -> ID .)
    ENDFUNCTION     reduce using rule 32 (expression -> ID .)
    SEMICOLON       reduce using rule 32 (expression -> ID .)
    NEXT            reduce using rule 32 (expression -> ID .)
    LEFT_PAREN      shift and go to state 31

  ! LEFT_PAREN      [ reduce using rule 32 (expression -> ID .) ]


state 5

    (4) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 32


state 6

    (31) statement -> expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 31 (statement -> expression .)
    CONSTANT        reduce using rule 31 (statement -> expression .)
    ID              reduce using rule 31 (statement -> expression .)
    INPUT           reduce using rule 31 (statement -> expression .)
    OUTPUT          reduce using rule 31 (statement -> expression .)
    IF              reduce using rule 31 (statement -> expression .)
    CASE            reduce using rule 31 (statement -> expression .)
    FOR             reduce using rule 31 (statement -> expression .)
    REPEAT          reduce using rule 31 (statement -> expression .)
    WHILE           reduce using rule 31 (statement -> expression .)
    PROCEDURE       reduce using rule 31 (statement -> expression .)
    CALL            reduce using rule 31 (statement -> expression .)
    FUNCTION        reduce using rule 31 (statement -> expression .)
    RETURN          reduce using rule 31 (statement -> expression .)
    NOT             reduce using rule 31 (statement -> expression .)
    LEFT_PAREN      reduce using rule 31 (statement -> expression .)
    BOOLEAN         reduce using rule 31 (statement -> expression .)
    CHAR            reduce using rule 31 (statement -> expression .)
    STRING          reduce using rule 31 (statement -> expression .)
    REAL            reduce using rule 31 (statement -> expression .)
    INTEGER         reduce using rule 31 (statement -> expression .)
    $end            reduce using rule 31 (statement -> expression .)
    UNTIL           reduce using rule 31 (statement -> expression .)
    ENDWHILE        reduce using rule 31 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 31 (statement -> expression .)
    ELSE            reduce using rule 31 (statement -> expression .)
    ENDIF           reduce using rule 31 (statement -> expression .)
    ENDFUNCTION     reduce using rule 31 (statement -> expression .)
    SEMICOLON       reduce using rule 31 (statement -> expression .)
    NEXT            reduce using rule 31 (statement -> expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 31 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 31 (statement -> expression .) ]


state 7

    (13) statement -> INPUT . ID
    (14) statement -> INPUT . ID LEFT_SQUARE indexes RIGHT_SQUARE

    ID              shift and go to state 46


state 8

    (15) statement -> OUTPUT . output_expression
    (16) output_expression -> . output_expression COMMA expression
    (17) output_expression -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    output_expression              shift and go to state 47
    expression                     shift and go to state 48

state 9

    (18) statement -> IF . expression THEN statements ELSE statements ENDIF
    (19) statement -> IF . expression THEN statements ENDIF
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 50

state 10

    (20) statement -> CASE . OF ID cases ENDCASE

    OF              shift and go to state 51


state 11

    (28) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 52


state 12

    (29) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 53
    expression                     shift and go to state 6
    statement                      shift and go to state 2

state 13

    (30) statement -> WHILE . expression statements ENDWHILE
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 54

state 14

    (62) statement -> PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> PROCEDURE . ID statements ENDPROCEDURE

    ID              shift and go to state 55


state 15

    (50) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 56

state 16

    (64) statement -> CALL . ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> CALL . ID

    ID              shift and go to state 57


state 17

    (66) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> FUNCTION . ID RETURNS ID statements ENDFUNCTION
    (69) statement -> FUNCTION . ID RETURNS ARRAY statements ENDFUNCTION

    ID              shift and go to state 58


state 18

    (72) statement -> RETURN . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 59

state 19

    (36) expression -> NOT . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 60

state 20

    (45) expression -> MINUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 61

state 21

    (46) expression -> PLUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 62

state 22

    (51) expression -> BOOLEAN .

    OR              reduce using rule 51 (expression -> BOOLEAN .)
    AND             reduce using rule 51 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 51 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 51 (expression -> BOOLEAN .)
    LESS            reduce using rule 51 (expression -> BOOLEAN .)
    GREATER         reduce using rule 51 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 51 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 51 (expression -> BOOLEAN .)
    MUL             reduce using rule 51 (expression -> BOOLEAN .)
    DIV             reduce using rule 51 (expression -> BOOLEAN .)
    PLUS            reduce using rule 51 (expression -> BOOLEAN .)
    MINUS           reduce using rule 51 (expression -> BOOLEAN .)
    CONNECT         reduce using rule 51 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 51 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 51 (expression -> BOOLEAN .)
    ID              reduce using rule 51 (expression -> BOOLEAN .)
    INPUT           reduce using rule 51 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 51 (expression -> BOOLEAN .)
    IF              reduce using rule 51 (expression -> BOOLEAN .)
    CASE            reduce using rule 51 (expression -> BOOLEAN .)
    FOR             reduce using rule 51 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 51 (expression -> BOOLEAN .)
    WHILE           reduce using rule 51 (expression -> BOOLEAN .)
    PROCEDURE       reduce using rule 51 (expression -> BOOLEAN .)
    CALL            reduce using rule 51 (expression -> BOOLEAN .)
    FUNCTION        reduce using rule 51 (expression -> BOOLEAN .)
    RETURN          reduce using rule 51 (expression -> BOOLEAN .)
    NOT             reduce using rule 51 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 51 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 51 (expression -> BOOLEAN .)
    CHAR            reduce using rule 51 (expression -> BOOLEAN .)
    STRING          reduce using rule 51 (expression -> BOOLEAN .)
    REAL            reduce using rule 51 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 51 (expression -> BOOLEAN .)
    $end            reduce using rule 51 (expression -> BOOLEAN .)
    COMMA           reduce using rule 51 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 51 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 51 (expression -> BOOLEAN .)
    ENDPROCEDURE    reduce using rule 51 (expression -> BOOLEAN .)
    ELSE            reduce using rule 51 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 51 (expression -> BOOLEAN .)
    ENDFUNCTION     reduce using rule 51 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 51 (expression -> BOOLEAN .)
    NEXT            reduce using rule 51 (expression -> BOOLEAN .)
    THEN            reduce using rule 51 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 51 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 51 (expression -> BOOLEAN .)
    TO              reduce using rule 51 (expression -> BOOLEAN .)
    COLON           reduce using rule 51 (expression -> BOOLEAN .)


state 23

    (52) expression -> CHAR .

    OR              reduce using rule 52 (expression -> CHAR .)
    AND             reduce using rule 52 (expression -> CHAR .)
    EQUAL           reduce using rule 52 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 52 (expression -> CHAR .)
    LESS            reduce using rule 52 (expression -> CHAR .)
    GREATER         reduce using rule 52 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 52 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 52 (expression -> CHAR .)
    MUL             reduce using rule 52 (expression -> CHAR .)
    DIV             reduce using rule 52 (expression -> CHAR .)
    PLUS            reduce using rule 52 (expression -> CHAR .)
    MINUS           reduce using rule 52 (expression -> CHAR .)
    CONNECT         reduce using rule 52 (expression -> CHAR .)
    DECLARE         reduce using rule 52 (expression -> CHAR .)
    CONSTANT        reduce using rule 52 (expression -> CHAR .)
    ID              reduce using rule 52 (expression -> CHAR .)
    INPUT           reduce using rule 52 (expression -> CHAR .)
    OUTPUT          reduce using rule 52 (expression -> CHAR .)
    IF              reduce using rule 52 (expression -> CHAR .)
    CASE            reduce using rule 52 (expression -> CHAR .)
    FOR             reduce using rule 52 (expression -> CHAR .)
    REPEAT          reduce using rule 52 (expression -> CHAR .)
    WHILE           reduce using rule 52 (expression -> CHAR .)
    PROCEDURE       reduce using rule 52 (expression -> CHAR .)
    CALL            reduce using rule 52 (expression -> CHAR .)
    FUNCTION        reduce using rule 52 (expression -> CHAR .)
    RETURN          reduce using rule 52 (expression -> CHAR .)
    NOT             reduce using rule 52 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 52 (expression -> CHAR .)
    BOOLEAN         reduce using rule 52 (expression -> CHAR .)
    CHAR            reduce using rule 52 (expression -> CHAR .)
    STRING          reduce using rule 52 (expression -> CHAR .)
    REAL            reduce using rule 52 (expression -> CHAR .)
    INTEGER         reduce using rule 52 (expression -> CHAR .)
    $end            reduce using rule 52 (expression -> CHAR .)
    COMMA           reduce using rule 52 (expression -> CHAR .)
    UNTIL           reduce using rule 52 (expression -> CHAR .)
    ENDWHILE        reduce using rule 52 (expression -> CHAR .)
    ENDPROCEDURE    reduce using rule 52 (expression -> CHAR .)
    ELSE            reduce using rule 52 (expression -> CHAR .)
    ENDIF           reduce using rule 52 (expression -> CHAR .)
    ENDFUNCTION     reduce using rule 52 (expression -> CHAR .)
    SEMICOLON       reduce using rule 52 (expression -> CHAR .)
    NEXT            reduce using rule 52 (expression -> CHAR .)
    THEN            reduce using rule 52 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 52 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 52 (expression -> CHAR .)
    TO              reduce using rule 52 (expression -> CHAR .)
    COLON           reduce using rule 52 (expression -> CHAR .)


state 24

    (53) expression -> STRING .

    OR              reduce using rule 53 (expression -> STRING .)
    AND             reduce using rule 53 (expression -> STRING .)
    EQUAL           reduce using rule 53 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 53 (expression -> STRING .)
    LESS            reduce using rule 53 (expression -> STRING .)
    GREATER         reduce using rule 53 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 53 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 53 (expression -> STRING .)
    MUL             reduce using rule 53 (expression -> STRING .)
    DIV             reduce using rule 53 (expression -> STRING .)
    PLUS            reduce using rule 53 (expression -> STRING .)
    MINUS           reduce using rule 53 (expression -> STRING .)
    CONNECT         reduce using rule 53 (expression -> STRING .)
    DECLARE         reduce using rule 53 (expression -> STRING .)
    CONSTANT        reduce using rule 53 (expression -> STRING .)
    ID              reduce using rule 53 (expression -> STRING .)
    INPUT           reduce using rule 53 (expression -> STRING .)
    OUTPUT          reduce using rule 53 (expression -> STRING .)
    IF              reduce using rule 53 (expression -> STRING .)
    CASE            reduce using rule 53 (expression -> STRING .)
    FOR             reduce using rule 53 (expression -> STRING .)
    REPEAT          reduce using rule 53 (expression -> STRING .)
    WHILE           reduce using rule 53 (expression -> STRING .)
    PROCEDURE       reduce using rule 53 (expression -> STRING .)
    CALL            reduce using rule 53 (expression -> STRING .)
    FUNCTION        reduce using rule 53 (expression -> STRING .)
    RETURN          reduce using rule 53 (expression -> STRING .)
    NOT             reduce using rule 53 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 53 (expression -> STRING .)
    BOOLEAN         reduce using rule 53 (expression -> STRING .)
    CHAR            reduce using rule 53 (expression -> STRING .)
    STRING          reduce using rule 53 (expression -> STRING .)
    REAL            reduce using rule 53 (expression -> STRING .)
    INTEGER         reduce using rule 53 (expression -> STRING .)
    $end            reduce using rule 53 (expression -> STRING .)
    COMMA           reduce using rule 53 (expression -> STRING .)
    UNTIL           reduce using rule 53 (expression -> STRING .)
    ENDWHILE        reduce using rule 53 (expression -> STRING .)
    ENDPROCEDURE    reduce using rule 53 (expression -> STRING .)
    ELSE            reduce using rule 53 (expression -> STRING .)
    ENDIF           reduce using rule 53 (expression -> STRING .)
    ENDFUNCTION     reduce using rule 53 (expression -> STRING .)
    SEMICOLON       reduce using rule 53 (expression -> STRING .)
    NEXT            reduce using rule 53 (expression -> STRING .)
    THEN            reduce using rule 53 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 53 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 53 (expression -> STRING .)
    TO              reduce using rule 53 (expression -> STRING .)
    COLON           reduce using rule 53 (expression -> STRING .)


state 25

    (54) expression -> REAL .

    OR              reduce using rule 54 (expression -> REAL .)
    AND             reduce using rule 54 (expression -> REAL .)
    EQUAL           reduce using rule 54 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 54 (expression -> REAL .)
    LESS            reduce using rule 54 (expression -> REAL .)
    GREATER         reduce using rule 54 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 54 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 54 (expression -> REAL .)
    MUL             reduce using rule 54 (expression -> REAL .)
    DIV             reduce using rule 54 (expression -> REAL .)
    PLUS            reduce using rule 54 (expression -> REAL .)
    MINUS           reduce using rule 54 (expression -> REAL .)
    CONNECT         reduce using rule 54 (expression -> REAL .)
    DECLARE         reduce using rule 54 (expression -> REAL .)
    CONSTANT        reduce using rule 54 (expression -> REAL .)
    ID              reduce using rule 54 (expression -> REAL .)
    INPUT           reduce using rule 54 (expression -> REAL .)
    OUTPUT          reduce using rule 54 (expression -> REAL .)
    IF              reduce using rule 54 (expression -> REAL .)
    CASE            reduce using rule 54 (expression -> REAL .)
    FOR             reduce using rule 54 (expression -> REAL .)
    REPEAT          reduce using rule 54 (expression -> REAL .)
    WHILE           reduce using rule 54 (expression -> REAL .)
    PROCEDURE       reduce using rule 54 (expression -> REAL .)
    CALL            reduce using rule 54 (expression -> REAL .)
    FUNCTION        reduce using rule 54 (expression -> REAL .)
    RETURN          reduce using rule 54 (expression -> REAL .)
    NOT             reduce using rule 54 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 54 (expression -> REAL .)
    BOOLEAN         reduce using rule 54 (expression -> REAL .)
    CHAR            reduce using rule 54 (expression -> REAL .)
    STRING          reduce using rule 54 (expression -> REAL .)
    REAL            reduce using rule 54 (expression -> REAL .)
    INTEGER         reduce using rule 54 (expression -> REAL .)
    $end            reduce using rule 54 (expression -> REAL .)
    COMMA           reduce using rule 54 (expression -> REAL .)
    UNTIL           reduce using rule 54 (expression -> REAL .)
    ENDWHILE        reduce using rule 54 (expression -> REAL .)
    ENDPROCEDURE    reduce using rule 54 (expression -> REAL .)
    ELSE            reduce using rule 54 (expression -> REAL .)
    ENDIF           reduce using rule 54 (expression -> REAL .)
    ENDFUNCTION     reduce using rule 54 (expression -> REAL .)
    SEMICOLON       reduce using rule 54 (expression -> REAL .)
    NEXT            reduce using rule 54 (expression -> REAL .)
    THEN            reduce using rule 54 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 54 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 54 (expression -> REAL .)
    TO              reduce using rule 54 (expression -> REAL .)
    COLON           reduce using rule 54 (expression -> REAL .)


state 26

    (55) expression -> INTEGER .

    OR              reduce using rule 55 (expression -> INTEGER .)
    AND             reduce using rule 55 (expression -> INTEGER .)
    EQUAL           reduce using rule 55 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 55 (expression -> INTEGER .)
    LESS            reduce using rule 55 (expression -> INTEGER .)
    GREATER         reduce using rule 55 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 55 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 55 (expression -> INTEGER .)
    MUL             reduce using rule 55 (expression -> INTEGER .)
    DIV             reduce using rule 55 (expression -> INTEGER .)
    PLUS            reduce using rule 55 (expression -> INTEGER .)
    MINUS           reduce using rule 55 (expression -> INTEGER .)
    CONNECT         reduce using rule 55 (expression -> INTEGER .)
    DECLARE         reduce using rule 55 (expression -> INTEGER .)
    CONSTANT        reduce using rule 55 (expression -> INTEGER .)
    ID              reduce using rule 55 (expression -> INTEGER .)
    INPUT           reduce using rule 55 (expression -> INTEGER .)
    OUTPUT          reduce using rule 55 (expression -> INTEGER .)
    IF              reduce using rule 55 (expression -> INTEGER .)
    CASE            reduce using rule 55 (expression -> INTEGER .)
    FOR             reduce using rule 55 (expression -> INTEGER .)
    REPEAT          reduce using rule 55 (expression -> INTEGER .)
    WHILE           reduce using rule 55 (expression -> INTEGER .)
    PROCEDURE       reduce using rule 55 (expression -> INTEGER .)
    CALL            reduce using rule 55 (expression -> INTEGER .)
    FUNCTION        reduce using rule 55 (expression -> INTEGER .)
    RETURN          reduce using rule 55 (expression -> INTEGER .)
    NOT             reduce using rule 55 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 55 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 55 (expression -> INTEGER .)
    CHAR            reduce using rule 55 (expression -> INTEGER .)
    STRING          reduce using rule 55 (expression -> INTEGER .)
    REAL            reduce using rule 55 (expression -> INTEGER .)
    INTEGER         reduce using rule 55 (expression -> INTEGER .)
    $end            reduce using rule 55 (expression -> INTEGER .)
    COMMA           reduce using rule 55 (expression -> INTEGER .)
    UNTIL           reduce using rule 55 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 55 (expression -> INTEGER .)
    ENDPROCEDURE    reduce using rule 55 (expression -> INTEGER .)
    ELSE            reduce using rule 55 (expression -> INTEGER .)
    ENDIF           reduce using rule 55 (expression -> INTEGER .)
    ENDFUNCTION     reduce using rule 55 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 55 (expression -> INTEGER .)
    NEXT            reduce using rule 55 (expression -> INTEGER .)
    THEN            reduce using rule 55 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 55 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 55 (expression -> INTEGER .)
    TO              reduce using rule 55 (expression -> INTEGER .)
    COLON           reduce using rule 55 (expression -> INTEGER .)


state 27

    (1) statements -> statements statement .

    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    PROCEDURE       reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    PLUS            reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDPROCEDURE    reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDFUNCTION     reduce using rule 1 (statements -> statements statement .)
    SEMICOLON       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 28

    (3) statement -> DECLARE ID . COLON ID
    (5) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 63


state 29

    (9) statement -> ID ASSIGN . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 64

state 30

    (10) statement -> ID LEFT_SQUARE . indexes RIGHT_SQUARE ASSIGN expression
    (33) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    indexes                        shift and go to state 65
    expression                     shift and go to state 66

state 31

    (70) expression -> ID LEFT_PAREN . parameters RIGHT_PAREN
    (71) expression -> ID LEFT_PAREN . RIGHT_PAREN
    (60) parameters -> . parameters COMMA expression
    (61) parameters -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 68
    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    parameters                     shift and go to state 67
    expression                     shift and go to state 69

state 32

    (4) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 70


state 33

    (34) expression -> expression OR . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 71

state 34

    (35) expression -> expression AND . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 72

state 35

    (37) expression -> expression EQUAL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 73

state 36

    (38) expression -> expression NOT_EQUAL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 74

state 37

    (39) expression -> expression LESS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 75

state 38

    (40) expression -> expression GREATER . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 76

state 39

    (41) expression -> expression LESS_EQUAL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 77

state 40

    (42) expression -> expression GREATER_EQUAL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 78

state 41

    (43) expression -> expression MUL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 79

state 42

    (44) expression -> expression DIV . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 80

state 43

    (47) expression -> expression PLUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 81

state 44

    (48) expression -> expression MINUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 82

state 45

    (49) expression -> expression CONNECT . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 83

state 46

    (13) statement -> INPUT ID .
    (14) statement -> INPUT ID . LEFT_SQUARE indexes RIGHT_SQUARE

    DECLARE         reduce using rule 13 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 13 (statement -> INPUT ID .)
    ID              reduce using rule 13 (statement -> INPUT ID .)
    INPUT           reduce using rule 13 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 13 (statement -> INPUT ID .)
    IF              reduce using rule 13 (statement -> INPUT ID .)
    CASE            reduce using rule 13 (statement -> INPUT ID .)
    FOR             reduce using rule 13 (statement -> INPUT ID .)
    REPEAT          reduce using rule 13 (statement -> INPUT ID .)
    WHILE           reduce using rule 13 (statement -> INPUT ID .)
    PROCEDURE       reduce using rule 13 (statement -> INPUT ID .)
    CALL            reduce using rule 13 (statement -> INPUT ID .)
    FUNCTION        reduce using rule 13 (statement -> INPUT ID .)
    RETURN          reduce using rule 13 (statement -> INPUT ID .)
    NOT             reduce using rule 13 (statement -> INPUT ID .)
    MINUS           reduce using rule 13 (statement -> INPUT ID .)
    PLUS            reduce using rule 13 (statement -> INPUT ID .)
    LEFT_PAREN      reduce using rule 13 (statement -> INPUT ID .)
    BOOLEAN         reduce using rule 13 (statement -> INPUT ID .)
    CHAR            reduce using rule 13 (statement -> INPUT ID .)
    STRING          reduce using rule 13 (statement -> INPUT ID .)
    REAL            reduce using rule 13 (statement -> INPUT ID .)
    INTEGER         reduce using rule 13 (statement -> INPUT ID .)
    $end            reduce using rule 13 (statement -> INPUT ID .)
    UNTIL           reduce using rule 13 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 13 (statement -> INPUT ID .)
    ENDPROCEDURE    reduce using rule 13 (statement -> INPUT ID .)
    ELSE            reduce using rule 13 (statement -> INPUT ID .)
    ENDIF           reduce using rule 13 (statement -> INPUT ID .)
    ENDFUNCTION     reduce using rule 13 (statement -> INPUT ID .)
    SEMICOLON       reduce using rule 13 (statement -> INPUT ID .)
    NEXT            reduce using rule 13 (statement -> INPUT ID .)
    LEFT_SQUARE     shift and go to state 84


state 47

    (15) statement -> OUTPUT output_expression .
    (16) output_expression -> output_expression . COMMA expression

    DECLARE         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 15 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 15 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 15 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 15 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 15 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 15 (statement -> OUTPUT output_expression .)
    PROCEDURE       reduce using rule 15 (statement -> OUTPUT output_expression .)
    CALL            reduce using rule 15 (statement -> OUTPUT output_expression .)
    FUNCTION        reduce using rule 15 (statement -> OUTPUT output_expression .)
    RETURN          reduce using rule 15 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 15 (statement -> OUTPUT output_expression .)
    MINUS           reduce using rule 15 (statement -> OUTPUT output_expression .)
    PLUS            reduce using rule 15 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 15 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 15 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 15 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 15 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 15 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 15 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 15 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 15 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 15 (statement -> OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 15 (statement -> OUTPUT output_expression .)
    SEMICOLON       reduce using rule 15 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 15 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 85


state 48

    (17) output_expression -> expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 17 (output_expression -> expression .)
    DECLARE         reduce using rule 17 (output_expression -> expression .)
    CONSTANT        reduce using rule 17 (output_expression -> expression .)
    ID              reduce using rule 17 (output_expression -> expression .)
    INPUT           reduce using rule 17 (output_expression -> expression .)
    OUTPUT          reduce using rule 17 (output_expression -> expression .)
    IF              reduce using rule 17 (output_expression -> expression .)
    CASE            reduce using rule 17 (output_expression -> expression .)
    FOR             reduce using rule 17 (output_expression -> expression .)
    REPEAT          reduce using rule 17 (output_expression -> expression .)
    WHILE           reduce using rule 17 (output_expression -> expression .)
    PROCEDURE       reduce using rule 17 (output_expression -> expression .)
    CALL            reduce using rule 17 (output_expression -> expression .)
    FUNCTION        reduce using rule 17 (output_expression -> expression .)
    RETURN          reduce using rule 17 (output_expression -> expression .)
    NOT             reduce using rule 17 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 17 (output_expression -> expression .)
    BOOLEAN         reduce using rule 17 (output_expression -> expression .)
    CHAR            reduce using rule 17 (output_expression -> expression .)
    STRING          reduce using rule 17 (output_expression -> expression .)
    REAL            reduce using rule 17 (output_expression -> expression .)
    INTEGER         reduce using rule 17 (output_expression -> expression .)
    $end            reduce using rule 17 (output_expression -> expression .)
    UNTIL           reduce using rule 17 (output_expression -> expression .)
    ENDWHILE        reduce using rule 17 (output_expression -> expression .)
    ENDPROCEDURE    reduce using rule 17 (output_expression -> expression .)
    ELSE            reduce using rule 17 (output_expression -> expression .)
    ENDIF           reduce using rule 17 (output_expression -> expression .)
    ENDFUNCTION     reduce using rule 17 (output_expression -> expression .)
    SEMICOLON       reduce using rule 17 (output_expression -> expression .)
    NEXT            reduce using rule 17 (output_expression -> expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 17 (output_expression -> expression .) ]
  ! PLUS            [ reduce using rule 17 (output_expression -> expression .) ]


state 49

    (32) expression -> ID .
    (33) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (70) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    OR              reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    EQUAL           reduce using rule 32 (expression -> ID .)
    NOT_EQUAL       reduce using rule 32 (expression -> ID .)
    LESS            reduce using rule 32 (expression -> ID .)
    GREATER         reduce using rule 32 (expression -> ID .)
    LESS_EQUAL      reduce using rule 32 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 32 (expression -> ID .)
    MUL             reduce using rule 32 (expression -> ID .)
    DIV             reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    CONNECT         reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)
    DECLARE         reduce using rule 32 (expression -> ID .)
    CONSTANT        reduce using rule 32 (expression -> ID .)
    ID              reduce using rule 32 (expression -> ID .)
    INPUT           reduce using rule 32 (expression -> ID .)
    OUTPUT          reduce using rule 32 (expression -> ID .)
    IF              reduce using rule 32 (expression -> ID .)
    CASE            reduce using rule 32 (expression -> ID .)
    FOR             reduce using rule 32 (expression -> ID .)
    REPEAT          reduce using rule 32 (expression -> ID .)
    WHILE           reduce using rule 32 (expression -> ID .)
    PROCEDURE       reduce using rule 32 (expression -> ID .)
    CALL            reduce using rule 32 (expression -> ID .)
    FUNCTION        reduce using rule 32 (expression -> ID .)
    RETURN          reduce using rule 32 (expression -> ID .)
    NOT             reduce using rule 32 (expression -> ID .)
    BOOLEAN         reduce using rule 32 (expression -> ID .)
    CHAR            reduce using rule 32 (expression -> ID .)
    STRING          reduce using rule 32 (expression -> ID .)
    REAL            reduce using rule 32 (expression -> ID .)
    INTEGER         reduce using rule 32 (expression -> ID .)
    $end            reduce using rule 32 (expression -> ID .)
    UNTIL           reduce using rule 32 (expression -> ID .)
    ENDWHILE        reduce using rule 32 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 32 (expression -> ID .)
    ELSE            reduce using rule 32 (expression -> ID .)
    ENDIF           reduce using rule 32 (expression -> ID .)
    ENDFUNCTION     reduce using rule 32 (expression -> ID .)
    SEMICOLON       reduce using rule 32 (expression -> ID .)
    NEXT            reduce using rule 32 (expression -> ID .)
    THEN            reduce using rule 32 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 32 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 32 (expression -> ID .)
    TO              reduce using rule 32 (expression -> ID .)
    COLON           reduce using rule 32 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 86
    LEFT_PAREN      shift and go to state 31

  ! LEFT_PAREN      [ reduce using rule 32 (expression -> ID .) ]


state 50

    (18) statement -> IF expression . THEN statements ELSE statements ENDIF
    (19) statement -> IF expression . THEN statements ENDIF
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    THEN            shift and go to state 87
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 51

    (20) statement -> CASE OF . ID cases ENDCASE

    ID              shift and go to state 88


state 52

    (28) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 89


state 53

    (29) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    UNTIL           shift and go to state 90
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statement                      shift and go to state 27

state 54

    (30) statement -> WHILE expression . statements ENDWHILE
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    CONNECT         shift and go to state 45
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statements                     shift and go to state 91
    statement                      shift and go to state 2

state 55

    (62) statement -> PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> PROCEDURE ID . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 94
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 95
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 56

    (50) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_PAREN     shift and go to state 96
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 57

    (64) statement -> CALL ID . LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> CALL ID .

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    LEFT_PAREN      shift and go to state 97
    DECLARE         reduce using rule 65 (statement -> CALL ID .)
    CONSTANT        reduce using rule 65 (statement -> CALL ID .)
    ID              reduce using rule 65 (statement -> CALL ID .)
    INPUT           reduce using rule 65 (statement -> CALL ID .)
    OUTPUT          reduce using rule 65 (statement -> CALL ID .)
    IF              reduce using rule 65 (statement -> CALL ID .)
    CASE            reduce using rule 65 (statement -> CALL ID .)
    FOR             reduce using rule 65 (statement -> CALL ID .)
    REPEAT          reduce using rule 65 (statement -> CALL ID .)
    WHILE           reduce using rule 65 (statement -> CALL ID .)
    PROCEDURE       reduce using rule 65 (statement -> CALL ID .)
    CALL            reduce using rule 65 (statement -> CALL ID .)
    FUNCTION        reduce using rule 65 (statement -> CALL ID .)
    RETURN          reduce using rule 65 (statement -> CALL ID .)
    NOT             reduce using rule 65 (statement -> CALL ID .)
    MINUS           reduce using rule 65 (statement -> CALL ID .)
    PLUS            reduce using rule 65 (statement -> CALL ID .)
    BOOLEAN         reduce using rule 65 (statement -> CALL ID .)
    CHAR            reduce using rule 65 (statement -> CALL ID .)
    STRING          reduce using rule 65 (statement -> CALL ID .)
    REAL            reduce using rule 65 (statement -> CALL ID .)
    INTEGER         reduce using rule 65 (statement -> CALL ID .)
    $end            reduce using rule 65 (statement -> CALL ID .)
    UNTIL           reduce using rule 65 (statement -> CALL ID .)
    ENDWHILE        reduce using rule 65 (statement -> CALL ID .)
    ENDPROCEDURE    reduce using rule 65 (statement -> CALL ID .)
    ELSE            reduce using rule 65 (statement -> CALL ID .)
    ENDIF           reduce using rule 65 (statement -> CALL ID .)
    ENDFUNCTION     reduce using rule 65 (statement -> CALL ID .)
    SEMICOLON       reduce using rule 65 (statement -> CALL ID .)
    NEXT            reduce using rule 65 (statement -> CALL ID .)

  ! LEFT_PAREN      [ reduce using rule 65 (statement -> CALL ID .) ]


state 58

    (66) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> FUNCTION ID . RETURNS ID statements ENDFUNCTION
    (69) statement -> FUNCTION ID . RETURNS ARRAY statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 98
    RETURNS         shift and go to state 99


state 59

    (72) statement -> RETURN expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 72 (statement -> RETURN expression .)
    CONSTANT        reduce using rule 72 (statement -> RETURN expression .)
    ID              reduce using rule 72 (statement -> RETURN expression .)
    INPUT           reduce using rule 72 (statement -> RETURN expression .)
    OUTPUT          reduce using rule 72 (statement -> RETURN expression .)
    IF              reduce using rule 72 (statement -> RETURN expression .)
    CASE            reduce using rule 72 (statement -> RETURN expression .)
    FOR             reduce using rule 72 (statement -> RETURN expression .)
    REPEAT          reduce using rule 72 (statement -> RETURN expression .)
    WHILE           reduce using rule 72 (statement -> RETURN expression .)
    PROCEDURE       reduce using rule 72 (statement -> RETURN expression .)
    CALL            reduce using rule 72 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 72 (statement -> RETURN expression .)
    RETURN          reduce using rule 72 (statement -> RETURN expression .)
    NOT             reduce using rule 72 (statement -> RETURN expression .)
    LEFT_PAREN      reduce using rule 72 (statement -> RETURN expression .)
    BOOLEAN         reduce using rule 72 (statement -> RETURN expression .)
    CHAR            reduce using rule 72 (statement -> RETURN expression .)
    STRING          reduce using rule 72 (statement -> RETURN expression .)
    REAL            reduce using rule 72 (statement -> RETURN expression .)
    INTEGER         reduce using rule 72 (statement -> RETURN expression .)
    $end            reduce using rule 72 (statement -> RETURN expression .)
    UNTIL           reduce using rule 72 (statement -> RETURN expression .)
    ENDWHILE        reduce using rule 72 (statement -> RETURN expression .)
    ENDPROCEDURE    reduce using rule 72 (statement -> RETURN expression .)
    ELSE            reduce using rule 72 (statement -> RETURN expression .)
    ENDIF           reduce using rule 72 (statement -> RETURN expression .)
    ENDFUNCTION     reduce using rule 72 (statement -> RETURN expression .)
    SEMICOLON       reduce using rule 72 (statement -> RETURN expression .)
    NEXT            reduce using rule 72 (statement -> RETURN expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 72 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 72 (statement -> RETURN expression .) ]


state 60

    (36) expression -> NOT expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 36 (expression -> NOT expression .)
    AND             reduce using rule 36 (expression -> NOT expression .)
    CONNECT         reduce using rule 36 (expression -> NOT expression .)
    DECLARE         reduce using rule 36 (expression -> NOT expression .)
    CONSTANT        reduce using rule 36 (expression -> NOT expression .)
    ID              reduce using rule 36 (expression -> NOT expression .)
    INPUT           reduce using rule 36 (expression -> NOT expression .)
    OUTPUT          reduce using rule 36 (expression -> NOT expression .)
    IF              reduce using rule 36 (expression -> NOT expression .)
    CASE            reduce using rule 36 (expression -> NOT expression .)
    FOR             reduce using rule 36 (expression -> NOT expression .)
    REPEAT          reduce using rule 36 (expression -> NOT expression .)
    WHILE           reduce using rule 36 (expression -> NOT expression .)
    PROCEDURE       reduce using rule 36 (expression -> NOT expression .)
    CALL            reduce using rule 36 (expression -> NOT expression .)
    FUNCTION        reduce using rule 36 (expression -> NOT expression .)
    RETURN          reduce using rule 36 (expression -> NOT expression .)
    NOT             reduce using rule 36 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 36 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 36 (expression -> NOT expression .)
    CHAR            reduce using rule 36 (expression -> NOT expression .)
    STRING          reduce using rule 36 (expression -> NOT expression .)
    REAL            reduce using rule 36 (expression -> NOT expression .)
    INTEGER         reduce using rule 36 (expression -> NOT expression .)
    $end            reduce using rule 36 (expression -> NOT expression .)
    COMMA           reduce using rule 36 (expression -> NOT expression .)
    UNTIL           reduce using rule 36 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 36 (expression -> NOT expression .)
    ENDPROCEDURE    reduce using rule 36 (expression -> NOT expression .)
    ELSE            reduce using rule 36 (expression -> NOT expression .)
    ENDIF           reduce using rule 36 (expression -> NOT expression .)
    ENDFUNCTION     reduce using rule 36 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 36 (expression -> NOT expression .)
    NEXT            reduce using rule 36 (expression -> NOT expression .)
    THEN            reduce using rule 36 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 36 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 36 (expression -> NOT expression .)
    TO              reduce using rule 36 (expression -> NOT expression .)
    COLON           reduce using rule 36 (expression -> NOT expression .)
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! EQUAL           [ reduce using rule 36 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 36 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 36 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 36 (expression -> NOT expression .) ]
  ! MUL             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! CONNECT         [ shift and go to state 45 ]


state 61

    (45) expression -> MINUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 45 (expression -> MINUS expression .)
    AND             reduce using rule 45 (expression -> MINUS expression .)
    EQUAL           reduce using rule 45 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> MINUS expression .)
    LESS            reduce using rule 45 (expression -> MINUS expression .)
    GREATER         reduce using rule 45 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> MINUS expression .)
    MUL             reduce using rule 45 (expression -> MINUS expression .)
    DIV             reduce using rule 45 (expression -> MINUS expression .)
    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    CONNECT         reduce using rule 45 (expression -> MINUS expression .)
    DECLARE         reduce using rule 45 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 45 (expression -> MINUS expression .)
    ID              reduce using rule 45 (expression -> MINUS expression .)
    INPUT           reduce using rule 45 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 45 (expression -> MINUS expression .)
    IF              reduce using rule 45 (expression -> MINUS expression .)
    CASE            reduce using rule 45 (expression -> MINUS expression .)
    FOR             reduce using rule 45 (expression -> MINUS expression .)
    REPEAT          reduce using rule 45 (expression -> MINUS expression .)
    WHILE           reduce using rule 45 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 45 (expression -> MINUS expression .)
    CALL            reduce using rule 45 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 45 (expression -> MINUS expression .)
    RETURN          reduce using rule 45 (expression -> MINUS expression .)
    NOT             reduce using rule 45 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 45 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 45 (expression -> MINUS expression .)
    CHAR            reduce using rule 45 (expression -> MINUS expression .)
    STRING          reduce using rule 45 (expression -> MINUS expression .)
    REAL            reduce using rule 45 (expression -> MINUS expression .)
    INTEGER         reduce using rule 45 (expression -> MINUS expression .)
    $end            reduce using rule 45 (expression -> MINUS expression .)
    COMMA           reduce using rule 45 (expression -> MINUS expression .)
    UNTIL           reduce using rule 45 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 45 (expression -> MINUS expression .)
    ENDPROCEDURE    reduce using rule 45 (expression -> MINUS expression .)
    ELSE            reduce using rule 45 (expression -> MINUS expression .)
    ENDIF           reduce using rule 45 (expression -> MINUS expression .)
    ENDFUNCTION     reduce using rule 45 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> MINUS expression .)
    NEXT            reduce using rule 45 (expression -> MINUS expression .)
    THEN            reduce using rule 45 (expression -> MINUS expression .)
    RIGHT_PAREN     reduce using rule 45 (expression -> MINUS expression .)
    RIGHT_SQUARE    reduce using rule 45 (expression -> MINUS expression .)
    TO              reduce using rule 45 (expression -> MINUS expression .)
    COLON           reduce using rule 45 (expression -> MINUS expression .)

  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 62

    (46) expression -> PLUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 46 (expression -> PLUS expression .)
    AND             reduce using rule 46 (expression -> PLUS expression .)
    EQUAL           reduce using rule 46 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> PLUS expression .)
    LESS            reduce using rule 46 (expression -> PLUS expression .)
    GREATER         reduce using rule 46 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 46 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 46 (expression -> PLUS expression .)
    MUL             reduce using rule 46 (expression -> PLUS expression .)
    DIV             reduce using rule 46 (expression -> PLUS expression .)
    PLUS            reduce using rule 46 (expression -> PLUS expression .)
    MINUS           reduce using rule 46 (expression -> PLUS expression .)
    CONNECT         reduce using rule 46 (expression -> PLUS expression .)
    DECLARE         reduce using rule 46 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 46 (expression -> PLUS expression .)
    ID              reduce using rule 46 (expression -> PLUS expression .)
    INPUT           reduce using rule 46 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 46 (expression -> PLUS expression .)
    IF              reduce using rule 46 (expression -> PLUS expression .)
    CASE            reduce using rule 46 (expression -> PLUS expression .)
    FOR             reduce using rule 46 (expression -> PLUS expression .)
    REPEAT          reduce using rule 46 (expression -> PLUS expression .)
    WHILE           reduce using rule 46 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 46 (expression -> PLUS expression .)
    CALL            reduce using rule 46 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 46 (expression -> PLUS expression .)
    RETURN          reduce using rule 46 (expression -> PLUS expression .)
    NOT             reduce using rule 46 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 46 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 46 (expression -> PLUS expression .)
    CHAR            reduce using rule 46 (expression -> PLUS expression .)
    STRING          reduce using rule 46 (expression -> PLUS expression .)
    REAL            reduce using rule 46 (expression -> PLUS expression .)
    INTEGER         reduce using rule 46 (expression -> PLUS expression .)
    $end            reduce using rule 46 (expression -> PLUS expression .)
    COMMA           reduce using rule 46 (expression -> PLUS expression .)
    UNTIL           reduce using rule 46 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 46 (expression -> PLUS expression .)
    ENDPROCEDURE    reduce using rule 46 (expression -> PLUS expression .)
    ELSE            reduce using rule 46 (expression -> PLUS expression .)
    ENDIF           reduce using rule 46 (expression -> PLUS expression .)
    ENDFUNCTION     reduce using rule 46 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 46 (expression -> PLUS expression .)
    NEXT            reduce using rule 46 (expression -> PLUS expression .)
    THEN            reduce using rule 46 (expression -> PLUS expression .)
    RIGHT_PAREN     reduce using rule 46 (expression -> PLUS expression .)
    RIGHT_SQUARE    reduce using rule 46 (expression -> PLUS expression .)
    TO              reduce using rule 46 (expression -> PLUS expression .)
    COLON           reduce using rule 46 (expression -> PLUS expression .)

  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 63

    (3) statement -> DECLARE ID COLON . ID
    (5) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 100
    ARRAY           shift and go to state 101


state 64

    (9) statement -> ID ASSIGN expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CONSTANT        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 9 (statement -> ID ASSIGN expression .)
    INPUT           reduce using rule 9 (statement -> ID ASSIGN expression .)
    OUTPUT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 9 (statement -> ID ASSIGN expression .)
    CASE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FOR             reduce using rule 9 (statement -> ID ASSIGN expression .)
    REPEAT          reduce using rule 9 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 9 (statement -> ID ASSIGN expression .)
    PROCEDURE       reduce using rule 9 (statement -> ID ASSIGN expression .)
    CALL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    FUNCTION        reduce using rule 9 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 9 (statement -> ID ASSIGN expression .)
    NOT             reduce using rule 9 (statement -> ID ASSIGN expression .)
    LEFT_PAREN      reduce using rule 9 (statement -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 9 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 9 (statement -> ID ASSIGN expression .)
    STRING          reduce using rule 9 (statement -> ID ASSIGN expression .)
    REAL            reduce using rule 9 (statement -> ID ASSIGN expression .)
    INTEGER         reduce using rule 9 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 9 (statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDWHILE        reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 9 (statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDIF           reduce using rule 9 (statement -> ID ASSIGN expression .)
    ENDFUNCTION     reduce using rule 9 (statement -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 9 (statement -> ID ASSIGN expression .)
    NEXT            reduce using rule 9 (statement -> ID ASSIGN expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 9 (statement -> ID ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 9 (statement -> ID ASSIGN expression .) ]


state 65

    (10) statement -> ID LEFT_SQUARE indexes . RIGHT_SQUARE ASSIGN expression
    (33) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 102
    COMMA           shift and go to state 103


state 66

    (12) indexes -> expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_SQUARE    reduce using rule 12 (indexes -> expression .)
    COMMA           reduce using rule 12 (indexes -> expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 67

    (70) expression -> ID LEFT_PAREN parameters . RIGHT_PAREN
    (60) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 104
    COMMA           shift and go to state 105


state 68

    (71) expression -> ID LEFT_PAREN RIGHT_PAREN .

    OR              reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    AND             reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    EQUAL           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER         reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MUL             reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONNECT         reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    THEN            reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TO              reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COLON           reduce using rule 71 (expression -> ID LEFT_PAREN RIGHT_PAREN .)


state 69

    (61) parameters -> expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_PAREN     reduce using rule 61 (parameters -> expression .)
    COMMA           reduce using rule 61 (parameters -> expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 70

    (4) statement -> CONSTANT ID EQUAL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 106

state 71

    (34) expression -> expression OR expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 34 (expression -> expression OR expression .)
    AND             reduce using rule 34 (expression -> expression OR expression .)
    CONNECT         reduce using rule 34 (expression -> expression OR expression .)
    DECLARE         reduce using rule 34 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 34 (expression -> expression OR expression .)
    ID              reduce using rule 34 (expression -> expression OR expression .)
    INPUT           reduce using rule 34 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 34 (expression -> expression OR expression .)
    IF              reduce using rule 34 (expression -> expression OR expression .)
    CASE            reduce using rule 34 (expression -> expression OR expression .)
    FOR             reduce using rule 34 (expression -> expression OR expression .)
    REPEAT          reduce using rule 34 (expression -> expression OR expression .)
    WHILE           reduce using rule 34 (expression -> expression OR expression .)
    PROCEDURE       reduce using rule 34 (expression -> expression OR expression .)
    CALL            reduce using rule 34 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 34 (expression -> expression OR expression .)
    RETURN          reduce using rule 34 (expression -> expression OR expression .)
    NOT             reduce using rule 34 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 34 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 34 (expression -> expression OR expression .)
    CHAR            reduce using rule 34 (expression -> expression OR expression .)
    STRING          reduce using rule 34 (expression -> expression OR expression .)
    REAL            reduce using rule 34 (expression -> expression OR expression .)
    INTEGER         reduce using rule 34 (expression -> expression OR expression .)
    $end            reduce using rule 34 (expression -> expression OR expression .)
    COMMA           reduce using rule 34 (expression -> expression OR expression .)
    UNTIL           reduce using rule 34 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 34 (expression -> expression OR expression .)
    ENDPROCEDURE    reduce using rule 34 (expression -> expression OR expression .)
    ELSE            reduce using rule 34 (expression -> expression OR expression .)
    ENDIF           reduce using rule 34 (expression -> expression OR expression .)
    ENDFUNCTION     reduce using rule 34 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression OR expression .)
    NEXT            reduce using rule 34 (expression -> expression OR expression .)
    THEN            reduce using rule 34 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 34 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 34 (expression -> expression OR expression .)
    TO              reduce using rule 34 (expression -> expression OR expression .)
    COLON           reduce using rule 34 (expression -> expression OR expression .)
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! EQUAL           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! CONNECT         [ shift and go to state 45 ]


state 72

    (35) expression -> expression AND expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    AND             reduce using rule 35 (expression -> expression AND expression .)
    CONNECT         reduce using rule 35 (expression -> expression AND expression .)
    DECLARE         reduce using rule 35 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 35 (expression -> expression AND expression .)
    ID              reduce using rule 35 (expression -> expression AND expression .)
    INPUT           reduce using rule 35 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 35 (expression -> expression AND expression .)
    IF              reduce using rule 35 (expression -> expression AND expression .)
    CASE            reduce using rule 35 (expression -> expression AND expression .)
    FOR             reduce using rule 35 (expression -> expression AND expression .)
    REPEAT          reduce using rule 35 (expression -> expression AND expression .)
    WHILE           reduce using rule 35 (expression -> expression AND expression .)
    PROCEDURE       reduce using rule 35 (expression -> expression AND expression .)
    CALL            reduce using rule 35 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 35 (expression -> expression AND expression .)
    RETURN          reduce using rule 35 (expression -> expression AND expression .)
    NOT             reduce using rule 35 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 35 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 35 (expression -> expression AND expression .)
    CHAR            reduce using rule 35 (expression -> expression AND expression .)
    STRING          reduce using rule 35 (expression -> expression AND expression .)
    REAL            reduce using rule 35 (expression -> expression AND expression .)
    INTEGER         reduce using rule 35 (expression -> expression AND expression .)
    $end            reduce using rule 35 (expression -> expression AND expression .)
    COMMA           reduce using rule 35 (expression -> expression AND expression .)
    UNTIL           reduce using rule 35 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 35 (expression -> expression AND expression .)
    ENDPROCEDURE    reduce using rule 35 (expression -> expression AND expression .)
    ELSE            reduce using rule 35 (expression -> expression AND expression .)
    ENDIF           reduce using rule 35 (expression -> expression AND expression .)
    ENDFUNCTION     reduce using rule 35 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression AND expression .)
    NEXT            reduce using rule 35 (expression -> expression AND expression .)
    THEN            reduce using rule 35 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 35 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 35 (expression -> expression AND expression .)
    TO              reduce using rule 35 (expression -> expression AND expression .)
    COLON           reduce using rule 35 (expression -> expression AND expression .)
    OR              shift and go to state 33
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! OR              [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 34 ]
  ! CONNECT         [ shift and go to state 45 ]


state 73

    (37) expression -> expression EQUAL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 37 (expression -> expression EQUAL expression .)
    AND             reduce using rule 37 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 37 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 37 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 37 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression EQUAL expression .)
    CONNECT         reduce using rule 37 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 37 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 37 (expression -> expression EQUAL expression .)
    ID              reduce using rule 37 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 37 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 37 (expression -> expression EQUAL expression .)
    IF              reduce using rule 37 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 37 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 37 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 37 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 37 (expression -> expression EQUAL expression .)
    PROCEDURE       reduce using rule 37 (expression -> expression EQUAL expression .)
    CALL            reduce using rule 37 (expression -> expression EQUAL expression .)
    FUNCTION        reduce using rule 37 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 37 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 37 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 37 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 37 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 37 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 37 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 37 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 37 (expression -> expression EQUAL expression .)
    $end            reduce using rule 37 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 37 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 37 (expression -> expression EQUAL expression .)
    ENDPROCEDURE    reduce using rule 37 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 37 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 37 (expression -> expression EQUAL expression .)
    ENDFUNCTION     reduce using rule 37 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 37 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 37 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 37 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 37 (expression -> expression EQUAL expression .)
    TO              reduce using rule 37 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 37 (expression -> expression EQUAL expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQUAL expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 74

    (38) expression -> expression NOT_EQUAL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CONNECT         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    PROCEDURE       reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CALL            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    FUNCTION        reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ENDFUNCTION     reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 75

    (39) expression -> expression LESS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 39 (expression -> expression LESS expression .)
    AND             reduce using rule 39 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 39 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression LESS expression .)
    LESS            reduce using rule 39 (expression -> expression LESS expression .)
    GREATER         reduce using rule 39 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression LESS expression .)
    CONNECT         reduce using rule 39 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 39 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 39 (expression -> expression LESS expression .)
    ID              reduce using rule 39 (expression -> expression LESS expression .)
    INPUT           reduce using rule 39 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 39 (expression -> expression LESS expression .)
    IF              reduce using rule 39 (expression -> expression LESS expression .)
    CASE            reduce using rule 39 (expression -> expression LESS expression .)
    FOR             reduce using rule 39 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 39 (expression -> expression LESS expression .)
    WHILE           reduce using rule 39 (expression -> expression LESS expression .)
    PROCEDURE       reduce using rule 39 (expression -> expression LESS expression .)
    CALL            reduce using rule 39 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 39 (expression -> expression LESS expression .)
    RETURN          reduce using rule 39 (expression -> expression LESS expression .)
    NOT             reduce using rule 39 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 39 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 39 (expression -> expression LESS expression .)
    CHAR            reduce using rule 39 (expression -> expression LESS expression .)
    STRING          reduce using rule 39 (expression -> expression LESS expression .)
    REAL            reduce using rule 39 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 39 (expression -> expression LESS expression .)
    $end            reduce using rule 39 (expression -> expression LESS expression .)
    COMMA           reduce using rule 39 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 39 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 39 (expression -> expression LESS expression .)
    ENDPROCEDURE    reduce using rule 39 (expression -> expression LESS expression .)
    ELSE            reduce using rule 39 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 39 (expression -> expression LESS expression .)
    ENDFUNCTION     reduce using rule 39 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression LESS expression .)
    NEXT            reduce using rule 39 (expression -> expression LESS expression .)
    THEN            reduce using rule 39 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 39 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 39 (expression -> expression LESS expression .)
    TO              reduce using rule 39 (expression -> expression LESS expression .)
    COLON           reduce using rule 39 (expression -> expression LESS expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 39 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 76

    (40) expression -> expression GREATER expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 40 (expression -> expression GREATER expression .)
    AND             reduce using rule 40 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 40 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression GREATER expression .)
    LESS            reduce using rule 40 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 40 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression GREATER expression .)
    CONNECT         reduce using rule 40 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 40 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 40 (expression -> expression GREATER expression .)
    ID              reduce using rule 40 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 40 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 40 (expression -> expression GREATER expression .)
    IF              reduce using rule 40 (expression -> expression GREATER expression .)
    CASE            reduce using rule 40 (expression -> expression GREATER expression .)
    FOR             reduce using rule 40 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 40 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 40 (expression -> expression GREATER expression .)
    PROCEDURE       reduce using rule 40 (expression -> expression GREATER expression .)
    CALL            reduce using rule 40 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 40 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 40 (expression -> expression GREATER expression .)
    NOT             reduce using rule 40 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 40 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 40 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 40 (expression -> expression GREATER expression .)
    STRING          reduce using rule 40 (expression -> expression GREATER expression .)
    REAL            reduce using rule 40 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 40 (expression -> expression GREATER expression .)
    $end            reduce using rule 40 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 40 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 40 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 40 (expression -> expression GREATER expression .)
    ENDPROCEDURE    reduce using rule 40 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 40 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 40 (expression -> expression GREATER expression .)
    ENDFUNCTION     reduce using rule 40 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 40 (expression -> expression GREATER expression .)
    THEN            reduce using rule 40 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 40 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> expression GREATER expression .)
    TO              reduce using rule 40 (expression -> expression GREATER expression .)
    COLON           reduce using rule 40 (expression -> expression GREATER expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 77

    (41) expression -> expression LESS_EQUAL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    CONNECT         reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    PROCEDURE       reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    CALL            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    FUNCTION        reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    ENDFUNCTION     reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 41 (expression -> expression LESS_EQUAL expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 41 (expression -> expression LESS_EQUAL expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression LESS_EQUAL expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 78

    (42) expression -> expression GREATER_EQUAL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    CONNECT         reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    PROCEDURE       reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    CALL            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    FUNCTION        reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    ENDFUNCTION     reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 42 (expression -> expression GREATER_EQUAL expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44

  ! MUL             [ reduce using rule 42 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression GREATER_EQUAL expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! CONNECT         [ shift and go to state 45 ]


state 79

    (43) expression -> expression MUL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 43 (expression -> expression MUL expression .)
    AND             reduce using rule 43 (expression -> expression MUL expression .)
    EQUAL           reduce using rule 43 (expression -> expression MUL expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression MUL expression .)
    LESS            reduce using rule 43 (expression -> expression MUL expression .)
    GREATER         reduce using rule 43 (expression -> expression MUL expression .)
    LESS_EQUAL      reduce using rule 43 (expression -> expression MUL expression .)
    GREATER_EQUAL   reduce using rule 43 (expression -> expression MUL expression .)
    MUL             reduce using rule 43 (expression -> expression MUL expression .)
    DIV             reduce using rule 43 (expression -> expression MUL expression .)
    PLUS            reduce using rule 43 (expression -> expression MUL expression .)
    MINUS           reduce using rule 43 (expression -> expression MUL expression .)
    CONNECT         reduce using rule 43 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 43 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 43 (expression -> expression MUL expression .)
    ID              reduce using rule 43 (expression -> expression MUL expression .)
    INPUT           reduce using rule 43 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 43 (expression -> expression MUL expression .)
    IF              reduce using rule 43 (expression -> expression MUL expression .)
    CASE            reduce using rule 43 (expression -> expression MUL expression .)
    FOR             reduce using rule 43 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 43 (expression -> expression MUL expression .)
    WHILE           reduce using rule 43 (expression -> expression MUL expression .)
    PROCEDURE       reduce using rule 43 (expression -> expression MUL expression .)
    CALL            reduce using rule 43 (expression -> expression MUL expression .)
    FUNCTION        reduce using rule 43 (expression -> expression MUL expression .)
    RETURN          reduce using rule 43 (expression -> expression MUL expression .)
    NOT             reduce using rule 43 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 43 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 43 (expression -> expression MUL expression .)
    CHAR            reduce using rule 43 (expression -> expression MUL expression .)
    STRING          reduce using rule 43 (expression -> expression MUL expression .)
    REAL            reduce using rule 43 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 43 (expression -> expression MUL expression .)
    $end            reduce using rule 43 (expression -> expression MUL expression .)
    COMMA           reduce using rule 43 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 43 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 43 (expression -> expression MUL expression .)
    ENDPROCEDURE    reduce using rule 43 (expression -> expression MUL expression .)
    ELSE            reduce using rule 43 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 43 (expression -> expression MUL expression .)
    ENDFUNCTION     reduce using rule 43 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression MUL expression .)
    NEXT            reduce using rule 43 (expression -> expression MUL expression .)
    THEN            reduce using rule 43 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 43 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> expression MUL expression .)
    TO              reduce using rule 43 (expression -> expression MUL expression .)
    COLON           reduce using rule 43 (expression -> expression MUL expression .)

  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 80

    (44) expression -> expression DIV expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 44 (expression -> expression DIV expression .)
    AND             reduce using rule 44 (expression -> expression DIV expression .)
    EQUAL           reduce using rule 44 (expression -> expression DIV expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression DIV expression .)
    LESS            reduce using rule 44 (expression -> expression DIV expression .)
    GREATER         reduce using rule 44 (expression -> expression DIV expression .)
    LESS_EQUAL      reduce using rule 44 (expression -> expression DIV expression .)
    GREATER_EQUAL   reduce using rule 44 (expression -> expression DIV expression .)
    MUL             reduce using rule 44 (expression -> expression DIV expression .)
    DIV             reduce using rule 44 (expression -> expression DIV expression .)
    PLUS            reduce using rule 44 (expression -> expression DIV expression .)
    MINUS           reduce using rule 44 (expression -> expression DIV expression .)
    CONNECT         reduce using rule 44 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 44 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 44 (expression -> expression DIV expression .)
    ID              reduce using rule 44 (expression -> expression DIV expression .)
    INPUT           reduce using rule 44 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 44 (expression -> expression DIV expression .)
    IF              reduce using rule 44 (expression -> expression DIV expression .)
    CASE            reduce using rule 44 (expression -> expression DIV expression .)
    FOR             reduce using rule 44 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 44 (expression -> expression DIV expression .)
    WHILE           reduce using rule 44 (expression -> expression DIV expression .)
    PROCEDURE       reduce using rule 44 (expression -> expression DIV expression .)
    CALL            reduce using rule 44 (expression -> expression DIV expression .)
    FUNCTION        reduce using rule 44 (expression -> expression DIV expression .)
    RETURN          reduce using rule 44 (expression -> expression DIV expression .)
    NOT             reduce using rule 44 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 44 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 44 (expression -> expression DIV expression .)
    CHAR            reduce using rule 44 (expression -> expression DIV expression .)
    STRING          reduce using rule 44 (expression -> expression DIV expression .)
    REAL            reduce using rule 44 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 44 (expression -> expression DIV expression .)
    $end            reduce using rule 44 (expression -> expression DIV expression .)
    COMMA           reduce using rule 44 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 44 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 44 (expression -> expression DIV expression .)
    ENDPROCEDURE    reduce using rule 44 (expression -> expression DIV expression .)
    ELSE            reduce using rule 44 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 44 (expression -> expression DIV expression .)
    ENDFUNCTION     reduce using rule 44 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression DIV expression .)
    NEXT            reduce using rule 44 (expression -> expression DIV expression .)
    THEN            reduce using rule 44 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 44 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> expression DIV expression .)
    TO              reduce using rule 44 (expression -> expression DIV expression .)
    COLON           reduce using rule 44 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 81

    (47) expression -> expression PLUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 47 (expression -> expression PLUS expression .)
    AND             reduce using rule 47 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 47 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression PLUS expression .)
    LESS            reduce using rule 47 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 47 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 47 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 47 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 47 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 47 (expression -> expression PLUS expression .)
    CONNECT         reduce using rule 47 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 47 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 47 (expression -> expression PLUS expression .)
    ID              reduce using rule 47 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 47 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 47 (expression -> expression PLUS expression .)
    IF              reduce using rule 47 (expression -> expression PLUS expression .)
    CASE            reduce using rule 47 (expression -> expression PLUS expression .)
    FOR             reduce using rule 47 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 47 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 47 (expression -> expression PLUS expression .)
    PROCEDURE       reduce using rule 47 (expression -> expression PLUS expression .)
    CALL            reduce using rule 47 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 47 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 47 (expression -> expression PLUS expression .)
    NOT             reduce using rule 47 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 47 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 47 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 47 (expression -> expression PLUS expression .)
    STRING          reduce using rule 47 (expression -> expression PLUS expression .)
    REAL            reduce using rule 47 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 47 (expression -> expression PLUS expression .)
    $end            reduce using rule 47 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 47 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 47 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 47 (expression -> expression PLUS expression .)
    ENDPROCEDURE    reduce using rule 47 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 47 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 47 (expression -> expression PLUS expression .)
    ENDFUNCTION     reduce using rule 47 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 47 (expression -> expression PLUS expression .)
    THEN            reduce using rule 47 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 47 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 47 (expression -> expression PLUS expression .)
    TO              reduce using rule 47 (expression -> expression PLUS expression .)
    COLON           reduce using rule 47 (expression -> expression PLUS expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 82

    (48) expression -> expression MINUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    OR              reduce using rule 48 (expression -> expression MINUS expression .)
    AND             reduce using rule 48 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 48 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression MINUS expression .)
    LESS            reduce using rule 48 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 48 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 48 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 48 (expression -> expression MINUS expression .)
    CONNECT         reduce using rule 48 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 48 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 48 (expression -> expression MINUS expression .)
    ID              reduce using rule 48 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 48 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 48 (expression -> expression MINUS expression .)
    IF              reduce using rule 48 (expression -> expression MINUS expression .)
    CASE            reduce using rule 48 (expression -> expression MINUS expression .)
    FOR             reduce using rule 48 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 48 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 48 (expression -> expression MINUS expression .)
    PROCEDURE       reduce using rule 48 (expression -> expression MINUS expression .)
    CALL            reduce using rule 48 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 48 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 48 (expression -> expression MINUS expression .)
    NOT             reduce using rule 48 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 48 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 48 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 48 (expression -> expression MINUS expression .)
    STRING          reduce using rule 48 (expression -> expression MINUS expression .)
    REAL            reduce using rule 48 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 48 (expression -> expression MINUS expression .)
    $end            reduce using rule 48 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 48 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 48 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 48 (expression -> expression MINUS expression .)
    ENDPROCEDURE    reduce using rule 48 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 48 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 48 (expression -> expression MINUS expression .)
    ENDFUNCTION     reduce using rule 48 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 48 (expression -> expression MINUS expression .)
    THEN            reduce using rule 48 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 48 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> expression MINUS expression .)
    TO              reduce using rule 48 (expression -> expression MINUS expression .)
    COLON           reduce using rule 48 (expression -> expression MINUS expression .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 83

    (49) expression -> expression CONNECT expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
    DECLARE         reduce using rule 49 (expression -> expression CONNECT expression .)
    CONSTANT        reduce using rule 49 (expression -> expression CONNECT expression .)
    ID              reduce using rule 49 (expression -> expression CONNECT expression .)
    INPUT           reduce using rule 49 (expression -> expression CONNECT expression .)
    OUTPUT          reduce using rule 49 (expression -> expression CONNECT expression .)
    IF              reduce using rule 49 (expression -> expression CONNECT expression .)
    CASE            reduce using rule 49 (expression -> expression CONNECT expression .)
    FOR             reduce using rule 49 (expression -> expression CONNECT expression .)
    REPEAT          reduce using rule 49 (expression -> expression CONNECT expression .)
    WHILE           reduce using rule 49 (expression -> expression CONNECT expression .)
    PROCEDURE       reduce using rule 49 (expression -> expression CONNECT expression .)
    CALL            reduce using rule 49 (expression -> expression CONNECT expression .)
    FUNCTION        reduce using rule 49 (expression -> expression CONNECT expression .)
    RETURN          reduce using rule 49 (expression -> expression CONNECT expression .)
    NOT             reduce using rule 49 (expression -> expression CONNECT expression .)
    LEFT_PAREN      reduce using rule 49 (expression -> expression CONNECT expression .)
    BOOLEAN         reduce using rule 49 (expression -> expression CONNECT expression .)
    CHAR            reduce using rule 49 (expression -> expression CONNECT expression .)
    STRING          reduce using rule 49 (expression -> expression CONNECT expression .)
    REAL            reduce using rule 49 (expression -> expression CONNECT expression .)
    INTEGER         reduce using rule 49 (expression -> expression CONNECT expression .)
    $end            reduce using rule 49 (expression -> expression CONNECT expression .)
    COMMA           reduce using rule 49 (expression -> expression CONNECT expression .)
    UNTIL           reduce using rule 49 (expression -> expression CONNECT expression .)
    ENDWHILE        reduce using rule 49 (expression -> expression CONNECT expression .)
    ENDPROCEDURE    reduce using rule 49 (expression -> expression CONNECT expression .)
    ELSE            reduce using rule 49 (expression -> expression CONNECT expression .)
    ENDIF           reduce using rule 49 (expression -> expression CONNECT expression .)
    ENDFUNCTION     reduce using rule 49 (expression -> expression CONNECT expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression CONNECT expression .)
    NEXT            reduce using rule 49 (expression -> expression CONNECT expression .)
    THEN            reduce using rule 49 (expression -> expression CONNECT expression .)
    RIGHT_PAREN     reduce using rule 49 (expression -> expression CONNECT expression .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> expression CONNECT expression .)
    TO              reduce using rule 49 (expression -> expression CONNECT expression .)
    COLON           reduce using rule 49 (expression -> expression CONNECT expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! OR              [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! EQUAL           [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! LESS            [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! GREATER         [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! MUL             [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression CONNECT expression .) ]
  ! CONNECT         [ reduce using rule 49 (expression -> expression CONNECT expression .) ]


state 84

    (14) statement -> INPUT ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    indexes                        shift and go to state 107
    expression                     shift and go to state 66

state 85

    (16) output_expression -> output_expression COMMA . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 108

state 86

    (33) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (11) indexes -> . indexes COMMA expression
    (12) indexes -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    indexes                        shift and go to state 109
    expression                     shift and go to state 66

state 87

    (18) statement -> IF expression THEN . statements ELSE statements ENDIF
    (19) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statements                     shift and go to state 110
    statement                      shift and go to state 2

state 88

    (20) statement -> CASE OF ID . cases ENDCASE
    (21) cases -> . cases case
    (22) cases -> . case
    (23) case -> . case_expression COLON statements SEMICOLON
    (24) case -> . otherwise_statement SEMICOLON
    (25) case_expression -> . expression TO expression
    (26) case_expression -> . expression
    (27) otherwise_statement -> . OTHERWISE COLON statements
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    OTHERWISE       shift and go to state 116
    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    cases                          shift and go to state 111
    case                           shift and go to state 112
    case_expression                shift and go to state 113
    otherwise_statement            shift and go to state 114
    expression                     shift and go to state 115

state 89

    (28) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 117

state 90

    (29) statement -> REPEAT statements UNTIL . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 118

state 91

    (30) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDWHILE        shift and go to state 119
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statement                      shift and go to state 27

state 92

    (47) expression -> expression PLUS . expression
    (46) expression -> PLUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 120

state 93

    (48) expression -> expression MINUS . expression
    (45) expression -> MINUS . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 121

state 94

    (62) statement -> PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (50) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (56) declare_parameters -> . declare_parameters COMMA declare_parameter
    (57) declare_parameters -> . declare_parameter
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (58) declare_parameter -> . ID COLON ID
    (59) declare_parameter -> . ID COLON ARRAY

    ID              shift and go to state 122
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    declare_parameters             shift and go to state 123
    expression                     shift and go to state 56
    declare_parameter              shift and go to state 124

state 95

    (63) statement -> PROCEDURE ID statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 125
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 96

    (50) expression -> LEFT_PAREN expression RIGHT_PAREN .

    OR              reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONNECT         reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PROCEDURE       reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CALL            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FUNCTION        reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RETURN          reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 50 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 97

    (64) statement -> CALL ID LEFT_PAREN . parameters RIGHT_PAREN
    (60) parameters -> . parameters COMMA expression
    (61) parameters -> . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    parameters                     shift and go to state 126
    expression                     shift and go to state 69

state 98

    (66) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (56) declare_parameters -> . declare_parameters COMMA declare_parameter
    (57) declare_parameters -> . declare_parameter
    (58) declare_parameter -> . ID COLON ID
    (59) declare_parameter -> . ID COLON ARRAY

    ID              shift and go to state 127

    declare_parameters             shift and go to state 128
    declare_parameter              shift and go to state 124

state 99

    (68) statement -> FUNCTION ID RETURNS . ID statements ENDFUNCTION
    (69) statement -> FUNCTION ID RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 129
    ARRAY           shift and go to state 130


state 100

    (3) statement -> DECLARE ID COLON ID .

    DECLARE         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    PROCEDURE       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CALL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    FUNCTION        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    RETURN          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    MINUS           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    PLUS            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    ENDFUNCTION     reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    SEMICOLON       reduce using rule 3 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 3 (statement -> DECLARE ID COLON ID .)


state 101

    (5) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 131


state 102

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE . ASSIGN expression
    (33) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          shift and go to state 132
    OR              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 103

    (11) indexes -> indexes COMMA . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 133

state 104

    (70) expression -> ID LEFT_PAREN parameters RIGHT_PAREN .

    OR              reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 70 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)


state 105

    (60) parameters -> parameters COMMA . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 134

state 106

    (4) statement -> CONSTANT ID EQUAL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    DECLARE         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    PROCEDURE       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CALL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    FUNCTION        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    RETURN          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDPROCEDURE    reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    ENDFUNCTION     reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    SEMICOLON       reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 4 (statement -> CONSTANT ID EQUAL expression .) ]


state 107

    (14) statement -> INPUT ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 135
    COMMA           shift and go to state 103


state 108

    (16) output_expression -> output_expression COMMA expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    PROCEDURE       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CALL            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    FUNCTION        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    RETURN          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    ENDFUNCTION     reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    SEMICOLON       reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 16 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 16 (output_expression -> output_expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 16 (output_expression -> output_expression COMMA expression .) ]


state 109

    (33) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (11) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 136
    COMMA           shift and go to state 103


state 110

    (18) statement -> IF expression THEN statements . ELSE statements ENDIF
    (19) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ELSE            shift and go to state 137
    ENDIF           shift and go to state 138
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statement                      shift and go to state 27

state 111

    (20) statement -> CASE OF ID cases . ENDCASE
    (21) cases -> cases . case
    (23) case -> . case_expression COLON statements SEMICOLON
    (24) case -> . otherwise_statement SEMICOLON
    (25) case_expression -> . expression TO expression
    (26) case_expression -> . expression
    (27) otherwise_statement -> . OTHERWISE COLON statements
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDCASE         shift and go to state 139
    OTHERWISE       shift and go to state 116
    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    case                           shift and go to state 140
    case_expression                shift and go to state 113
    otherwise_statement            shift and go to state 114
    expression                     shift and go to state 115

state 112

    (22) cases -> case .

    ENDCASE         reduce using rule 22 (cases -> case .)
    OTHERWISE       reduce using rule 22 (cases -> case .)
    ID              reduce using rule 22 (cases -> case .)
    NOT             reduce using rule 22 (cases -> case .)
    MINUS           reduce using rule 22 (cases -> case .)
    PLUS            reduce using rule 22 (cases -> case .)
    LEFT_PAREN      reduce using rule 22 (cases -> case .)
    BOOLEAN         reduce using rule 22 (cases -> case .)
    CHAR            reduce using rule 22 (cases -> case .)
    STRING          reduce using rule 22 (cases -> case .)
    REAL            reduce using rule 22 (cases -> case .)
    INTEGER         reduce using rule 22 (cases -> case .)


state 113

    (23) case -> case_expression . COLON statements SEMICOLON

    COLON           shift and go to state 141


state 114

    (24) case -> otherwise_statement . SEMICOLON

    SEMICOLON       shift and go to state 142


state 115

    (25) case_expression -> expression . TO expression
    (26) case_expression -> expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    TO              shift and go to state 143
    COLON           reduce using rule 26 (case_expression -> expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 116

    (27) otherwise_statement -> OTHERWISE . COLON statements

    COLON           shift and go to state 144


state 117

    (28) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    TO              shift and go to state 145
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 118

    (29) statement -> REPEAT statements UNTIL expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    PROCEDURE       reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    CALL            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    FUNCTION        reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    RETURN          reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ENDPROCEDURE    reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    ENDFUNCTION     reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    SEMICOLON       reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 29 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 29 (statement -> REPEAT statements UNTIL expression .) ]
  ! PLUS            [ reduce using rule 29 (statement -> REPEAT statements UNTIL expression .) ]


state 119

    (30) statement -> WHILE expression statements ENDWHILE .

    DECLARE         reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    PROCEDURE       reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    CALL            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    FUNCTION        reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    RETURN          reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    MINUS           reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    PLUS            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    SEMICOLON       reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 30 (statement -> WHILE expression statements ENDWHILE .)


state 120

    (47) expression -> expression PLUS expression .
    (46) expression -> PLUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! reduce/reduce conflict for OR resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 46 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 46 (expression -> PLUS expression .)
    OR              reduce using rule 46 (expression -> PLUS expression .)
    AND             reduce using rule 46 (expression -> PLUS expression .)
    EQUAL           reduce using rule 46 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> PLUS expression .)
    LESS            reduce using rule 46 (expression -> PLUS expression .)
    GREATER         reduce using rule 46 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 46 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 46 (expression -> PLUS expression .)
    MUL             reduce using rule 46 (expression -> PLUS expression .)
    DIV             reduce using rule 46 (expression -> PLUS expression .)
    PLUS            reduce using rule 46 (expression -> PLUS expression .)
    MINUS           reduce using rule 46 (expression -> PLUS expression .)
    CONNECT         reduce using rule 46 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 46 (expression -> PLUS expression .)
    DECLARE         reduce using rule 46 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 46 (expression -> PLUS expression .)
    ID              reduce using rule 46 (expression -> PLUS expression .)
    INPUT           reduce using rule 46 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 46 (expression -> PLUS expression .)
    IF              reduce using rule 46 (expression -> PLUS expression .)
    CASE            reduce using rule 46 (expression -> PLUS expression .)
    FOR             reduce using rule 46 (expression -> PLUS expression .)
    REPEAT          reduce using rule 46 (expression -> PLUS expression .)
    WHILE           reduce using rule 46 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 46 (expression -> PLUS expression .)
    CALL            reduce using rule 46 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 46 (expression -> PLUS expression .)
    RETURN          reduce using rule 46 (expression -> PLUS expression .)
    NOT             reduce using rule 46 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 46 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 46 (expression -> PLUS expression .)
    CHAR            reduce using rule 46 (expression -> PLUS expression .)
    STRING          reduce using rule 46 (expression -> PLUS expression .)
    REAL            reduce using rule 46 (expression -> PLUS expression .)
    INTEGER         reduce using rule 46 (expression -> PLUS expression .)
    NEXT            reduce using rule 46 (expression -> PLUS expression .)

  ! OR              [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! CONNECT         [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! DECLARE         [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! CONSTANT        [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! ID              [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! INPUT           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! OUTPUT          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! IF              [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! CASE            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! FOR             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! REPEAT          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! WHILE           [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! PROCEDURE       [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! CALL            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! FUNCTION        [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! RETURN          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! BOOLEAN         [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! CHAR            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! STRING          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! REAL            [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! INTEGER         [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 121

    (48) expression -> expression MINUS expression .
    (45) expression -> MINUS expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! reduce/reduce conflict for OR resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 45 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 45 (expression -> MINUS expression .)
    OR              reduce using rule 45 (expression -> MINUS expression .)
    AND             reduce using rule 45 (expression -> MINUS expression .)
    EQUAL           reduce using rule 45 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> MINUS expression .)
    LESS            reduce using rule 45 (expression -> MINUS expression .)
    GREATER         reduce using rule 45 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> MINUS expression .)
    MUL             reduce using rule 45 (expression -> MINUS expression .)
    DIV             reduce using rule 45 (expression -> MINUS expression .)
    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    CONNECT         reduce using rule 45 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 45 (expression -> MINUS expression .)
    DECLARE         reduce using rule 45 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 45 (expression -> MINUS expression .)
    ID              reduce using rule 45 (expression -> MINUS expression .)
    INPUT           reduce using rule 45 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 45 (expression -> MINUS expression .)
    IF              reduce using rule 45 (expression -> MINUS expression .)
    CASE            reduce using rule 45 (expression -> MINUS expression .)
    FOR             reduce using rule 45 (expression -> MINUS expression .)
    REPEAT          reduce using rule 45 (expression -> MINUS expression .)
    WHILE           reduce using rule 45 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 45 (expression -> MINUS expression .)
    CALL            reduce using rule 45 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 45 (expression -> MINUS expression .)
    RETURN          reduce using rule 45 (expression -> MINUS expression .)
    NOT             reduce using rule 45 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 45 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 45 (expression -> MINUS expression .)
    CHAR            reduce using rule 45 (expression -> MINUS expression .)
    STRING          reduce using rule 45 (expression -> MINUS expression .)
    REAL            reduce using rule 45 (expression -> MINUS expression .)
    INTEGER         reduce using rule 45 (expression -> MINUS expression .)
    NEXT            reduce using rule 45 (expression -> MINUS expression .)

  ! OR              [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! CONNECT         [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! DECLARE         [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! CONSTANT        [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! ID              [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! INPUT           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! OUTPUT          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! FOR             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! REPEAT          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! PROCEDURE       [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! CALL            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! FUNCTION        [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! RETURN          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! BOOLEAN         [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! CHAR            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 33 ]
  ! AND             [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESS_EQUAL      [ shift and go to state 39 ]
  ! GREATER_EQUAL   [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! CONNECT         [ shift and go to state 45 ]


state 122

    (32) expression -> ID .
    (33) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (70) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> ID . LEFT_PAREN RIGHT_PAREN
    (58) declare_parameter -> ID . COLON ID
    (59) declare_parameter -> ID . COLON ARRAY

    RIGHT_PAREN     reduce using rule 32 (expression -> ID .)
    OR              reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    EQUAL           reduce using rule 32 (expression -> ID .)
    NOT_EQUAL       reduce using rule 32 (expression -> ID .)
    LESS            reduce using rule 32 (expression -> ID .)
    GREATER         reduce using rule 32 (expression -> ID .)
    LESS_EQUAL      reduce using rule 32 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 32 (expression -> ID .)
    MUL             reduce using rule 32 (expression -> ID .)
    DIV             reduce using rule 32 (expression -> ID .)
    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    CONNECT         reduce using rule 32 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 86
    LEFT_PAREN      shift and go to state 31
    COLON           shift and go to state 146


state 123

    (62) statement -> PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (56) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 147
    COMMA           shift and go to state 148


state 124

    (57) declare_parameters -> declare_parameter .

    RIGHT_PAREN     reduce using rule 57 (declare_parameters -> declare_parameter .)
    COMMA           reduce using rule 57 (declare_parameters -> declare_parameter .)


state 125

    (63) statement -> PROCEDURE ID statements ENDPROCEDURE .

    DECLARE         reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ID              reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INPUT           reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IF              reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CASE            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FOR             reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REPEAT          reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WHILE           reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CALL            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    RETURN          reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NOT             reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    MINUS           reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PLUS            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CHAR            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    STRING          reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REAL            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INTEGER         reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    $end            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    UNTIL           reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ELSE            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDIF           reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NEXT            reduce using rule 63 (statement -> PROCEDURE ID statements ENDPROCEDURE .)


state 126

    (64) statement -> CALL ID LEFT_PAREN parameters . RIGHT_PAREN
    (60) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 149
    COMMA           shift and go to state 105


state 127

    (58) declare_parameter -> ID . COLON ID
    (59) declare_parameter -> ID . COLON ARRAY

    COLON           shift and go to state 146


state 128

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (56) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 150
    COMMA           shift and go to state 148


state 129

    (68) statement -> FUNCTION ID RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 151
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 130

    (69) statement -> FUNCTION ID RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 152
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 131

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (6) dimensions -> . dimensions COMMA dimension
    (7) dimensions -> . dimension
    (8) dimension -> . expression COLON expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    dimensions                     shift and go to state 153
    dimension                      shift and go to state 154
    expression                     shift and go to state 155

state 132

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 156

state 133

    (11) indexes -> indexes COMMA expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_SQUARE    reduce using rule 11 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 11 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 134

    (60) parameters -> parameters COMMA expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_PAREN     reduce using rule 60 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 60 (parameters -> parameters COMMA expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 135

    (14) statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DECLARE         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 14 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 136

    (33) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    OR              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 33 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 137

    (18) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statements                     shift and go to state 157
    statement                      shift and go to state 2

state 138

    (19) statement -> IF expression THEN statements ENDIF .

    DECLARE         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    PROCEDURE       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CALL            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    FUNCTION        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    RETURN          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    MINUS           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    PLUS            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDPROCEDURE    reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    ENDFUNCTION     reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    SEMICOLON       reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 19 (statement -> IF expression THEN statements ENDIF .)


state 139

    (20) statement -> CASE OF ID cases ENDCASE .

    DECLARE         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    PROCEDURE       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CALL            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    FUNCTION        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    RETURN          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    MINUS           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    PLUS            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_PAREN      reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    BOOLEAN         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    ENDFUNCTION     reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    SEMICOLON       reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 20 (statement -> CASE OF ID cases ENDCASE .)


state 140

    (21) cases -> cases case .

    ENDCASE         reduce using rule 21 (cases -> cases case .)
    OTHERWISE       reduce using rule 21 (cases -> cases case .)
    ID              reduce using rule 21 (cases -> cases case .)
    NOT             reduce using rule 21 (cases -> cases case .)
    MINUS           reduce using rule 21 (cases -> cases case .)
    PLUS            reduce using rule 21 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 21 (cases -> cases case .)
    BOOLEAN         reduce using rule 21 (cases -> cases case .)
    CHAR            reduce using rule 21 (cases -> cases case .)
    STRING          reduce using rule 21 (cases -> cases case .)
    REAL            reduce using rule 21 (cases -> cases case .)
    INTEGER         reduce using rule 21 (cases -> cases case .)


state 141

    (23) case -> case_expression COLON . statements SEMICOLON
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 158
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 142

    (24) case -> otherwise_statement SEMICOLON .

    ENDCASE         reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    OTHERWISE       reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    ID              reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    NOT             reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    MINUS           reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    PLUS            reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    LEFT_PAREN      reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    BOOLEAN         reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    CHAR            reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    STRING          reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    REAL            reduce using rule 24 (case -> otherwise_statement SEMICOLON .)
    INTEGER         reduce using rule 24 (case -> otherwise_statement SEMICOLON .)


state 143

    (25) case_expression -> expression TO . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 159

state 144

    (27) otherwise_statement -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 160
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 145

    (28) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 161

state 146

    (58) declare_parameter -> ID COLON . ID
    (59) declare_parameter -> ID COLON . ARRAY

    ID              shift and go to state 162
    ARRAY           shift and go to state 163


state 147

    (62) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 164
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 148

    (56) declare_parameters -> declare_parameters COMMA . declare_parameter
    (58) declare_parameter -> . ID COLON ID
    (59) declare_parameter -> . ID COLON ARRAY

    ID              shift and go to state 127

    declare_parameter              shift and go to state 165

state 149

    (64) statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .

    DECLARE         reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 64 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)


state 150

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION

    RETURNS         shift and go to state 166


state 151

    (68) statement -> FUNCTION ID RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDFUNCTION     shift and go to state 167
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 152

    (69) statement -> FUNCTION ID RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDFUNCTION     shift and go to state 168
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 153

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (6) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 169
    COMMA           shift and go to state 170


state 154

    (7) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimension .)


state 155

    (8) dimension -> expression . COLON expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    COLON           shift and go to state 171
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 156

    (10) statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DECLARE         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CONSTANT        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ID              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INPUT           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OUTPUT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    IF              reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CASE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FOR             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REPEAT          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    WHILE           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    PROCEDURE       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CALL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    FUNCTION        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    RETURN          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NOT             reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    LEFT_PAREN      reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    BOOLEAN         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    CHAR            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    STRING          reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    REAL            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    INTEGER         reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    $end            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    UNTIL           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDWHILE        reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ELSE            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDIF           reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    ENDFUNCTION     reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    SEMICOLON       reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    NEXT            reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45

  ! MINUS           [ reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 10 (statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression .) ]


state 157

    (18) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDIF           shift and go to state 172
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statement                      shift and go to state 27

state 158

    (23) case -> case_expression COLON statements . SEMICOLON
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    SEMICOLON       shift and go to state 173
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 159

    (25) case_expression -> expression TO expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    COLON           reduce using rule 25 (case_expression -> expression TO expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 160

    (27) otherwise_statement -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    SEMICOLON       reduce using rule 27 (otherwise_statement -> OTHERWISE COLON statements .)
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 161

    (28) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    CONNECT         shift and go to state 45
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statements                     shift and go to state 174
    statement                      shift and go to state 2

state 162

    (58) declare_parameter -> ID COLON ID .

    RIGHT_PAREN     reduce using rule 58 (declare_parameter -> ID COLON ID .)
    COMMA           reduce using rule 58 (declare_parameter -> ID COLON ID .)


state 163

    (59) declare_parameter -> ID COLON ARRAY .

    RIGHT_PAREN     reduce using rule 59 (declare_parameter -> ID COLON ARRAY .)
    COMMA           reduce using rule 59 (declare_parameter -> ID COLON ARRAY .)


state 164

    (62) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 175
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 165

    (56) declare_parameters -> declare_parameters COMMA declare_parameter .

    RIGHT_PAREN     reduce using rule 56 (declare_parameters -> declare_parameters COMMA declare_parameter .)
    COMMA           reduce using rule 56 (declare_parameters -> declare_parameters COMMA declare_parameter .)


state 166

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION

    ID              shift and go to state 176
    ARRAY           shift and go to state 177


state 167

    (68) statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .

    DECLARE         reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 68 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)


state 168

    (69) statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .

    DECLARE         reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 69 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)


state 169

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 178


state 170

    (6) dimensions -> dimensions COMMA . dimension
    (8) dimension -> . expression COLON expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    dimension                      shift and go to state 179
    expression                     shift and go to state 155

state 171

    (8) dimension -> expression COLON . expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 49
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 180

state 172

    (18) statement -> IF expression THEN statements ELSE statements ENDIF .

    DECLARE         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PROCEDURE       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CALL            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FUNCTION        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    RETURN          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MINUS           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PLUS            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDPROCEDURE    reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDFUNCTION     reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEMICOLON       reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 18 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 173

    (23) case -> case_expression COLON statements SEMICOLON .

    ENDCASE         reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    OTHERWISE       reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    ID              reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    NOT             reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    MINUS           reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    PLUS            reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_PAREN      reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    BOOLEAN         reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    CHAR            reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    STRING          reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    REAL            reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)
    INTEGER         reduce using rule 23 (case -> case_expression COLON statements SEMICOLON .)


state 174

    (28) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    NEXT            shift and go to state 181
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    expression                     shift and go to state 6
    statement                      shift and go to state 27

state 175

    (62) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DECLARE         reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 62 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 176

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 182
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 177

    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statements                     shift and go to state 183
    statement                      shift and go to state 2
    expression                     shift and go to state 6

state 178

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 184


state 179

    (6) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 6 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 6 (dimensions -> dimensions COMMA dimension .)


state 180

    (8) dimension -> expression COLON expression .
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (37) expression -> expression . EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . LESS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS_EQUAL expression
    (42) expression -> expression . GREATER_EQUAL expression
    (43) expression -> expression . MUL expression
    (44) expression -> expression . DIV expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . CONNECT expression

    RIGHT_SQUARE    reduce using rule 8 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 8 (dimension -> expression COLON expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34
    EQUAL           shift and go to state 35
    NOT_EQUAL       shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESS_EQUAL      shift and go to state 39
    GREATER_EQUAL   shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    CONNECT         shift and go to state 45


state 181

    (28) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 185


state 182

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDFUNCTION     shift and go to state 186
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 183

    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DECLARE ID COLON ID
    (4) statement -> . CONSTANT ID EQUAL expression
    (5) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) statement -> . ID ASSIGN expression
    (10) statement -> . ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression
    (13) statement -> . INPUT ID
    (14) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (15) statement -> . OUTPUT output_expression
    (18) statement -> . IF expression THEN statements ELSE statements ENDIF
    (19) statement -> . IF expression THEN statements ENDIF
    (20) statement -> . CASE OF ID cases ENDCASE
    (28) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (29) statement -> . REPEAT statements UNTIL expression
    (30) statement -> . WHILE expression statements ENDWHILE
    (31) statement -> . expression
    (62) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (63) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (64) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (65) statement -> . CALL ID
    (66) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (67) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (68) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (69) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (72) statement -> . RETURN expression
    (32) expression -> . ID
    (33) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . NOT expression
    (37) expression -> . expression EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression LESS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS_EQUAL expression
    (42) expression -> . expression GREATER_EQUAL expression
    (43) expression -> . expression MUL expression
    (44) expression -> . expression DIV expression
    (45) expression -> . MINUS expression
    (46) expression -> . PLUS expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression CONNECT expression
    (50) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (51) expression -> . BOOLEAN
    (52) expression -> . CHAR
    (53) expression -> . STRING
    (54) expression -> . REAL
    (55) expression -> . INTEGER
    (70) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (71) expression -> . ID LEFT_PAREN RIGHT_PAREN

    ENDFUNCTION     shift and go to state 187
    DECLARE         shift and go to state 3
    CONSTANT        shift and go to state 5
    ID              shift and go to state 4
    INPUT           shift and go to state 7
    OUTPUT          shift and go to state 8
    IF              shift and go to state 9
    CASE            shift and go to state 10
    FOR             shift and go to state 11
    REPEAT          shift and go to state 12
    WHILE           shift and go to state 13
    PROCEDURE       shift and go to state 14
    CALL            shift and go to state 16
    FUNCTION        shift and go to state 17
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    MINUS           shift and go to state 20
    PLUS            shift and go to state 21
    LEFT_PAREN      shift and go to state 15
    BOOLEAN         shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 24
    REAL            shift and go to state 25
    INTEGER         shift and go to state 26

    statement                      shift and go to state 27
    expression                     shift and go to state 6

state 184

    (5) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DECLARE         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 5 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 185

    (28) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DECLARE         reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PROCEDURE       reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CALL            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FUNCTION        reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    RETURN          reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MINUS           reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PLUS            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEMICOLON       reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 28 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)


state 186

    (66) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DECLARE         reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 66 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 187

    (67) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DECLARE         reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 67 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_PAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for MUL in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: reduce/reduce conflict in state 120 resolved using rule (expression -> PLUS expression)
WARNING: rejected rule (expression -> expression PLUS expression) in state 120
WARNING: reduce/reduce conflict in state 121 resolved using rule (expression -> MINUS expression)
WARNING: rejected rule (expression -> expression MINUS expression) in state 121
