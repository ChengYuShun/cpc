
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsleftPLUSMINUSleftMULDIVleftLESSGREATERLESS_EQUALGREATER_EQUALEQUALNOT_EQUALleftANDleftORleftNOTAND ARRAY ASSIGN BOOLEAN CALL CASE CHAR CLASS COLON COMMA CONSTANT DECLARE DIV DOT ELSE ENDCASE ENDFUNCTION ENDIF ENDPROCEDURE ENDTYPE ENDWHILE EQUAL FOR FUNCTION GREATER GREATER_EQUAL ID IF INHERITS INPUT INTEGER LEFT_BRACE LEFT_PAREN LEFT_SQUARE LESS LESS_EQUAL MINUS MUL NEW NEXT NOT NOT_EQUAL OF OR OTHERWISE OUTPUT PLUS POINTER PRIVATE PROCEDURE PUBLIC REAL REPEAT RETURN RETURNS RIGHT_BRACE RIGHT_PAREN RIGHT_SQUARE STRING THEN TO TYPE UNTIL WHILEstatements : statements statement\n            | statementstatement : DECLARE ID COLON IDstatement : CONSTANT ID EQUAL expressionstatement : DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF IDdimensions : dimensions COMMA dimension\n        | dimensiondimension : expression COLON expressionstatement : ID ASSIGN expressionstatement : ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expressionindexes : indexes COMMA expression\n            | expressionstatement : INPUT IDstatement : INPUT ID LEFT_SQUARE indexes RIGHT_SQUAREstatement : OUTPUT output_expressionoutput_expression : output_expression COMMA expression\n            | expressionstatement : IF expression THEN statements ELSE statements ENDIF\n            | IF expression THEN statements ENDIFstatement : CASE OF ID cases ENDCASEcases : cases case\n            | case\n\n        case : indexes COLON statements\n            | OTHERWISE COLON statementsstatement : FOR ID ASSIGN expression TO expression statements NEXT IDstatement : REPEAT statements UNTIL expressionstatement : WHILE expression statements ENDWHILEstatement : expressionexpression : IDexpression : ID LEFT_SQUARE indexes RIGHT_SQUAREexpression : expression OR expressionexpression : expression AND expressionexpression : NOT expressionexpression : expression EQUAL expressionexpression : expression NOT_EQUAL expressionexpression : expression LESS expressionexpression : expression GREATER expressionexpression : expression LESS_EQUAL expressionexpression : expression GREATER_EQUAL expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : LEFT_PAREN expression RIGHT_PARENexpression : BOOLEANexpression : CHARexpression : STRINGexpression : REALexpression : INTEGER'
    
_lr_action_items = {'DECLARE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[3,3,-2,-29,-28,3,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,3,3,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,3,3,-44,-3,-30,-4,-16,3,-26,-27,-14,-30,3,-19,-20,3,3,-10,3,3,3,3,-18,3,-5,-25,]),'CONSTANT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[5,5,-2,-29,-28,5,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,5,5,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,5,5,-44,-3,-30,-4,-16,5,-26,-27,-14,-30,5,-19,-20,5,5,-10,5,5,5,5,-18,5,-5,-25,]),'ID':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,116,119,120,121,],[4,4,-2,22,-29,25,-28,38,41,41,44,4,41,41,41,-45,-46,-47,-48,-49,-1,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-13,-15,-17,-29,70,4,4,-33,75,-9,41,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,41,41,41,4,41,41,41,4,-44,-3,-30,41,-4,-16,4,41,-22,-26,-27,41,41,-14,-30,4,-19,-20,-21,4,4,41,-10,4,4,4,4,41,41,-18,4,120,121,-5,-25,]),'INPUT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[7,7,-2,-29,-28,7,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,7,7,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,7,7,-44,-3,-30,-4,-16,7,-26,-27,-14,-30,7,-19,-20,7,7,-10,7,7,7,7,-18,7,-5,-25,]),'OUTPUT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[8,8,-2,-29,-28,8,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,8,8,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,8,8,-44,-3,-30,-4,-16,8,-26,-27,-14,-30,8,-19,-20,8,8,-10,8,8,8,8,-18,8,-5,-25,]),'IF':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[9,9,-2,-29,-28,9,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,9,9,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,9,9,-44,-3,-30,-4,-16,9,-26,-27,-14,-30,9,-19,-20,9,9,-10,9,9,9,9,-18,9,-5,-25,]),'CASE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[10,10,-2,-29,-28,10,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,10,10,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,10,10,-44,-3,-30,-4,-16,10,-26,-27,-14,-30,10,-19,-20,10,10,-10,10,10,10,10,-18,10,-5,-25,]),'FOR':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[11,11,-2,-29,-28,11,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,11,11,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,11,11,-44,-3,-30,-4,-16,11,-26,-27,-14,-30,11,-19,-20,11,11,-10,11,11,11,11,-18,11,-5,-25,]),'REPEAT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[12,12,-2,-29,-28,12,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,12,12,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,12,12,-44,-3,-30,-4,-16,12,-26,-27,-14,-30,12,-19,-20,12,12,-10,12,12,12,12,-18,12,-5,-25,]),'WHILE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,89,90,94,95,96,97,98,100,101,106,107,108,109,110,114,115,120,121,],[13,13,-2,-29,-28,13,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,13,13,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,13,13,-44,-3,-30,-4,-16,13,-26,-27,-14,-30,13,-19,-20,13,13,-10,13,13,13,13,-18,13,-5,-25,]),'NOT':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[14,14,-2,-29,-28,14,14,14,14,14,14,-45,-46,-47,-48,-49,-1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-13,-15,-17,-29,14,14,-33,-9,14,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,14,14,14,14,14,14,14,14,-44,-3,-30,14,-4,-16,14,14,-22,-26,-27,14,14,-14,-30,14,-19,-20,-21,14,14,14,-10,14,14,14,14,14,14,-18,14,-5,-25,]),'LEFT_PAREN':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[15,15,-2,-29,-28,15,15,15,15,15,15,-45,-46,-47,-48,-49,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-13,-15,-17,-29,15,15,-33,-9,15,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,15,15,15,15,15,15,15,15,-44,-3,-30,15,-4,-16,15,15,-22,-26,-27,15,15,-14,-30,15,-19,-20,-21,15,15,15,-10,15,15,15,15,15,15,-18,15,-5,-25,]),'BOOLEAN':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[16,16,-2,-29,-28,16,16,16,16,16,16,-45,-46,-47,-48,-49,-1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-13,-15,-17,-29,16,16,-33,-9,16,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,16,16,16,16,16,16,16,16,-44,-3,-30,16,-4,-16,16,16,-22,-26,-27,16,16,-14,-30,16,-19,-20,-21,16,16,16,-10,16,16,16,16,16,16,-18,16,-5,-25,]),'CHAR':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[17,17,-2,-29,-28,17,17,17,17,17,17,-45,-46,-47,-48,-49,-1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-13,-15,-17,-29,17,17,-33,-9,17,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,17,17,17,17,17,17,17,17,-44,-3,-30,17,-4,-16,17,17,-22,-26,-27,17,17,-14,-30,17,-19,-20,-21,17,17,17,-10,17,17,17,17,17,17,-18,17,-5,-25,]),'STRING':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[18,18,-2,-29,-28,18,18,18,18,18,18,-45,-46,-47,-48,-49,-1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-15,-17,-29,18,18,-33,-9,18,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,18,18,18,18,18,18,18,18,-44,-3,-30,18,-4,-16,18,18,-22,-26,-27,18,18,-14,-30,18,-19,-20,-21,18,18,18,-10,18,18,18,18,18,18,-18,18,-5,-25,]),'REAL':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[19,19,-2,-29,-28,19,19,19,19,19,19,-45,-46,-47,-48,-49,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-15,-17,-29,19,19,-33,-9,19,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,19,19,19,19,19,19,19,19,-44,-3,-30,19,-4,-16,19,19,-22,-26,-27,19,19,-14,-30,19,-19,-20,-21,19,19,19,-10,19,19,19,19,19,19,-18,19,-5,-25,]),'INTEGER':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,98,99,100,101,102,106,107,108,109,110,112,113,114,115,120,121,],[20,20,-2,-29,-28,20,20,20,20,20,20,-45,-46,-47,-48,-49,-1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-13,-15,-17,-29,20,20,-33,-9,20,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,20,20,20,20,20,20,20,20,-44,-3,-30,20,-4,-16,20,20,-22,-26,-27,20,20,-14,-30,20,-19,-20,-21,20,20,20,-10,20,20,20,20,20,20,-18,20,-5,-25,]),'$end':([1,2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,89,90,94,95,97,98,106,114,120,121,],[0,-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,-26,-27,-14,-30,-19,-20,-10,-18,-5,-25,]),'UNTIL':([2,4,6,16,17,18,19,20,21,38,39,40,41,45,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,89,90,94,95,97,98,106,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,72,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,-26,-27,-14,-30,-19,-20,-10,-18,-5,-25,]),'ENDWHILE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,73,74,75,77,79,81,89,90,94,95,97,98,106,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,90,-44,-3,-30,-4,-16,-26,-27,-14,-30,-19,-20,-10,-18,-5,-25,]),'ELSE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,83,89,90,94,95,97,98,106,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,96,-26,-27,-14,-30,-19,-20,-10,-18,-5,-25,]),'ENDIF':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,83,89,90,94,95,97,98,106,107,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,97,-26,-27,-14,-30,-19,-20,-10,114,-18,-5,-25,]),'ENDCASE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,84,85,89,90,94,95,97,98,99,106,108,109,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,98,-22,-26,-27,-14,-30,-19,-20,-21,-10,-23,-24,-18,-5,-25,]),'OTHERWISE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,70,74,75,77,79,81,84,85,89,90,94,95,97,98,99,106,108,109,114,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,87,-44,-3,-30,-4,-16,87,-22,-26,-27,-14,-30,-19,-20,-21,-10,-23,-24,-18,-5,-25,]),'NEXT':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,89,90,94,95,97,98,106,114,115,120,121,],[-2,-29,-28,-45,-46,-47,-48,-49,-1,-13,-15,-17,-29,-33,-9,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-3,-30,-4,-16,-26,-27,-14,-30,-19,-20,-10,-18,119,-5,-25,]),'ASSIGN':([4,44,77,],[23,71,92,]),'LEFT_SQUARE':([4,38,41,76,],[24,66,68,91,]),'OR':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,26,-45,-46,-47,-48,-49,26,-29,26,26,-33,26,26,26,-31,26,26,26,26,26,26,26,26,26,26,26,-44,-30,26,26,26,26,26,-30,26,26,26,26,]),'AND':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,27,-45,-46,-47,-48,-49,27,-29,27,27,-33,27,27,27,-31,-32,27,27,27,27,27,27,27,27,27,27,-44,-30,27,27,27,27,27,-30,27,27,27,27,]),'EQUAL':([4,6,16,17,18,19,20,25,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,28,-45,-46,-47,-48,-49,53,28,-29,28,28,-33,28,28,28,-31,-32,-34,-35,-36,-37,-38,-39,28,28,28,28,-44,-30,28,28,28,28,28,-30,28,28,28,28,]),'NOT_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,29,-45,-46,-47,-48,-49,29,-29,29,29,-33,29,29,29,-31,-32,-34,-35,-36,-37,-38,-39,29,29,29,29,-44,-30,29,29,29,29,29,-30,29,29,29,29,]),'LESS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,30,-45,-46,-47,-48,-49,30,-29,30,30,-33,30,30,30,-31,-32,-34,-35,-36,-37,-38,-39,30,30,30,30,-44,-30,30,30,30,30,30,-30,30,30,30,30,]),'GREATER':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,31,-45,-46,-47,-48,-49,31,-29,31,31,-33,31,31,31,-31,-32,-34,-35,-36,-37,-38,-39,31,31,31,31,-44,-30,31,31,31,31,31,-30,31,31,31,31,]),'LESS_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,32,-45,-46,-47,-48,-49,32,-29,32,32,-33,32,32,32,-31,-32,-34,-35,-36,-37,-38,-39,32,32,32,32,-44,-30,32,32,32,32,32,-30,32,32,32,32,]),'GREATER_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,33,-45,-46,-47,-48,-49,33,-29,33,33,-33,33,33,33,-31,-32,-34,-35,-36,-37,-38,-39,33,33,33,33,-44,-30,33,33,33,33,33,-30,33,33,33,33,]),'MUL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,34,-45,-46,-47,-48,-49,34,-29,34,34,-33,34,34,34,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,34,34,-44,-30,34,34,34,34,34,-30,34,34,34,34,]),'DIV':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,35,-45,-46,-47,-48,-49,35,-29,35,35,-33,35,35,35,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,35,35,-44,-30,35,35,35,35,35,-30,35,35,35,35,]),'PLUS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,36,-45,-46,-47,-48,-49,36,-29,36,36,-33,36,36,36,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-30,36,36,36,36,36,-30,36,36,36,36,]),'MINUS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,89,93,95,105,106,110,118,],[-29,37,-45,-46,-47,-48,-49,37,-29,37,37,-33,37,37,37,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-30,37,37,37,37,37,-30,37,37,37,37,]),'OF':([10,111,],[43,116,]),'COMMA':([16,17,18,19,20,39,40,41,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,74,80,81,82,86,93,95,103,104,117,118,],[-45,-46,-47,-48,-49,67,-17,-29,-33,78,-12,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,78,-16,78,78,-11,-30,112,-7,-6,-8,]),'THEN':([16,17,18,19,20,41,42,47,54,55,56,57,58,59,60,61,62,63,64,65,74,95,],[-45,-46,-47,-48,-49,-29,69,-33,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-30,]),'RIGHT_PAREN':([16,17,18,19,20,41,47,48,54,55,56,57,58,59,60,61,62,63,64,65,74,95,],[-45,-46,-47,-48,-49,-29,-33,74,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-30,]),'RIGHT_SQUARE':([16,17,18,19,20,41,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,74,80,82,93,95,103,104,117,118,],[-45,-46,-47,-48,-49,-29,-33,77,-12,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,94,95,-11,-30,111,-7,-6,-8,]),'COLON':([16,17,18,19,20,22,41,47,52,54,55,56,57,58,59,60,61,62,63,64,65,74,86,87,93,95,105,],[-45,-46,-47,-48,-49,49,-29,-33,-12,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,100,101,-11,-30,113,]),'TO':([16,17,18,19,20,41,47,54,55,56,57,58,59,60,61,62,63,64,65,74,88,95,],[-45,-46,-47,-48,-49,-29,-33,-31,-32,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,102,-30,]),'ARRAY':([49,],[76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,12,46,69,96,100,101,110,],[1,45,73,83,107,108,109,115,]),'statement':([0,1,12,45,46,69,73,83,96,100,101,107,108,109,110,115,],[2,21,2,21,2,2,21,21,2,2,2,21,21,21,2,21,]),'expression':([0,1,8,9,12,13,14,15,23,24,26,27,28,29,30,31,32,33,34,35,36,37,45,46,53,66,67,68,69,70,71,72,73,78,83,84,91,92,96,100,101,102,107,108,109,110,112,113,115,],[6,6,40,42,6,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,6,6,79,52,81,52,6,52,88,89,6,93,6,52,105,106,6,6,6,110,6,6,6,6,105,118,6,]),'output_expression':([8,],[39,]),'indexes':([24,66,68,70,84,],[51,80,82,86,86,]),'cases':([70,],[84,]),'case':([70,84,],[85,99,]),'dimensions':([91,],[103,]),'dimension':([91,112,],[104,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parse.py',12),
  ('statements -> statement','statements',1,'p_statements','parse.py',13),
  ('statement -> DECLARE ID COLON ID','statement',4,'p_declare_statement','parse.py',22),
  ('statement -> CONSTANT ID EQUAL expression','statement',4,'p_const_declare_statement','parse.py',26),
  ('statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID','statement',9,'p_array_declare_statement','parse.py',30),
  ('dimensions -> dimensions COMMA dimension','dimensions',3,'p_dimensions_expression','parse.py',34),
  ('dimensions -> dimension','dimensions',1,'p_dimensions_expression','parse.py',35),
  ('dimension -> expression COLON expression','dimension',3,'p_dimension_expression','parse.py',44),
  ('statement -> ID ASSIGN expression','statement',3,'p_assign_statement','parse.py',48),
  ('statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression','statement',6,'p_array_assign_statement','parse.py',52),
  ('indexes -> indexes COMMA expression','indexes',3,'p_indexes','parse.py',56),
  ('indexes -> expression','indexes',1,'p_indexes','parse.py',57),
  ('statement -> INPUT ID','statement',2,'p_input_statement','parse.py',66),
  ('statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE','statement',5,'p_array_input','parse.py',70),
  ('statement -> OUTPUT output_expression','statement',2,'p_output_statement','parse.py',74),
  ('output_expression -> output_expression COMMA expression','output_expression',3,'p_output_expression','parse.py',78),
  ('output_expression -> expression','output_expression',1,'p_output_expression','parse.py',79),
  ('statement -> IF expression THEN statements ELSE statements ENDIF','statement',7,'p_if_statement','parse.py',88),
  ('statement -> IF expression THEN statements ENDIF','statement',5,'p_if_statement','parse.py',89),
  ('statement -> CASE OF ID cases ENDCASE','statement',5,'p_case_statement','parse.py',96),
  ('cases -> cases case','cases',2,'p_cases','parse.py',99),
  ('cases -> case','cases',1,'p_cases','parse.py',100),
  ('case -> indexes COLON statements','case',3,'p_cases','parse.py',102),
  ('case -> OTHERWISE COLON statements','case',3,'p_cases','parse.py',103),
  ('statement -> FOR ID ASSIGN expression TO expression statements NEXT ID','statement',9,'p_for_statement','parse.py',106),
  ('statement -> REPEAT statements UNTIL expression','statement',4,'p_repeat_statement','parse.py',109),
  ('statement -> WHILE expression statements ENDWHILE','statement',4,'p_while_statement','parse.py',112),
  ('statement -> expression','statement',1,'p_expression_statement','parse.py',115),
  ('expression -> ID','expression',1,'p_id_expression','parse.py',119),
  ('expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE','expression',4,'p_array_id_expression','parse.py',123),
  ('expression -> expression OR expression','expression',3,'p_or_expression','parse.py',127),
  ('expression -> expression AND expression','expression',3,'p_and_expression','parse.py',131),
  ('expression -> NOT expression','expression',2,'p_not_expression','parse.py',135),
  ('expression -> expression EQUAL expression','expression',3,'p_equal_expression','parse.py',139),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_not_equal_expression','parse.py',143),
  ('expression -> expression LESS expression','expression',3,'p_less_expression','parse.py',147),
  ('expression -> expression GREATER expression','expression',3,'p_greater_expression','parse.py',151),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_less_equal_expression','parse.py',155),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_greater_equal_expression','parse.py',159),
  ('expression -> expression MUL expression','expression',3,'p_mul_expression','parse.py',163),
  ('expression -> expression DIV expression','expression',3,'p_div_expression','parse.py',167),
  ('expression -> expression PLUS expression','expression',3,'p_plus_expression','parse.py',171),
  ('expression -> expression MINUS expression','expression',3,'p_minus_expression','parse.py',175),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_paren_expression','parse.py',180),
  ('expression -> BOOLEAN','expression',1,'p_boolean_expression','parse.py',185),
  ('expression -> CHAR','expression',1,'p_char_expression','parse.py',189),
  ('expression -> STRING','expression',1,'p_string_expression','parse.py',193),
  ('expression -> REAL','expression',1,'p_real_expression','parse.py',197),
  ('expression -> INTEGER','expression',1,'p_int_expression','parse.py',201),
]
