
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsleftPLUSMINUSleftMULDIVleftLESSGREATERLESS_EQUALGREATER_EQUALEQUALNOT_EQUALleftANDleftORleftNOTAND ARRAY ASSIGN BOOLEAN CALL CASE CHAR CLASS COLON COMMA CONSTANT DECLARE DIV DOT ELSE ENDCASE ENDFUNCTION ENDIF ENDPROCEDURE ENDTYPE ENDWHILE EQUAL FOR FUNCTION GREATER GREATER_EQUAL ID IF INHERITS INPUT INTEGER LEFT_BRACE LEFT_PAREN LEFT_SQUARE LESS LESS_EQUAL MINUS MUL NEW NEXT NOT NOT_EQUAL OF OR OTHERWISE OUTPUT PLUS POINTER PRIVATE PROCEDURE PUBLIC REAL REPEAT RETURN RETURNS RIGHT_BRACE RIGHT_PAREN RIGHT_SQUARE STRING THEN TO TYPE UNTIL WHILEstatements : statements statement\n            | statementstatement : DECLARE ID COLON IDstatement : CONSTANT ID EQUAL expressionstatement : DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID\n        dimensions : dimensions COMMA dimension\n            | dimension\n        dimension : expression COLON expressionstatement : ID ASSIGN expressionstatement : ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expressionindexes : indexes COMMA expression\n            | expression\n            | expression TO expressionstatement : INPUT IDstatement : OUTPUT expressionstatement : IF expression THEN statements ENDIF\n            | IF expression THEN statements ELSE statements ENDIFstatement : CASE OF ID cases ENDCASEcases : cases case\n            | case\n\n        case : indexes COLON statements\n            | OTHERWISE COLON statementsstatement : FOR ID ASSIGN expression TO expression statements NEXT IDstatement : REPEAT statements UNTIL expressionstatement : WHILE expression statements ENDWHILEstatement : expressionexpression : IDexpression : expression OR expressionexpression : expression AND expressionexpression : NOT expressionexpression : expression EQUAL expressionexpression : expression NOT_EQUAL expressionexpression : expression LESS expressionexpression : expression GREATER expressionexpression : expression LESS_EQUAL expressionexpression : expression GREATER_EQUAL expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : CHARexpression : STRINGexpression : REALexpression : INTEGER'
    
_lr_action_items = {'DECLARE':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[3,3,-2,-27,-26,3,-41,-42,-43,-44,-1,-14,-15,-27,3,3,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,3,3,-3,-4,3,-24,-25,-16,3,-18,3,3,-10,3,3,3,3,-17,3,-5,-23,]),'CONSTANT':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[5,5,-2,-27,-26,5,-41,-42,-43,-44,-1,-14,-15,-27,5,5,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,5,5,-3,-4,5,-24,-25,-16,5,-18,5,5,-10,5,5,5,5,-17,5,-5,-23,]),'ID':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,105,108,109,110,],[4,4,-2,20,-27,23,-26,36,38,38,41,4,38,38,-41,-42,-43,-44,-1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-14,-15,-27,63,4,4,-30,67,-9,38,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,4,38,38,38,4,-3,38,38,-4,4,38,-20,-24,-25,38,38,-16,4,-18,-19,4,4,38,-10,4,4,4,4,38,38,-17,4,109,110,-5,-23,]),'INPUT':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[7,7,-2,-27,-26,7,-41,-42,-43,-44,-1,-14,-15,-27,7,7,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,7,7,-3,-4,7,-24,-25,-16,7,-18,7,7,-10,7,7,7,7,-17,7,-5,-23,]),'OUTPUT':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[8,8,-2,-27,-26,8,-41,-42,-43,-44,-1,-14,-15,-27,8,8,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,8,8,-3,-4,8,-24,-25,-16,8,-18,8,8,-10,8,8,8,8,-17,8,-5,-23,]),'IF':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[9,9,-2,-27,-26,9,-41,-42,-43,-44,-1,-14,-15,-27,9,9,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,9,9,-3,-4,9,-24,-25,-16,9,-18,9,9,-10,9,9,9,9,-17,9,-5,-23,]),'CASE':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[10,10,-2,-27,-26,10,-41,-42,-43,-44,-1,-14,-15,-27,10,10,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,10,10,-3,-4,10,-24,-25,-16,10,-18,10,10,-10,10,10,10,10,-17,10,-5,-23,]),'FOR':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[11,11,-2,-27,-26,11,-41,-42,-43,-44,-1,-14,-15,-27,11,11,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,11,11,-3,-4,11,-24,-25,-16,11,-18,11,11,-10,11,11,11,11,-17,11,-5,-23,]),'REPEAT':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[12,12,-2,-27,-26,12,-41,-42,-43,-44,-1,-14,-15,-27,12,12,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,12,12,-3,-4,12,-24,-25,-16,12,-18,12,12,-10,12,12,12,12,-17,12,-5,-23,]),'WHILE':([0,1,2,4,6,12,15,16,17,18,19,36,37,38,42,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,72,73,79,80,85,86,87,89,90,95,96,97,98,99,103,104,109,110,],[13,13,-2,-27,-26,13,-41,-42,-43,-44,-1,-14,-15,-27,13,13,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,13,13,-3,-4,13,-24,-25,-16,13,-18,13,13,-10,13,13,13,13,-17,13,-5,-23,]),'NOT':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,109,110,],[14,14,-2,-27,-26,14,14,14,14,14,-41,-42,-43,-44,-1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-14,-15,-27,14,14,-30,-9,14,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,14,14,14,14,14,-3,14,14,-4,14,14,-20,-24,-25,14,14,-16,14,-18,-19,14,14,14,-10,14,14,14,14,14,14,-17,14,-5,-23,]),'CHAR':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,109,110,],[15,15,-2,-27,-26,15,15,15,15,15,-41,-42,-43,-44,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-14,-15,-27,15,15,-30,-9,15,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,15,15,15,15,15,-3,15,15,-4,15,15,-20,-24,-25,15,15,-16,15,-18,-19,15,15,15,-10,15,15,15,15,15,15,-17,15,-5,-23,]),'STRING':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,109,110,],[16,16,-2,-27,-26,16,16,16,16,16,-41,-42,-43,-44,-1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-14,-15,-27,16,16,-30,-9,16,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,16,16,16,16,16,-3,16,16,-4,16,16,-20,-24,-25,16,16,-16,16,-18,-19,16,16,16,-10,16,16,16,16,16,16,-17,16,-5,-23,]),'REAL':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,109,110,],[17,17,-2,-27,-26,17,17,17,17,17,-41,-42,-43,-44,-1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-14,-15,-27,17,17,-30,-9,17,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,17,17,17,17,17,-3,17,17,-4,17,17,-20,-24,-25,17,17,-16,17,-18,-19,17,17,17,-10,17,17,17,17,17,17,-17,17,-5,-23,]),'INTEGER':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,79,80,81,82,85,86,87,88,89,90,91,95,96,97,98,99,101,102,103,104,109,110,],[18,18,-2,-27,-26,18,18,18,18,18,-41,-42,-43,-44,-1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-14,-15,-27,18,18,-30,-9,18,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,18,18,18,18,18,-3,18,18,-4,18,18,-20,-24,-25,18,18,-16,18,-18,-19,18,18,18,-10,18,18,18,18,18,18,-17,18,-5,-23,]),'$end':([1,2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,79,80,85,87,95,103,109,110,],[0,-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,-24,-25,-16,-18,-10,-17,-5,-23,]),'UNTIL':([2,4,6,15,16,17,18,19,36,37,38,42,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,79,80,85,87,95,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,65,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,-24,-25,-16,-18,-10,-17,-5,-23,]),'ENDWHILE':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,79,80,85,87,95,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,80,-3,-4,-24,-25,-16,-18,-10,-17,-5,-23,]),'ENDIF':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,73,79,80,85,87,95,96,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,85,-24,-25,-16,-18,-10,103,-17,-5,-23,]),'ELSE':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,73,79,80,85,87,95,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,86,-24,-25,-16,-18,-10,-17,-5,-23,]),'ENDCASE':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,74,75,79,80,85,87,88,95,97,98,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,87,-20,-24,-25,-16,-18,-19,-10,-21,-22,-17,-5,-23,]),'OTHERWISE':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,63,67,72,74,75,79,80,85,87,88,95,97,98,103,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,77,-3,-4,77,-20,-24,-25,-16,-18,-19,-10,-21,-22,-17,-5,-23,]),'NEXT':([2,4,6,15,16,17,18,19,36,37,38,44,46,50,51,52,53,54,55,56,57,58,59,60,61,67,72,79,80,85,87,95,103,104,109,110,],[-2,-27,-26,-41,-42,-43,-44,-1,-14,-15,-27,-30,-9,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-3,-4,-24,-25,-16,-18,-10,-17,108,-5,-23,]),'ASSIGN':([4,41,69,],[21,64,82,]),'LEFT_SQUARE':([4,68,],[22,81,]),'OR':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,24,-41,-42,-43,-44,24,-27,24,24,-30,24,24,-28,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'AND':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,25,-41,-42,-43,-44,25,-27,25,25,-30,25,25,-28,-29,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'EQUAL':([4,6,15,16,17,18,23,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,26,-41,-42,-43,-44,49,26,-27,26,26,-30,26,26,-28,-29,-31,-32,-33,-34,-35,-36,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NOT_EQUAL':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,27,-41,-42,-43,-44,27,-27,27,27,-30,27,27,-28,-29,-31,-32,-33,-34,-35,-36,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LESS':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,28,-41,-42,-43,-44,28,-27,28,28,-30,28,28,-28,-29,-31,-32,-33,-34,-35,-36,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'GREATER':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,29,-41,-42,-43,-44,29,-27,29,29,-30,29,29,-28,-29,-31,-32,-33,-34,-35,-36,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LESS_EQUAL':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,30,-41,-42,-43,-44,30,-27,30,30,-30,30,30,-28,-29,-31,-32,-33,-34,-35,-36,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'GREATER_EQUAL':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,31,-41,-42,-43,-44,31,-27,31,31,-30,31,31,-28,-29,-31,-32,-33,-34,-35,-36,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'MUL':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,32,-41,-42,-43,-44,32,-27,32,32,-30,32,32,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,32,32,32,32,32,32,32,32,32,32,32,]),'DIV':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,33,-41,-42,-43,-44,33,-27,33,33,-30,33,33,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,33,33,33,33,33,33,33,33,33,33,33,]),'PLUS':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,34,-41,-42,-43,-44,34,-27,34,34,-30,34,34,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,34,34,34,34,34,34,34,34,34,]),'MINUS':([4,6,15,16,17,18,37,38,39,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,72,78,79,83,84,94,95,99,107,],[-27,35,-41,-42,-43,-44,35,-27,35,35,-30,35,35,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,35,35,35,35,35,35,35,35,35,]),'OF':([10,100,],[40,105,]),'THEN':([15,16,17,18,38,39,44,50,51,52,53,54,55,56,57,58,59,60,61,],[-41,-42,-43,-44,-27,62,-30,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,]),'TO':([15,16,17,18,38,44,48,50,51,52,53,54,55,56,57,58,59,60,61,78,],[-41,-42,-43,-44,-27,-30,71,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,91,]),'RIGHT_SQUARE':([15,16,17,18,38,44,47,48,50,51,52,53,54,55,56,57,58,59,60,61,83,84,92,93,106,107,],[-41,-42,-43,-44,-27,-30,69,-12,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-11,-13,100,-7,-6,-8,]),'COMMA':([15,16,17,18,38,44,47,48,50,51,52,53,54,55,56,57,58,59,60,61,76,83,84,92,93,106,107,],[-41,-42,-43,-44,-27,-30,70,-12,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,70,-11,-13,101,-7,-6,-8,]),'COLON':([15,16,17,18,20,38,44,48,50,51,52,53,54,55,56,57,58,59,60,61,76,77,83,84,94,],[-41,-42,-43,-44,45,-27,-30,-12,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,89,90,-11,-13,102,]),'ARRAY':([45,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,12,43,62,86,89,90,99,],[1,42,66,73,96,97,98,104,]),'statement':([0,1,12,42,43,62,66,73,86,89,90,96,97,98,99,104,],[2,19,2,19,2,2,19,19,2,2,2,19,19,19,2,19,]),'expression':([0,1,8,9,12,13,14,21,22,24,25,26,27,28,29,30,31,32,33,34,35,42,43,49,62,63,64,65,66,70,71,73,74,81,82,86,89,90,91,96,97,98,99,101,102,104,],[6,6,37,39,6,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,6,6,72,6,48,78,79,6,83,84,6,48,94,95,6,6,6,99,6,6,6,6,94,107,6,]),'indexes':([22,63,74,],[47,76,76,]),'cases':([63,],[74,]),'case':([63,74,],[75,88,]),'dimensions':([81,],[92,]),'dimension':([81,101,],[93,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parse.py',12),
  ('statements -> statement','statements',1,'p_statements','parse.py',13),
  ('statement -> DECLARE ID COLON ID','statement',4,'p_declare_statement','parse.py',22),
  ('statement -> CONSTANT ID EQUAL expression','statement',4,'p_const_declare_statement','parse.py',25),
  ('statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID','statement',9,'p_array_declare_statement','parse.py',28),
  ('dimensions -> dimensions COMMA dimension','dimensions',3,'p_array_declare_statement','parse.py',29),
  ('dimensions -> dimension','dimensions',1,'p_array_declare_statement','parse.py',30),
  ('dimension -> expression COLON expression','dimension',3,'p_array_declare_statement','parse.py',31),
  ('statement -> ID ASSIGN expression','statement',3,'p_assign_statement','parse.py',34),
  ('statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression','statement',6,'p_array_assign_statement','parse.py',38),
  ('indexes -> indexes COMMA expression','indexes',3,'p_indexes','parse.py',41),
  ('indexes -> expression','indexes',1,'p_indexes','parse.py',42),
  ('indexes -> expression TO expression','indexes',3,'p_indexes','parse.py',43),
  ('statement -> INPUT ID','statement',2,'p_input_statement','parse.py',46),
  ('statement -> OUTPUT expression','statement',2,'p_OUTPUT_statement','parse.py',50),
  ('statement -> IF expression THEN statements ENDIF','statement',5,'p_if_statement','parse.py',54),
  ('statement -> IF expression THEN statements ELSE statements ENDIF','statement',7,'p_if_statement','parse.py',55),
  ('statement -> CASE OF ID cases ENDCASE','statement',5,'p_case_statement','parse.py',59),
  ('cases -> cases case','cases',2,'p_cases','parse.py',63),
  ('cases -> case','cases',1,'p_cases','parse.py',64),
  ('case -> indexes COLON statements','case',3,'p_cases','parse.py',66),
  ('case -> OTHERWISE COLON statements','case',3,'p_cases','parse.py',67),
  ('statement -> FOR ID ASSIGN expression TO expression statements NEXT ID','statement',9,'p_for_statement','parse.py',70),
  ('statement -> REPEAT statements UNTIL expression','statement',4,'p_repeat_statement','parse.py',74),
  ('statement -> WHILE expression statements ENDWHILE','statement',4,'p_while_statement','parse.py',77),
  ('statement -> expression','statement',1,'p_expression_statement','parse.py',80),
  ('expression -> ID','expression',1,'p_id_expression','parse.py',83),
  ('expression -> expression OR expression','expression',3,'p_or_expression','parse.py',86),
  ('expression -> expression AND expression','expression',3,'p_and_expression','parse.py',89),
  ('expression -> NOT expression','expression',2,'p_not_expression','parse.py',92),
  ('expression -> expression EQUAL expression','expression',3,'p_equal_expression','parse.py',95),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_not_equal_expression','parse.py',98),
  ('expression -> expression LESS expression','expression',3,'p_less_expression','parse.py',101),
  ('expression -> expression GREATER expression','expression',3,'p_greater_expression','parse.py',104),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_less_equal_expression','parse.py',107),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_greater_equal_expression','parse.py',110),
  ('expression -> expression MUL expression','expression',3,'p_mul_expression','parse.py',113),
  ('expression -> expression DIV expression','expression',3,'p_div_expression','parse.py',116),
  ('expression -> expression PLUS expression','expression',3,'p_plus_expression','parse.py',119),
  ('expression -> expression MINUS expression','expression',3,'p_minus_expression','parse.py',122),
  ('expression -> CHAR','expression',1,'p_char_expression','parse.py',126),
  ('expression -> STRING','expression',1,'p_string_expression','parse.py',129),
  ('expression -> REAL','expression',1,'p_real_expression','parse.py',132),
  ('expression -> INTEGER','expression',1,'p_int_expression','parse.py',135),
]
