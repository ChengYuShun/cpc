
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsleftPLUSMINUSleftMULDIVleftLESSGREATERLESS_EQUALGREATER_EQUALEQUALNOT_EQUALleftANDleftORleftNOTAND ARRAY ASSIGN BOOLEAN CALL CASE CHAR CLASS COLON COMMA CONSTANT DECLARE DIV DOT ELSE ENDCASE ENDFUNCTION ENDIF ENDPROCEDURE ENDTYPE ENDWHILE EQUAL FOR FUNCTION GREATER GREATER_EQUAL ID IF INHERITS INPUT INTEGER LEFT_BRACE LEFT_PAREN LEFT_SQUARE LESS LESS_EQUAL MINUS MUL NEW NEXT NOT NOT_EQUAL OF OR OTHERWISE OUTPUT PLUS POINTER PRIVATE PROCEDURE PUBLIC REAL REPEAT RETURN RETURNS RIGHT_BRACE RIGHT_PAREN RIGHT_SQUARE SEMICOLON STRING THEN TO TYPE UNTIL WHILEstatements : statements statement\n            | statementstatement : DECLARE ID COLON IDstatement : CONSTANT ID EQUAL expressionstatement : DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF IDdimensions : dimensions COMMA dimension\n        | dimensiondimension : expression COLON expressionstatement : ID ASSIGN expressionstatement : ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expressionindexes : indexes COMMA expression\n            | expressionstatement : INPUT IDstatement : INPUT ID LEFT_SQUARE indexes RIGHT_SQUAREstatement : OUTPUT output_expressionoutput_expression : output_expression COMMA expression\n            | expressionstatement : IF expression THEN statements ELSE statements ENDIF\n            | IF expression THEN statements ENDIFstatement : CASE OF ID cases ENDCASEcases : cases case\n            | casecase : case_expression COLON statements SEMICOLON\n            | otherwise_statement SEMICOLONcase_expression : expression TO expression\n            | expressionotherwise_statement : OTHERWISE COLON statementsstatement : FOR ID ASSIGN expression TO expression statements NEXT IDstatement : REPEAT statements UNTIL expressionstatement : WHILE expression statements ENDWHILEstatement : expressionexpression : IDexpression : ID LEFT_SQUARE indexes RIGHT_SQUAREexpression : expression OR expressionexpression : expression AND expressionexpression : NOT expressionexpression : expression EQUAL expressionexpression : expression NOT_EQUAL expressionexpression : expression LESS expressionexpression : expression GREATER expressionexpression : expression LESS_EQUAL expressionexpression : expression GREATER_EQUAL expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : LEFT_PAREN expression RIGHT_PARENexpression : BOOLEANexpression : CHARexpression : STRINGexpression : REALexpression : INTEGER'
    
_lr_action_items = {'DECLARE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[3,3,-2,-32,-31,3,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,3,3,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,3,3,-47,-3,-33,-4,-16,3,-29,-30,-14,-33,3,-19,-20,3,3,-10,3,3,3,3,-18,3,-5,-28,]),'CONSTANT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[5,5,-2,-32,-31,5,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,5,5,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,5,5,-47,-3,-33,-4,-16,5,-29,-30,-14,-33,5,-19,-20,5,5,-10,5,5,5,5,-18,5,-5,-28,]),'ID':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,122,125,126,127,],[4,4,-2,22,-32,25,-31,38,41,41,44,4,41,41,41,-48,-49,-50,-51,-52,-1,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-13,-15,-17,-32,70,4,4,-36,75,-9,41,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,41,41,41,4,41,41,41,4,-47,-3,-33,41,-4,-16,4,41,-22,-29,-30,41,41,-14,-33,4,-19,-20,-21,4,-24,41,4,41,-10,4,4,4,4,41,41,-18,-23,4,126,127,-5,-28,]),'INPUT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[7,7,-2,-32,-31,7,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,7,7,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,7,7,-47,-3,-33,-4,-16,7,-29,-30,-14,-33,7,-19,-20,7,7,-10,7,7,7,7,-18,7,-5,-28,]),'OUTPUT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[8,8,-2,-32,-31,8,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,8,8,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,8,8,-47,-3,-33,-4,-16,8,-29,-30,-14,-33,8,-19,-20,8,8,-10,8,8,8,8,-18,8,-5,-28,]),'IF':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[9,9,-2,-32,-31,9,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,9,9,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,9,9,-47,-3,-33,-4,-16,9,-29,-30,-14,-33,9,-19,-20,9,9,-10,9,9,9,9,-18,9,-5,-28,]),'CASE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[10,10,-2,-32,-31,10,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,10,10,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,10,10,-47,-3,-33,-4,-16,10,-29,-30,-14,-33,10,-19,-20,10,10,-10,10,10,10,10,-18,10,-5,-28,]),'FOR':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[11,11,-2,-32,-31,11,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,11,11,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,11,11,-47,-3,-33,-4,-16,11,-29,-30,-14,-33,11,-19,-20,11,11,-10,11,11,11,11,-18,11,-5,-28,]),'REPEAT':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[12,12,-2,-32,-31,12,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,12,12,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,12,12,-47,-3,-33,-4,-16,12,-29,-30,-14,-33,12,-19,-20,12,12,-10,12,12,12,12,-18,12,-5,-28,]),'WHILE':([0,1,2,4,6,12,16,17,18,19,20,21,38,39,40,41,45,46,47,50,54,55,56,57,58,59,60,61,62,63,64,65,69,73,74,75,77,79,81,83,91,92,96,97,98,99,100,102,105,110,111,112,114,115,119,121,126,127,],[13,13,-2,-32,-31,13,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,13,13,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,13,13,-47,-3,-33,-4,-16,13,-29,-30,-14,-33,13,-19,-20,13,13,-10,13,13,13,13,-18,13,-5,-28,]),'NOT':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[14,14,-2,-32,-31,14,14,14,14,14,14,-48,-49,-50,-51,-52,-1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-13,-15,-17,-32,14,14,-36,-9,14,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,14,14,14,14,14,14,14,14,-47,-3,-33,14,-4,-16,14,14,-22,-29,-30,14,14,-14,-33,14,-19,-20,-21,14,-24,14,14,14,-10,14,14,14,14,14,14,-18,-23,14,-5,-28,]),'LEFT_PAREN':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[15,15,-2,-32,-31,15,15,15,15,15,15,-48,-49,-50,-51,-52,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-13,-15,-17,-32,15,15,-36,-9,15,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,15,15,15,15,15,15,15,15,-47,-3,-33,15,-4,-16,15,15,-22,-29,-30,15,15,-14,-33,15,-19,-20,-21,15,-24,15,15,15,-10,15,15,15,15,15,15,-18,-23,15,-5,-28,]),'BOOLEAN':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[16,16,-2,-32,-31,16,16,16,16,16,16,-48,-49,-50,-51,-52,-1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-13,-15,-17,-32,16,16,-36,-9,16,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,16,16,16,16,16,16,16,16,-47,-3,-33,16,-4,-16,16,16,-22,-29,-30,16,16,-14,-33,16,-19,-20,-21,16,-24,16,16,16,-10,16,16,16,16,16,16,-18,-23,16,-5,-28,]),'CHAR':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[17,17,-2,-32,-31,17,17,17,17,17,17,-48,-49,-50,-51,-52,-1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-13,-15,-17,-32,17,17,-36,-9,17,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,17,17,17,17,17,17,17,17,-47,-3,-33,17,-4,-16,17,17,-22,-29,-30,17,17,-14,-33,17,-19,-20,-21,17,-24,17,17,17,-10,17,17,17,17,17,17,-18,-23,17,-5,-28,]),'STRING':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[18,18,-2,-32,-31,18,18,18,18,18,18,-48,-49,-50,-51,-52,-1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-15,-17,-32,18,18,-36,-9,18,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,18,18,18,18,18,18,18,18,-47,-3,-33,18,-4,-16,18,18,-22,-29,-30,18,18,-14,-33,18,-19,-20,-21,18,-24,18,18,18,-10,18,18,18,18,18,18,-18,-23,18,-5,-28,]),'REAL':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[19,19,-2,-32,-31,19,19,19,19,19,19,-48,-49,-50,-51,-52,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-15,-17,-32,19,19,-36,-9,19,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,19,19,19,19,19,19,19,19,-47,-3,-33,19,-4,-16,19,19,-22,-29,-30,19,19,-14,-33,19,-19,-20,-21,19,-24,19,19,19,-10,19,19,19,19,19,19,-18,-23,19,-5,-28,]),'INTEGER':([0,1,2,4,6,8,9,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,110,111,112,114,115,117,118,119,120,121,126,127,],[20,20,-2,-32,-31,20,20,20,20,20,20,-48,-49,-50,-51,-52,-1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-13,-15,-17,-32,20,20,-36,-9,20,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,20,20,20,20,20,20,20,20,-47,-3,-33,20,-4,-16,20,20,-22,-29,-30,20,20,-14,-33,20,-19,-20,-21,20,-24,20,20,20,-10,20,20,20,20,20,20,-18,-23,20,-5,-28,]),'$end':([1,2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,91,92,96,97,99,100,110,119,126,127,],[0,-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,-29,-30,-14,-33,-19,-20,-10,-18,-5,-28,]),'UNTIL':([2,4,6,16,17,18,19,20,21,38,39,40,41,45,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,91,92,96,97,99,100,110,119,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,72,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,-29,-30,-14,-33,-19,-20,-10,-18,-5,-28,]),'ENDWHILE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,73,74,75,77,79,81,91,92,96,97,99,100,110,119,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,92,-47,-3,-33,-4,-16,-29,-30,-14,-33,-19,-20,-10,-18,-5,-28,]),'ELSE':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,83,91,92,96,97,99,100,110,119,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,98,-29,-30,-14,-33,-19,-20,-10,-18,-5,-28,]),'ENDIF':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,83,91,92,96,97,99,100,110,111,119,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,99,-29,-30,-14,-33,-19,-20,-10,119,-18,-5,-28,]),'SEMICOLON':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,87,91,92,96,97,99,100,110,112,114,119,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,103,-29,-30,-14,-33,-19,-20,-10,120,-27,-18,-5,-28,]),'NEXT':([2,4,6,16,17,18,19,20,21,38,39,40,41,47,50,54,55,56,57,58,59,60,61,62,63,64,65,74,75,77,79,81,91,92,96,97,99,100,110,119,121,126,127,],[-2,-32,-31,-48,-49,-50,-51,-52,-1,-13,-15,-17,-32,-36,-9,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-3,-33,-4,-16,-29,-30,-14,-33,-19,-20,-10,-18,125,-5,-28,]),'ASSIGN':([4,44,77,],[23,71,94,]),'LEFT_SQUARE':([4,38,41,76,],[24,66,68,93,]),'OR':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,26,-48,-49,-50,-51,-52,26,-32,26,26,-36,26,26,26,-34,26,26,26,26,26,26,26,26,26,26,26,-47,-33,26,26,26,26,26,26,-33,26,26,26,26,26,]),'AND':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,27,-48,-49,-50,-51,-52,27,-32,27,27,-36,27,27,27,-34,-35,27,27,27,27,27,27,27,27,27,27,-47,-33,27,27,27,27,27,27,-33,27,27,27,27,27,]),'EQUAL':([4,6,16,17,18,19,20,25,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,28,-48,-49,-50,-51,-52,53,28,-32,28,28,-36,28,28,28,-34,-35,-37,-38,-39,-40,-41,-42,28,28,28,28,-47,-33,28,28,28,28,28,28,-33,28,28,28,28,28,]),'NOT_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,29,-48,-49,-50,-51,-52,29,-32,29,29,-36,29,29,29,-34,-35,-37,-38,-39,-40,-41,-42,29,29,29,29,-47,-33,29,29,29,29,29,29,-33,29,29,29,29,29,]),'LESS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,30,-48,-49,-50,-51,-52,30,-32,30,30,-36,30,30,30,-34,-35,-37,-38,-39,-40,-41,-42,30,30,30,30,-47,-33,30,30,30,30,30,30,-33,30,30,30,30,30,]),'GREATER':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,31,-48,-49,-50,-51,-52,31,-32,31,31,-36,31,31,31,-34,-35,-37,-38,-39,-40,-41,-42,31,31,31,31,-47,-33,31,31,31,31,31,31,-33,31,31,31,31,31,]),'LESS_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,32,-48,-49,-50,-51,-52,32,-32,32,32,-36,32,32,32,-34,-35,-37,-38,-39,-40,-41,-42,32,32,32,32,-47,-33,32,32,32,32,32,32,-33,32,32,32,32,32,]),'GREATER_EQUAL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,33,-48,-49,-50,-51,-52,33,-32,33,33,-36,33,33,33,-34,-35,-37,-38,-39,-40,-41,-42,33,33,33,33,-47,-33,33,33,33,33,33,33,-33,33,33,33,33,33,]),'MUL':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,34,-48,-49,-50,-51,-52,34,-32,34,34,-36,34,34,34,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,34,34,-47,-33,34,34,34,34,34,34,-33,34,34,34,34,34,]),'DIV':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,35,-48,-49,-50,-51,-52,35,-32,35,35,-36,35,35,35,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,35,35,-47,-33,35,35,35,35,35,35,-33,35,35,35,35,35,]),'PLUS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,36,-48,-49,-50,-51,-52,36,-32,36,36,-36,36,36,36,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,36,36,36,36,36,36,-33,36,36,36,36,36,]),'MINUS':([4,6,16,17,18,19,20,40,41,42,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,74,77,79,81,88,90,91,95,97,109,110,113,115,124,],[-32,37,-48,-49,-50,-51,-52,37,-32,37,37,-36,37,37,37,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,37,37,37,37,37,37,-33,37,37,37,37,37,]),'OF':([10,116,],[43,122,]),'COMMA':([16,17,18,19,20,39,40,41,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,74,80,81,82,95,97,107,108,123,124,],[-48,-49,-50,-51,-52,67,-17,-32,-36,78,-12,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,78,-16,78,-11,-33,117,-7,-6,-8,]),'THEN':([16,17,18,19,20,41,42,47,54,55,56,57,58,59,60,61,62,63,64,65,74,97,],[-48,-49,-50,-51,-52,-32,69,-36,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,]),'RIGHT_PAREN':([16,17,18,19,20,41,47,48,54,55,56,57,58,59,60,61,62,63,64,65,74,97,],[-48,-49,-50,-51,-52,-32,-36,74,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-33,]),'RIGHT_SQUARE':([16,17,18,19,20,41,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,74,80,82,95,97,107,108,123,124,],[-48,-49,-50,-51,-52,-32,-36,77,-12,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,96,97,-11,-33,116,-7,-6,-8,]),'TO':([16,17,18,19,20,41,47,54,55,56,57,58,59,60,61,62,63,64,65,74,88,90,97,],[-48,-49,-50,-51,-52,-32,-36,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,104,106,-33,]),'COLON':([16,17,18,19,20,22,41,47,54,55,56,57,58,59,60,61,62,63,64,65,74,86,88,89,97,109,113,],[-48,-49,-50,-51,-52,49,-32,-36,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,102,-26,105,-33,118,-25,]),'ARRAY':([49,],[76,]),'OTHERWISE':([70,84,85,101,103,120,],[89,89,-22,-21,-24,-23,]),'ENDCASE':([84,85,101,103,120,],[100,-22,-21,-24,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,12,46,69,98,102,105,115,],[1,45,73,83,111,112,114,121,]),'statement':([0,1,12,45,46,69,73,83,98,102,105,111,112,114,115,121,],[2,21,2,21,2,2,21,21,2,2,2,21,21,21,2,21,]),'expression':([0,1,8,9,12,13,14,15,23,24,26,27,28,29,30,31,32,33,34,35,36,37,45,46,53,66,67,68,69,70,71,72,73,78,83,84,93,94,98,102,104,105,106,111,112,114,115,117,118,121,],[6,6,40,42,6,46,47,48,50,52,54,55,56,57,58,59,60,61,62,63,64,65,6,6,79,52,81,52,6,88,90,91,6,95,6,88,109,110,6,6,113,6,115,6,6,6,6,109,124,6,]),'output_expression':([8,],[39,]),'indexes':([24,66,68,],[51,80,82,]),'cases':([70,],[84,]),'case':([70,84,],[85,101,]),'case_expression':([70,84,],[86,86,]),'otherwise_statement':([70,84,],[87,87,]),'dimensions':([93,],[107,]),'dimension':([93,117,],[108,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parse.py',12),
  ('statements -> statement','statements',1,'p_statements','parse.py',13),
  ('statement -> DECLARE ID COLON ID','statement',4,'p_declare_statement','parse.py',22),
  ('statement -> CONSTANT ID EQUAL expression','statement',4,'p_const_declare_statement','parse.py',26),
  ('statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID','statement',9,'p_array_declare_statement','parse.py',30),
  ('dimensions -> dimensions COMMA dimension','dimensions',3,'p_dimensions_expression','parse.py',34),
  ('dimensions -> dimension','dimensions',1,'p_dimensions_expression','parse.py',35),
  ('dimension -> expression COLON expression','dimension',3,'p_dimension_expression','parse.py',44),
  ('statement -> ID ASSIGN expression','statement',3,'p_assign_statement','parse.py',48),
  ('statement -> ID LEFT_SQUARE indexes RIGHT_SQUARE ASSIGN expression','statement',6,'p_array_assign_statement','parse.py',52),
  ('indexes -> indexes COMMA expression','indexes',3,'p_indexes','parse.py',56),
  ('indexes -> expression','indexes',1,'p_indexes','parse.py',57),
  ('statement -> INPUT ID','statement',2,'p_input_statement','parse.py',66),
  ('statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE','statement',5,'p_array_input','parse.py',70),
  ('statement -> OUTPUT output_expression','statement',2,'p_output_statement','parse.py',74),
  ('output_expression -> output_expression COMMA expression','output_expression',3,'p_output_expression','parse.py',78),
  ('output_expression -> expression','output_expression',1,'p_output_expression','parse.py',79),
  ('statement -> IF expression THEN statements ELSE statements ENDIF','statement',7,'p_if_statement','parse.py',88),
  ('statement -> IF expression THEN statements ENDIF','statement',5,'p_if_statement','parse.py',89),
  ('statement -> CASE OF ID cases ENDCASE','statement',5,'p_case_statement','parse.py',96),
  ('cases -> cases case','cases',2,'p_cases','parse.py',100),
  ('cases -> case','cases',1,'p_cases','parse.py',101),
  ('case -> case_expression COLON statements SEMICOLON','case',4,'p_case','parse.py',110),
  ('case -> otherwise_statement SEMICOLON','case',2,'p_case','parse.py',111),
  ('case_expression -> expression TO expression','case_expression',3,'p_case_expression','parse.py',118),
  ('case_expression -> expression','case_expression',1,'p_case_expression','parse.py',119),
  ('otherwise_statement -> OTHERWISE COLON statements','otherwise_statement',3,'p_otherwise_statement','parse.py',126),
  ('statement -> FOR ID ASSIGN expression TO expression statements NEXT ID','statement',9,'p_for_statement','parse.py',130),
  ('statement -> REPEAT statements UNTIL expression','statement',4,'p_repeat_statement','parse.py',134),
  ('statement -> WHILE expression statements ENDWHILE','statement',4,'p_while_statement','parse.py',137),
  ('statement -> expression','statement',1,'p_expression_statement','parse.py',140),
  ('expression -> ID','expression',1,'p_id_expression','parse.py',144),
  ('expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE','expression',4,'p_array_id_expression','parse.py',148),
  ('expression -> expression OR expression','expression',3,'p_or_expression','parse.py',152),
  ('expression -> expression AND expression','expression',3,'p_and_expression','parse.py',156),
  ('expression -> NOT expression','expression',2,'p_not_expression','parse.py',160),
  ('expression -> expression EQUAL expression','expression',3,'p_equal_expression','parse.py',164),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_not_equal_expression','parse.py',168),
  ('expression -> expression LESS expression','expression',3,'p_less_expression','parse.py',172),
  ('expression -> expression GREATER expression','expression',3,'p_greater_expression','parse.py',176),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_less_equal_expression','parse.py',180),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_greater_equal_expression','parse.py',184),
  ('expression -> expression MUL expression','expression',3,'p_mul_expression','parse.py',188),
  ('expression -> expression DIV expression','expression',3,'p_div_expression','parse.py',192),
  ('expression -> expression PLUS expression','expression',3,'p_plus_expression','parse.py',196),
  ('expression -> expression MINUS expression','expression',3,'p_minus_expression','parse.py',200),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_paren_expression','parse.py',205),
  ('expression -> BOOLEAN','expression',1,'p_boolean_expression','parse.py',210),
  ('expression -> CHAR','expression',1,'p_char_expression','parse.py',214),
  ('expression -> STRING','expression',1,'p_string_expression','parse.py',218),
  ('expression -> REAL','expression',1,'p_real_expression','parse.py',222),
  ('expression -> INTEGER','expression',1,'p_int_expression','parse.py',226),
]
